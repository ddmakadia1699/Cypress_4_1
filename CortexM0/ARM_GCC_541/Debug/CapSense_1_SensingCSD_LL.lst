ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCSDConfigIDACs,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCSDConfigIDACs, %function
  24              	CapSense_1_SsCSDConfigIDACs:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \file CapSense_1_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \version 6.0
   4:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \see CapSense_1 v6.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_Structure.h"
  42:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  45:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  46:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  47:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************
  49:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * API Constants
  50:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ***************************************/
  51:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  53:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  54:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_AUTO_ZERO_EN)
  55:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_CSD_AZ_ENABLE_CFG                  (CapSense_1_CSD_AZ_EN_MASK)
  56:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  57:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_CSD_AZ_ENABLE_CFG                  (0uL)
  58:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_AUTO_ZERO_EN) */
  59:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  60:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
  61:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_HSCMP_SCAN_MASK                    (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  62:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_HSCMP_INVERT_MASK)
  63:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  64:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_HSCMP_SCAN_MASK                    (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  65:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
  66:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  67:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_HSCMP_INIT_MASK                        (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  68:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  69:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  70:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_1_SW_DSI_SEL_CMODPAD | CapSense
  71:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  72:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  73:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  75:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  78:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  79:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  80:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDAC ranges */
  81:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_IDAC_GAIN_8X == CapSense_1_CSD_IDAC_GAIN)
  82:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_MOD_RANGE         (CapSense_1_IDAC_MOD_RANGE_MASK)
  83:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_COMP_RANGE        (CapSense_1_IDAC_COMP_RANGE_MASK)
  84:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
  85:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_MOD_RANGE         (0u)
  86:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_COMP_RANGE        (0u)
  87:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_IDAC_GAIN_8X == CapSense_1_CSD_IDAC_GAIN) */
  88:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  90:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
  91:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_CSD_IDAC_CONFIG        (CapSense_1_IDAC_MOD_MODE_VARIABLE |\
  92:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_IDAC_COMP_MODE_FIXED |\
  93:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_MOD_RANGE 
  94:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_COMP_RANGE
  95:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
  96:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_CSD_IDAC_CONFIG        (CapSense_1_IDAC_MOD_MODE_VARIABLE |\
  97:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_MOD_RANGE)
  98:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
  99:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************
 103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Variables
 104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ***************************************/
 105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_configCsd = CapSense_1_DEFAULT_CSD_CONFIG;
 108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_configCsd = CapSense_1_DEFAULT_CSD_CONFIG | CapSense_1_DEFAULT_MODULATION_MOD
 110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static uint32 CapSense_1_counterResolution = CapSense_1_CNT_RESOLUTION_12_BITS;
 111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static uint8 CapSense_1_eleCsdDisconnectFlag = 0u;
 115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_E
 116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 CapSense_1_badConversionsNum = CapSense_1_BAD_CONVERSIONS_NUM;
 118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_ME
 119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
 121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a widget */
 122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 CapSense_1_calibratedIdac = 1u;
 123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint16 CapSense_1_calibratedRawcount = 1u;
 124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 CapSense_1_calibratedIdacRow = 1u;
 126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint16 CapSense_1_calibratedRawcountRow = 1u;
 127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /*(CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Static Function Prototypes
 133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /**
 136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \addtogroup group_c_internal
 138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \{
 139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** */
 140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsSetShieldDelay(uint32 delay);
 143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldTank(void);
 145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldElectrodes(void);
 148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
 152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
 153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateCheck(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt, ui
 154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDSetSingleIdacMode(void);
 156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDRestoreIdacMode(void);
 157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateOneSensor(uint32 rawLevel,
 159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                              uint8 *ptrIdac,
 160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                              uint8 *iDAC8Max);
 161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
 162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))  */
 163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsCSDSetFilterDelay(void);
 165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_INLINE static void CapSense_1_SsCSDClockRestart(void);
 167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDCmodPrecharge(void);
 169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDTriggerScan(void);
 170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDConfigIDACs(void);
 171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /** \}
 174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \endcond */
 175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsSetShieldDelay
 180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param delay
 190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         3 - 10ns delay
 198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 50ns delay
 199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         1 - 5ns delay
 202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 10ns delay
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         3 - 20ns delay
 204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsSetShieldDelay(uint32 delay)
 207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= (uint32)(~CapSense_1_CONFIG_SHIELD_DELAY_MASK);
 210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= (delay << CapSense_1_SHIELD_DELAY_SHIFT);
 211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDEnableShieldTank
 216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This function configures Csh pin
 220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldTank(void)
 228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue &= (uint32)(~(uint32)CapSense_1_CSH_HSIOM_MASK);
 234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= (CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HSIOM_SHIFT);
 235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  (CapSense_1_DISABLE == CapSense_1_CSDV2))
 239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_CSH_PC_PTR);
 241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_1_CSH_PC_MASK << CapSense_1_CSH_PC_SHIFT));
 242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_CSH_PC_STRONG_MODE << CapSense_1_CSH_PC_SHIFT);
 243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_PC_PTR, newRegValue);
 244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_CSH_DR_PTR);
 247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_1_DR_MASK << CapSense_1_CSH_SHIFT));
 248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (uint32)CapSense_1_CSH_DR_CONFIG;
 249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_DR_PTR, newRegValue);
 250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
 252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
 254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDEnableShieldElectrodes
 258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   the CapSense_1_shieldIoList structure.
 267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldElectrodes(void)
 270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 shieldIndex;
 273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_1_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set drive mode to Analog */
 277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr, CY_GET_REG32(CapSense_1_sh
 278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                            ~(CapSense_1_GPIO_PC_MASK <<(CapSense_1_shieldIoList[shieldIndex].shift)
 279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD or AMUXBUS B connection */
 281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr);
 282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_1_HSIOM_SEL_MASK << (CapSense_1_shieldIoList[shieldIndex]
 283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD */
 285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_HSIOM_SEL_CSD_SHIELD << (CapSense_1_shieldIoList[shieldI
 286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr, newRegValue);
 288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDDisableShieldElectrodes
 294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   stored in  the CapSense_1_shieldIoList structure.
 303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         void CapSense_1_SsCSDDisableShieldElectrodes(void)
 306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 shieldIndex;
 309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_1_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset HSIOM register (to GPIO state) */
 313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr, CY_GET_REG32(CapSense_1
 314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (uint32)~(uint32)(CapSense_1_HSIOM_SEL_MASK << CapSense_1_shieldIoList
 315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Update port configuration register (drive mode to ground)  */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr);
 318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_1_GPIO_PC_MASK << CapSense_1_shieldIoList[shieldIndex].sh
 319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_SNS_GROUND_CONNECT << CapSense_1_shieldIoList[shieldInde
 320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr, newRegValue);
 321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set logic 0 to port data register */
 323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].drPtr, CY_GET_REG32(CapSense_1_sh
 324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                            (uint32)~(uint32)((uint32)1u << CapSense_1_shieldIoList[shieldIndex].drS
 325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDSetModeSnsClockDivider
 333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_1_SENSE_PERIOD register with
 340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_1_configCsd variable with
 342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
 355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set configuration */
 357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= ~(CapSense_1_CONFIG_PRS_SELECT_MASK | CapSense_1_CSD_PRS_12_BIT);
 358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= snsClkSource;
 359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set sense clock divider */
 361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetSnsClockDivider(snsClkDivider);
 362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDSetFilterDelay
 369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   variable CapSense_1_configCsd
 377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsCSDSetFilterDelay(void)
 383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= ~CapSense_1_CONFIG_FILTER_DELAY_MASK;
 389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsdClk;
 392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
 395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_24MHZ;
 399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_48MHZ;
 403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
 406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConfigIDACs
 413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   enabled or disabled.
 421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDConfigIDACs(void)
 424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
  27              		.loc 1 424 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 9


 426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_IDAC_MOD_DEFAULT_CFG);
 427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDACB_PTR, CapSense_1_IDAC_COMP_DEFAULT_CFG);
 430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CapSense_1_DEFAULT_CSD_IDAC_CONFIG);
  32              		.loc 1 434 0
  33 0000 014A     		ldr	r2, .L2
  34 0002 024B     		ldr	r3, .L2+4
  35 0004 1A60     		str	r2, [r3]
 435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) &
 437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                 ~(CapSense_1_IDAC_MOD_MODE_MASK |
 438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                   CapSense_1_IDAC_MOD_MASK));
 439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) |
 440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_CSD_IDAC_CONFIG
 441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
  36              		.loc 1 443 0
  37              		@ sp needed
  38 0006 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0008 00020001 		.word	16777728
  43 000c 08000840 		.word	1074266120
  44              		.cfi_endproc
  45              	.LFE1:
  46              		.size	CapSense_1_SsCSDConfigIDACs, .-CapSense_1_SsCSDConfigIDACs
  47              		.section	.text.CapSense_1_SsCSDSetSingleIdacMode,"ax",%progbits
  48              		.align	2
  49              		.code	16
  50              		.thumb_func
  51              		.type	CapSense_1_SsCSDSetSingleIdacMode, %function
  52              	CapSense_1_SsCSDSetSingleIdacMode:
  53              	.LFB16:
 444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDInitialize
 448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This API initializes the CSD module.
 452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 10


 461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   9) Configures ModClk;
 464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
 468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   5) Enables the clocks;
 475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   6) Sets the shield delay;
 476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDInitialize(void)
 480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsClearCSDSensors();
 485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_BistDischargeExtCapacitors();
 488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     
 490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldElectrodes();
 494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Configure Csh */
 498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldTank();
 499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
 500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_SENSE_DUTY_SEL);
 506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure VREF */
 508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
 510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET);
 513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL);
 514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL);
 515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL);
 516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_AMBUF_PWR_MODE_OFF);
 517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_SW_SHIELD_SEL);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 11


 518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_P_SEL);
 519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_N_SEL);
 520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_HSCMP_CFG);
 521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_SW_BYP_SEL_SW_BYA_MASK;
 531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, newRegValue);
 532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
 534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD__CMOD_PAD == CapSense_1_CMOD_CONNECTION)
 535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE)
 536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #elif (CapSense_1_CSD__CSHIELD_PAD == CapSense_1_CMOD_CONNECTION)
 537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE)
 538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE)
 540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD__CMOD_PAD == CapSense_1_CMOD_CONNECTION) */
 541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure shield driving path */
 543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, CapSense_1_SW_BYP_SEL_SW_BYA_MASK | CapSense_1_
 546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect AMUXBUS-B to HSCMP positive input */
 548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, 0x00000000uL);
 549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure VREF */
 552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && (CapSense_1_ENABLE == CapSense_1_
 553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_1_SW_REFGEN_SEL_SW_IAIB_
 556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK;
 561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && (CapSense_1_ENABLE == CapSe
 563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV)
 565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFLOW (from AMBUF and RefGen is in bypass mode) to CSDCOMP when Vdda < 2 V */
 567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR, CapSense_1_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR, CapSense_1_REFGEN_LV);
 571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 12


 575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
 577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_IRH_STATIC
 578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                       CapSense_1_SW_AMUXBUF_SEL_SW_
 579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
 580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_NORM);
 583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_OFF);
 585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR, CapSense_1_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR, CapSense_1_REFGEN_HV);
 596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_HI);
 600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_IDAC_SINKING != CapSense_1_CSD_IDAC_CONFIG)
 602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_IRH_STATIC
 603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                       CapSense_1_SW_AMUXBUF_SEL_SW_
 604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
 605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
 607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV) */
 614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Configure IDACs mode */
 616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDConfigIDACs();
 617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure ModClk */
 619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsdClk);
 620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set other CSD configurations */
 622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetShieldDelay(CapSense_1_CSD_SHIELD_DELAY);
 624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Configure HW block filter delay */
 627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetFilterDelay();
 628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
 631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd |
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 13


 632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_SENSE_EN_MASK |
 633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_ENABLE_MASK);
 634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR, CapSense_1_CSD_AUTO_ZERO_TIME);
 638:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 639:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, 0x00000000);
 641:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR, CapSense_1_CSD_FINE_INIT_TIME);
 644:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 645:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 646:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 647:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure IDACs mode */
 649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigIDACs();
 650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 651:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
 652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 658:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsSetShieldDelay(CapSense_1_CSD_SHIELD_DELAY);
 659:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 661:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 662:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 664:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_C
 666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 667:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
 668:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 669:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) &&\
 670:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE))
 671:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 672:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigClock();
 673:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) &&\
 674:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE)) */
 675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 676:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 678:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDElectrodeCheck
 680:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 682:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 684:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****  * CapSense_1_CSDSetupWidgetExt() API and if yes disconnects them.
 685:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 686:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 687:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function checks if CapSense_1_eleCsdDisconnectFlag is set.
 688:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 14


 689:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_1_curSnsIOPtr and
 690:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_curFlashSnsPtr contains the previous data for Ganged
 691:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sensors.
 692:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 693:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDElectrodeCheck(void)
 695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 696:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 697:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
 698:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 699:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     if (CapSense_1_ENABLE == CapSense_1_eleCsdDisconnectFlag)
 701:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 702:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 703:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 704:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_
 706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 707:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 708:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal = CapSense_1_curFlashSnsPtr->numPins;
 709:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 710:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Get IO pointer  */
 711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
 712:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 714:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 do
 715:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
 716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curSnsIOPtr++;
 718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     tempVal--;
 719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 } while (0u != tempVal);
 720:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 722:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 723:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 725:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 726:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 727:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable sensor */
 728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 729:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 730:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_eleCsdDisconnectFlag = 0u;
 732:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 734:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 736:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 737:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDSetUpIdacs
 738:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 739:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 740:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 741:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 742:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 743:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 744:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 745:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 15


 746:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 747:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 748:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 749:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 750:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 751:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 752:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
 753:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 754:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 755:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDSetUpIdacs(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt)
 756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 757:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 758:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 interruptState;
 759:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 760:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 761:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 idacARegValue;
 762:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 763:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 764:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 idacBRegValue;
 765:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 766:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 767:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 769:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 770:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get IDACA Value */
 771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     idacARegValue = CY_GET_REG32(CapSense_1_IDAC_MOD_PTR);
 772:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 773:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDACA Value mask */
 774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     idacARegValue &= ~(CapSense_1_IDAC_MOD_VAL_MASK);
 775:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 776:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDACA value */
 777:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 778:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].numCols <= CapSense_1_sensorInde
 779:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 780:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_1_scanFreqIndex];
 781:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 782:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
 783:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 784:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_1_scanFreqIndex];
 785:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 786:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_1_scanFreqIndex];
 788:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 789:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 790:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update IDACA register with new value */
 791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, idacARegValue);
 792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 793:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 794:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 797:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get IDACB Value */
 798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue = CY_GET_REG32(CapSense_1_IDAC_COMP_PTR);
 799:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 800:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set IDACB Value mask */
 801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue &= ~(CapSense_1_IDAC_COMP_VAL_MASK);
 802:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 16


 803:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set IDACB value */
 804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue |= (uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex];
 805:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, idacBRegValue);
 808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 809:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 810:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 811:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 812:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 813:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 816:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN  | CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 818:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].numCols <= CapSense_1_sensorInde
 819:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 820:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 821:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 822:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN  | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 823:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 825:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 826:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get Idac Value */
 827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 828:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 829:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Idac Value mask */
 830:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_1_IDAC_MOD_MASK | CapSense_1_IDAC_COMP_MASK);
 832:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 833:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_1_IDAC_MOD_MASK);
 834:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 835:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 836:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Idac value */
 837:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (ptrIdacMod[CapSense_1_scanFreqIndex] |
 839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 840:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_IDAC_COMP_DATA_OFFSET));
 841:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 842:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= ptrIdacMod[CapSense_1_scanFreqIndex];
 843:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
 845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 847:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 848:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 850:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 852:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 853:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 854:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDGetNumberOfConversions
 855:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 856:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 857:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 858:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 859:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 17


 860:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 861:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 862:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 863:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 864:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param
 865:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 866:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  resolution The widget resolution.
 867:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 868:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 869:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 870:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 871:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 872:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 s
 873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 874:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
 875:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_1_ENABLE != CapSen
 876:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 877:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_1_ENABLE != 
 878:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 879:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         conversionsNum = (uint32)((1uL << resolution) - 1uL);
 881:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 882:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if(CapSense_1_ENABLE != CapSense_1_CSDV2_REF9P6UA_EN)
 883:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 884:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_RES16BIT == resolution)
 885:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 886:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 887:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 888:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 889:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsdClk;
 890:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 891:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 892:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 893:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_2_CYCLES;
 894:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 895:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 896:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 897:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_3_CYCLES;
 898:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 899:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
 900:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 901:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_4_CYCLES;
 902:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 903:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
 904:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_2_CYCLES;
 905:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 906:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 907:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2_REF9P6UA_EN) */
 908:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 910:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 912:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 914:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 915:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 18


 917:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         switch (snsClkSrc)
 918:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 919:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             case CapSense_1_CLK_SOURCE_PRS8:
 920:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             case CapSense_1_CLK_SOURCE_PRS12:
 921:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 922:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 break;
 924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             default:
 926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 break;
 927:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 928:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 929:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 930:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)) */
 931:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 934:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 935:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 938:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConfigClock
 939:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 940:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 941:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 942:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 943:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 944:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 945:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
 946:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 948:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDConfigClock(void)
 949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkDivider;
 951:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkSrc;
 952:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 953:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2WdgtRam;
 956:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 957:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
 958:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
 959:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_1_dsRam.snsCsdClk;
 960:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 961:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 962:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
 963:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIn
 964:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 965:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
 966:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 967:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 969:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
 970:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
 973:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 19


 974:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
 975:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 976:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_1_SsCSDInitialize() before */
 977:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
 979:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIndex)
 980:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
 982:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 983:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
 984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 986:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 987:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 990:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
 993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 994:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
 995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((CapSense_1_CLK_SOURCE_PRS8 == snsClkSrc) ||
 996:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_CLK_SOURCE_PRS12 == snsClkSrc))
 997:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
 999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1000:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1001:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1002:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1003:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1004:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
1007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         switch (snsClkSrc)
1008:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1009:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         case CapSense_1_CLK_SOURCE_PRS8:
1010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         case CapSense_1_CLK_SOURCE_PRS12:
1011:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Divide by 2 for PRS8/PRS12 mode */
1012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider >>= 1;
1013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
1014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = 1u;
1016:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1017:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             break;
1018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         default:
1020:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             break;
1021:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1023:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1024:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)) */
1025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1027:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1028:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1029:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1030:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDCalculateScanDuration
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 20


1031:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1033:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1035:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1036:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
1038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1039:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClk divider.
1040:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
1041:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1042:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_counterResolution global variable and used in
1043:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_SsCSDStartSample() function to trigger the scan process.
1044:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1045:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param wdgtIndex
1046:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1047:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1048:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1049:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDCalculateScanDuration(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt)
1050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1051:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1052:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
1053:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 snsClkDivider;
1054:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1055:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get Number Of Conversions */
1056:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
1057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkDivider = CapSense_1_dsRam.snsCsdClk;
1058:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1059:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1060:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1061:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIn
1062:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1063:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1064:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
1066:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1067:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1068:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1069:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
1070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1071:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1072:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
1073:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resolut
1075:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1076:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM_CNT_CONV_CN
1078:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1079:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapS
1081:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDSetupWidget
1087:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 21


1088:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1091:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1092:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CapSense_1_CSDScan() function to start scanning.
1093:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1094:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1095:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1096:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1097:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1098:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1099:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_1_CSDScan()
1101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called by the CapSense_1_SetupWidget() API if the
1107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  widgetId
1114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
1117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
1118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDSetupWidget(uint32 widgetId)
1121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
1125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_widgetIndex = (uint8)widgetId;
1128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
1130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDElectrodeCheck();
1138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2SnsFla
1142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update status register in Data structure */
1144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status &= ~CapSense_1_STATUS_WDGT0_MASK;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 22


1145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= CapSense_1_widgetIndex;
1146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set up scanning resolution (Number ofconversion for CSDv2) */
1148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDCalculateScanDuration(ptrWdgt);
1149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
1151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE))
1152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigClock();
1153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
1154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)) */
1155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDSetupWidgetExt
1160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  requires using the CapSense_1_CSDScanExt() function to initiate a scan.
1166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function does the same as CapSense_1_CSDSetupWidget() and also
1169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  does the following tasks:
1170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  next sensors in a widget.
1174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function is called to scan the sensor.
1177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget.
1189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
1190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
1191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  specific widget.
1196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1 Configuration header file defined as
1198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_<WidgetName>_SNS<SensorNumber>_ID
1199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 23


1202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
1205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
1208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
1210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
1211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
1213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_CSDSetupWidget(widgetId);
1215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      /* Setup Idac Value */
1217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
1222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConnectSensorExt(widgetId, sensorId);
1226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable sensor */
1228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curSnsIOPtr += CapSense_1_sensorIndex;
1229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Save sns pointer */
1234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr
1236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            CapSense_1_sensorIndex;
1237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_eleCsdDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
1240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_ISR_StartEx(&CapSense_1_CSDPostSingleScan);
1243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDStartSample
1247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Starts the CSD conversion.
1251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   the CapSense_1_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   block using CapSense_1_CSDConnectSns.
1256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2. Precharges Cmod;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 24


1259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
1261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDStartSample(void)
1264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 interruptState;
1267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif
1268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
1270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntDisable(CapSense_1_ISR_NUMBER);
1278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_HSCMP_INIT_MASK);
1281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
1283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd |
1284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_CONFIG_SENSE_EN_MASK |
1285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_CONFIG_ENABLE_MASK);
1286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CyDelayUs(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US);
1288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
1290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDCmodPrecharge();
1293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Trigger Scan */
1295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDTriggerScan();
1296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Third-generation HW block section */
1299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
1303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
1304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_PRECHARGE_CO
1305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
1306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_C
1307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
1308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
1309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDClockRestart();
1312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDCmodPrecharge();
1315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 25


1316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)
1317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyDelayCycles(CapSense_1_GLITCH_ELIMINATION_CYCLES);
1319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SNS_CLK_SOURCE != CapSense_1_CLK_SOURCE_DIRECT) */
1320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Trigger Scan */
1322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDTriggerScan();
1323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDScanExt
1331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  using the CapSense_1_CSDSetupWidgetExt() function to set up the a
1336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget.
1337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  by the CapSense_1_CSDSetupWidgetExt() function. It does the following
1341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  tasks:
1342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_1_dsRam structure.
1343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    4. Starts single scanning.
1346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidgetExt() API prior to calling this function.
1355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  by using the CapSense_1_CSDScanExt() function. In this case, calling
1357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidgetExt() is not required every time before the
1358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function. If a previous scan was triggered in
1359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  any other way - CapSense_1_Scan(), CapSense_1_ScanAllWidgets() or
1360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_RunTuner() - (see the CapSense_1_RunTuner() function
1361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  using the CapSense_1_CSDSetupWidgetExt() API prior to calling the
1363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function.
1364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt(), the CapSense_1_CSDDisconnectSns()
1367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  function can be used.
1368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDScanExt(void)
1371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 26


1373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= (CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BUSY);
1374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
1381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_ENABLE == CapSense_1_CSDV2)
1382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyDelayUs(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US);
1384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
1386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****               (CapSense_1_ENABLE == CapSense_1_CSDV2)*/
1387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDStartSample();
1389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDScan
1394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidget() function.
1399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CapSense_1_CSDSetupWidget() function. It does the following tasks:
1403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       the next sensors in a widget.
1407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called by the CapSense_1_Scan() API if the given
1410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
1411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status. The widget must be
1418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  preconfigured by the CapSense_1_CSDSetupWidget() function if any other
1419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDScan(void)
1423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetI
1426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      /*
1428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       * Update CapSense_1_sensorIndex with the first sensor in
1429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 27


1430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       */
1431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_sensorIndex = 0u;
1432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
1435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
1436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
1437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Setup Idac Value */
1444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****    CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].sta
1449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK))
1450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScanGanged);
1453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScan);
1458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConnectSensorExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorI
1461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
1465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         + CapSense_1_sensorIndex;
1466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable sensor */
1468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScan);
1472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Start scanning */
1475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_CSDScanExt();
1476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConnectSensorExt
1481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 28


1487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   PC registers.
1490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the widget.
1493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
1502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
1507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
1508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_GANGED_SNS_MASK ==
1512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig &
1513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK))
1514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get sns pointer */
1516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash 
1518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                sensorId;
1519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get number of ganged pins */
1521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             tempVal = CapSense_1_curFlashSnsPtr->numPins;
1522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get IO pointer  */
1524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
1525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             do
1528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr++;
1531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal--;
1532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             } while (0u != tempVal);
1533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect sensor */
1537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect sensor */
1541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 29


1544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDDisconnectSnsExt
1548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   is set to Shield.
1560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the widget.
1563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
1572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
1575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
1577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
1578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig &
1582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK) == CapSense_1_GANGED_SNS_MASK)
1583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get sns pointer */
1585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash 
1587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                sensorId;
1588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get number of ganged pins */
1590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             tempVal = CapSense_1_curFlashSnsPtr->numPins;
1591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get IO pointer  */
1593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
1594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             do
1597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr++;
1600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal--;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 30


1601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             } while (0u != tempVal);
1602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDConnectSns
1617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
1632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDConnectSns() function.
1635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  snsAddrPtr
1637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1638:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1639:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1641:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDConnectSns(CapSense_1_FLASH_IO_STRUCT const *snsAddrPtr)
1642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
1644:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8  interruptState;
1645:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinModeShift;
1646:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1647:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1648:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get offsets for sensor */
1649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1651:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_1_HSIOM_SEL_MASK << pinHSIOMShift);
1657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_1_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 31


1658:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1659:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_1_
1661:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1662:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1664:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1667:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1668:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1670:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDDisconnectSns
1671:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1672:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1673:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1674:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1676:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1677:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1678:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function works identically to CapSense_1_CSDConnectSns() except
1679:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1680:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1681:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1682:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1683:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1684:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1685:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1686:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDDisconnectSns() function.
1687:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1688:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  snsAddrPtr
1689:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1690:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1691:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1692:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1693:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDDisconnectSns(CapSense_1_FLASH_IO_STRUCT const *snsAddrPtr)
1694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1696:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
1697:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinModeShift;
1698:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1699:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) || \
1700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1701:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8  interruptState;
1702:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) && \
1703:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))) */
1704:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1707:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1708:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) ||  \
1709:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1710:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update HSIOM register to disconnect sensor */
1711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_1_HSIOM_
1712:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 32


1715:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update port configuration register (drive mode) for sensor */
1716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->pcPtr);
1717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_1_GPIO_PC_MASK << pinModeShift);
1718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= CapSense_1_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
1719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
1720:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1723:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set logic 0 to port data register */
1724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32
1725:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1726:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update port configuration register (drive mode to HiZ Analog) for sensor */
1727:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSens
1728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1729:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect to Shield */
1730:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK << pinH
1731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= (CapSense_1_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1732:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) && \
1734:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1736:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1737:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1738:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
1739:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1740:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
1741:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDSetSingleIdacMode
1742:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
1743:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1744:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
1745:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *  This function set single IDAC mode.
1746:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1747:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
1748:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Third-generation HW block: The function enables Modulator IDAC only in variable mod
1749:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Fourth-generation HW block: The function enables IDACA LEG1 in CSD mode, IDACA LEG2
1750:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1751:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
1752:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDSetSingleIdacMode(void)
1753:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
  54              		.loc 1 1753 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
1754:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
1755:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1757:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Enable IDACA LEG1 in CSD mode, IDACA LEG2 in GP mode */
1758:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_IDAC_MOD_PTR) &
1759:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                               CapSense_1_IDAC_MOD_VAL_MASK;
1760:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_IDAC_MOD_CALIBRATION_CFG;
1761:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, newRegValue);
1762:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1763:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
1764:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     newRegValue = CY_GET_REG32(CapSense_1_IDAC_COMP_PTR) & CapSense_1_IDAC_COMP_VAL
1765:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     newRegValue |= CapSense_1_IDAC_COMP_CALIBRATION_CFG;
1766:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, newRegValue);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 33


1767:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN */
1769:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
1770:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Enable Modulator IDAC only in variable mode */
1771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR) &
  59              		.loc 1 1771 0
  60 0000 044A     		ldr	r2, .L5
  61 0002 1168     		ldr	r1, [r2]
  62 0004 044B     		ldr	r3, .L5+4
  63 0006 0B40     		ands	r3, r1
  64              	.LVL0:
1772:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                               ~(CapSense_1_IDAC_MOD_MODE_MASK | CapSense_1_IDAC_COMP_MODE_MASK);
1773:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_IDAC_MOD_MODE_VARIABLE;
  65              		.loc 1 1773 0
  66 0008 8021     		movs	r1, #128
  67 000a 8900     		lsls	r1, r1, #2
  68 000c 0B43     		orrs	r3, r1
  69              	.LVL1:
1774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
  70              		.loc 1 1774 0
  71 000e 1360     		str	r3, [r2]
1775:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1776:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
  72              		.loc 1 1776 0
  73              		@ sp needed
  74 0010 7047     		bx	lr
  75              	.L6:
  76 0012 C046     		.align	2
  77              	.L5:
  78 0014 08000840 		.word	1074266120
  79 0018 FFFCFFFC 		.word	-50332417
  80              		.cfi_endproc
  81              	.LFE16:
  82              		.size	CapSense_1_SsCSDSetSingleIdacMode, .-CapSense_1_SsCSDSetSingleIdacMode
  83              		.section	.text.CapSense_1_SsCSDRestoreIdacMode,"ax",%progbits
  84              		.align	2
  85              		.code	16
  86              		.thumb_func
  87              		.type	CapSense_1_SsCSDRestoreIdacMode, %function
  88              	CapSense_1_SsCSDRestoreIdacMode:
  89              	.LFB17:
1777:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1778:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1779:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)) */
1780:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1781:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1782:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
1783:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1784:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDRestoreIdacMode
1786:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1788:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
1789:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *  This function restores IDAC configuration.
1790:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
1792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function restores Compensation IDAC if it is enabled.
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 34


1793:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1794:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
1795:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDRestoreIdacMode(void)
1796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
  90              		.loc 1 1796 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
1797:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Restore IDAC configuration */
1798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1799:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint32 newRegValue;
1800:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
1802:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
1803:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
1804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_IDAC_MOD_DEFAULT_CFG);
1805:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1806:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
1807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, CapSense_1_IDAC_COMP_DEFAULT_CFG);
1808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1809:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN */
1810:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
1811:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1812:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CapSense_1_DEFAULT_CSD_IDAC_CONFIG);
  95              		.loc 1 1812 0
  96 0000 014A     		ldr	r2, .L8
  97 0002 024B     		ldr	r3, .L8+4
  98 0004 1A60     		str	r2, [r3]
1813:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
1814:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) &
1815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                         ~(CapSense_1_IDAC_MOD_MODE_
1816:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) | CapSense_
1817:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1818:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1819:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
  99              		.loc 1 1819 0
 100              		@ sp needed
 101 0006 7047     		bx	lr
 102              	.L9:
 103              		.align	2
 104              	.L8:
 105 0008 00020001 		.word	16777728
 106 000c 08000840 		.word	1074266120
 107              		.cfi_endproc
 108              	.LFE17:
 109              		.size	CapSense_1_SsCSDRestoreIdacMode, .-CapSense_1_SsCSDRestoreIdacMode
 110              		.global	__aeabi_uidiv
 111              		.section	.text.CapSense_1_SsCSDCalibrateCheck,"ax",%progbits
 112              		.align	2
 113              		.code	16
 114              		.thumb_func
 115              		.type	CapSense_1_SsCSDCalibrateCheck, %function
 116              	CapSense_1_SsCSDCalibrateCheck:
 117              	.LFB18:
1820:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1821:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 35


1822:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
1823:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDCalibrateCheck
1824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
1825:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1826:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
1827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1828:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1829:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
1830:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function verifies calibration error based on maximum raw count level.
1831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1832:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param rawLevel The raw data level which should be reached during the
1833:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   calibration procedure.
1834:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param rawData  Calibrated raw counts.
1835:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1837:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
1841:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateCheck(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt, ui
1842:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 118              		.loc 1 1842 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL2:
 123 0000 70B5     		push	{r4, r5, r6, lr}
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 4, -16
 126              		.cfi_offset 5, -12
 127              		.cfi_offset 6, -8
 128              		.cfi_offset 14, -4
 129 0002 0E00     		movs	r6, r1
 130 0004 1500     		movs	r5, r2
 131              	.LVL3:
1843:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
1844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawCountsError;
1845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 minRawLevel = 0u;
1846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 132              		.loc 1 1846 0
 133 0006 0388     		ldrh	r3, [r0]
 134 0008 0124     		movs	r4, #1
 135 000a 9C40     		lsls	r4, r4, r3
 136 000c 013C     		subs	r4, r4, #1
 137              	.LVL4:
1847:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1848:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate the error in rawcounts for given resolution (round to floor) */
1849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawCountsError = ((maxRawLevel * CapSense_1_IDAC_MOD_MAX_CALIB_ERROR) /
 138              		.loc 1 1849 0
 139 000e A300     		lsls	r3, r4, #2
 140 0010 1B19     		adds	r3, r3, r4
 141 0012 5800     		lsls	r0, r3, #1
 142              	.LVL5:
 143 0014 6421     		movs	r1, #100
 144              	.LVL6:
 145 0016 FFF7FEFF 		bl	__aeabi_uidiv
 146              	.LVL7:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 36


 147 001a 0130     		adds	r0, r0, #1
 148              	.LVL8:
1850:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           CapSense_1_PERCENTAGE_100) + 1u;
1851:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1852:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get minimum and maximum range values */
1853:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((rawLevel + rawCountsError) <= maxRawLevel)
 149              		.loc 1 1853 0
 150 001c 8319     		adds	r3, r0, r6
 151 001e 9C42     		cmp	r4, r3
 152 0020 00D2     		bcs	.L11
1846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 153              		.loc 1 1846 0
 154 0022 2300     		movs	r3, r4
 155              	.L11:
 156              	.LVL9:
1854:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1855:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             maxRawLevel = rawLevel + rawCountsError;
1856:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1857:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (rawLevel >= rawCountsError)
 157              		.loc 1 1857 0
 158 0024 B042     		cmp	r0, r6
 159 0026 01D8     		bhi	.L14
1858:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1859:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             minRawLevel = rawLevel - rawCountsError;
 160              		.loc 1 1859 0
 161 0028 301A     		subs	r0, r6, r0
 162              	.LVL10:
 163 002a 00E0     		b	.L12
 164              	.LVL11:
 165              	.L14:
1845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 166              		.loc 1 1845 0
 167 002c 0020     		movs	r0, #0
 168              	.LVL12:
 169              	.L12:
1860:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1861:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1862:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check if calibration is in valid range */
1863:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((rawData < minRawLevel) || (rawData > maxRawLevel))
 170              		.loc 1 1863 0
 171 002e A842     		cmp	r0, r5
 172 0030 03D8     		bhi	.L15
 173              		.loc 1 1863 0 is_stmt 0 discriminator 1
 174 0032 AB42     		cmp	r3, r5
 175 0034 03D2     		bcs	.L16
1864:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1865:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus = CYRET_BAD_DATA;
 176              		.loc 1 1865 0 is_stmt 1
 177 0036 0620     		movs	r0, #6
 178              	.LVL13:
 179 0038 02E0     		b	.L13
 180              	.LVL14:
 181              	.L15:
 182 003a 0620     		movs	r0, #6
 183              	.LVL15:
 184 003c 00E0     		b	.L13
 185              	.LVL16:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 37


 186              	.L16:
1866:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1867:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1868:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus = CYRET_SUCCESS;
 187              		.loc 1 1869 0
 188 003e 0020     		movs	r0, #0
 189              	.LVL17:
 190              	.L13:
1870:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return (calibrateStatus);
1873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 191              		.loc 1 1873 0
 192              		@ sp needed
 193              	.LVL18:
 194              	.LVL19:
 195 0040 70BD     		pop	{r4, r5, r6, pc}
 196              		.cfi_endproc
 197              	.LFE18:
 198              		.size	CapSense_1_SsCSDCalibrateCheck, .-CapSense_1_SsCSDCalibrateCheck
 199 0042 C046     		.section	.text.CapSense_1_SsCSDSetModeSnsClockDivider,"ax",%progbits
 200              		.align	2
 201              		.code	16
 202              		.thumb_func
 203              		.type	CapSense_1_SsCSDSetModeSnsClockDivider, %function
 204              	CapSense_1_SsCSDSetModeSnsClockDivider:
 205              	.LFB0:
 351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 206              		.loc 1 351 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL20:
 211 0000 10B5     		push	{r4, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
 357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= snsClkSource;
 215              		.loc 1 357 0
 216 0002 054A     		ldr	r2, .L18
 217 0004 C023     		movs	r3, #192
 218 0006 1468     		ldr	r4, [r2]
 219 0008 9C43     		bics	r4, r3
 358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 220              		.loc 1 358 0
 221 000a 2043     		orrs	r0, r4
 222              	.LVL21:
 223 000c 1060     		str	r0, [r2]
 361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 224              		.loc 1 361 0
 225 000e 0800     		movs	r0, r1
 226 0010 FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 227              	.LVL22:
 363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 228              		.loc 1 363 0
 229              		@ sp needed
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 38


 230 0014 10BD     		pop	{r4, pc}
 231              	.L19:
 232 0016 C046     		.align	2
 233              	.L18:
 234 0018 00000000 		.word	.LANCHOR0
 235              		.cfi_endproc
 236              	.LFE0:
 237              		.size	CapSense_1_SsCSDSetModeSnsClockDivider, .-CapSense_1_SsCSDSetModeSnsClockDivider
 238              		.section	.text.CapSense_1_SsCSDInitialize,"ax",%progbits
 239              		.align	2
 240              		.global	CapSense_1_SsCSDInitialize
 241              		.code	16
 242              		.thumb_func
 243              		.type	CapSense_1_SsCSDInitialize, %function
 244              	CapSense_1_SsCSDInitialize:
 245              	.LFB2:
 480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 246              		.loc 1 480 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250 0000 10B5     		push	{r4, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 4, -8
 253              		.cfi_offset 14, -4
 484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 254              		.loc 1 484 0
 255 0002 FFF7FEFF 		bl	CapSense_1_SsClearCSDSensors
 256              	.LVL23:
 649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 257              		.loc 1 649 0
 258 0006 FFF7FEFF 		bl	CapSense_1_SsCSDConfigIDACs
 259              	.LVL24:
 652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 260              		.loc 1 652 0
 261 000a 074A     		ldr	r2, .L21
 262 000c 1168     		ldr	r1, [r2]
 263              	.LVL25:
 653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 264              		.loc 1 653 0
 265 000e 074B     		ldr	r3, .L21+4
 266 0010 0B40     		ands	r3, r1
 267              	.LVL26:
 654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 268              		.loc 1 654 0
 269 0012 C021     		movs	r1, #192
 270 0014 C900     		lsls	r1, r1, #3
 271 0016 0B43     		orrs	r3, r1
 272              	.LVL27:
 655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 273              		.loc 1 655 0
 274 0018 1360     		str	r3, [r2]
 665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 275              		.loc 1 665 0
 276 001a 054B     		ldr	r3, .L21+8
 277              	.LVL28:
 278 001c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 39


 279 001e 054A     		ldr	r2, .L21+12
 280              	.LVL29:
 281 0020 1343     		orrs	r3, r2
 282 0022 054A     		ldr	r2, .L21+16
 283 0024 1360     		str	r3, [r2]
 284              	.LVL30:
 675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 285              		.loc 1 675 0
 286              		@ sp needed
 287 0026 10BD     		pop	{r4, pc}
 288              	.L22:
 289              		.align	2
 290              	.L21:
 291 0028 10000140 		.word	1073807376
 292 002c FFF0FFFF 		.word	-3841
 293 0030 00000000 		.word	.LANCHOR0
 294 0034 2008E881 		.word	-2115500000
 295 0038 04000840 		.word	1074266116
 296              		.cfi_endproc
 297              	.LFE2:
 298              		.size	CapSense_1_SsCSDInitialize, .-CapSense_1_SsCSDInitialize
 299              		.section	.text.CapSense_1_SsCSDSetUpIdacs,"ax",%progbits
 300              		.align	2
 301              		.global	CapSense_1_SsCSDSetUpIdacs
 302              		.code	16
 303              		.thumb_func
 304              		.type	CapSense_1_SsCSDSetUpIdacs, %function
 305              	CapSense_1_SsCSDSetUpIdacs:
 306              	.LFB4:
 756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 307              		.loc 1 756 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL31:
 312 0000 70B5     		push	{r4, r5, r6, lr}
 313              		.cfi_def_cfa_offset 16
 314              		.cfi_offset 4, -16
 315              		.cfi_offset 5, -12
 316              		.cfi_offset 6, -8
 317              		.cfi_offset 14, -4
 815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 318              		.loc 1 815 0
 319 0002 0930     		adds	r0, r0, #9
 320              	.LVL32:
 321 0004 0400     		movs	r4, r0
 322              	.LVL33:
 824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 323              		.loc 1 824 0
 324 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 325              	.LVL34:
 827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 326              		.loc 1 827 0
 327 000a 094D     		ldr	r5, .L24
 328 000c 2968     		ldr	r1, [r5]
 329              	.LVL35:
 831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 40


 330              		.loc 1 831 0
 331 000e 094B     		ldr	r3, .L24+4
 332 0010 1940     		ands	r1, r3
 333              	.LVL36:
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 334              		.loc 1 838 0
 335 0012 094B     		ldr	r3, .L24+8
 336 0014 1A78     		ldrb	r2, [r3]
 337 0016 A35C     		ldrb	r3, [r4, r2]
 839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_IDAC_COMP_DATA_OFFSET));
 338              		.loc 1 839 0
 339 0018 084C     		ldr	r4, .L24+12
 340              	.LVL37:
 341 001a 2468     		ldr	r4, [r4]
 342 001c A218     		adds	r2, r4, r2
 343 001e 527A     		ldrb	r2, [r2, #9]
 344 0020 1204     		lsls	r2, r2, #16
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 345              		.loc 1 838 0
 346 0022 1343     		orrs	r3, r2
 347 0024 0B43     		orrs	r3, r1
 348              	.LVL38:
 844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 349              		.loc 1 844 0
 350 0026 2B60     		str	r3, [r5]
 846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 351              		.loc 1 846 0
 352 0028 FFF7FEFF 		bl	CyExitCriticalSection
 353              	.LVL39:
 849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 354              		.loc 1 849 0
 355              		@ sp needed
 356 002c 70BD     		pop	{r4, r5, r6, pc}
 357              	.L25:
 358 002e C046     		.align	2
 359              	.L24:
 360 0030 08000840 		.word	1074266120
 361 0034 00FF80FF 		.word	-8323328
 362 0038 00000000 		.word	CapSense_1_scanFreqIndex
 363 003c 00000000 		.word	CapSense_1_curRamSnsPtr
 364              		.cfi_endproc
 365              	.LFE4:
 366              		.size	CapSense_1_SsCSDSetUpIdacs, .-CapSense_1_SsCSDSetUpIdacs
 367              		.section	.text.CapSense_1_SsCSDConfigClock,"ax",%progbits
 368              		.align	2
 369              		.global	CapSense_1_SsCSDConfigClock
 370              		.code	16
 371              		.thumb_func
 372              		.type	CapSense_1_SsCSDConfigClock, %function
 373              	CapSense_1_SsCSDConfigClock:
 374              	.LFB5:
 949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkDivider;
 375              		.loc 1 949 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 41


 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 4, -8
 382              		.cfi_offset 14, -4
 955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 383              		.loc 1 955 0
 384 0002 094B     		ldr	r3, .L30
 385 0004 1B78     		ldrb	r3, [r3]
 954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2WdgtRam;
 386              		.loc 1 954 0
 387 0006 5B01     		lsls	r3, r3, #5
 388 0008 084A     		ldr	r2, .L30+4
 389 000a D318     		adds	r3, r2, r3
 390 000c 5B68     		ldr	r3, [r3, #4]
 391              	.LVL40:
 972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 392              		.loc 1 972 0
 393 000e 5989     		ldrh	r1, [r3, #10]
 394              	.LVL41:
 988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 395              		.loc 1 988 0
 396 0010 187B     		ldrb	r0, [r3, #12]
 397              	.LVL42:
1007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 398              		.loc 1 1007 0
 399 0012 431F     		subs	r3, r0, #5
 400              	.LVL43:
 401 0014 DBB2     		uxtb	r3, r3
 402 0016 012B     		cmp	r3, #1
 403 0018 02D8     		bhi	.L27
1012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
 404              		.loc 1 1012 0
 405 001a 4908     		lsrs	r1, r1, #1
 406              	.LVL44:
1013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 407              		.loc 1 1013 0
 408 001c 00D1     		bne	.L27
1015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 409              		.loc 1 1015 0
 410 001e 0131     		adds	r1, r1, #1
 411              	.LVL45:
 412              	.L27:
1025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 413              		.loc 1 1025 0
 414 0020 FFF7FEFF 		bl	CapSense_1_SsCSDSetModeSnsClockDivider
 415              	.LVL46:
1026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 416              		.loc 1 1026 0
 417              		@ sp needed
 418 0024 10BD     		pop	{r4, pc}
 419              	.L31:
 420 0026 C046     		.align	2
 421              	.L30:
 422 0028 00000000 		.word	CapSense_1_widgetIndex
 423 002c 00000000 		.word	CapSense_1_dsFlash
 424              		.cfi_endproc
 425              	.LFE5:
 426              		.size	CapSense_1_SsCSDConfigClock, .-CapSense_1_SsCSDConfigClock
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 42


 427              		.section	.text.CapSense_1_SsCSDCalculateScanDuration,"ax",%progbits
 428              		.align	2
 429              		.global	CapSense_1_SsCSDCalculateScanDuration
 430              		.code	16
 431              		.thumb_func
 432              		.type	CapSense_1_SsCSDCalculateScanDuration, %function
 433              	CapSense_1_SsCSDCalculateScanDuration:
 434              	.LFB6:
1050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 435              		.loc 1 1050 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 440              	.LVL47:
1080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 441              		.loc 1 1080 0
 442 0000 0288     		ldrh	r2, [r0]
 443 0002 0123     		movs	r3, #1
 444 0004 9340     		lsls	r3, r3, r2
 445 0006 013B     		subs	r3, r3, #1
 446 0008 1B04     		lsls	r3, r3, #16
 447 000a 014A     		ldr	r2, .L33
 448 000c 5360     		str	r3, [r2, #4]
1082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 449              		.loc 1 1082 0
 450              		@ sp needed
 451 000e 7047     		bx	lr
 452              	.L34:
 453              		.align	2
 454              	.L33:
 455 0010 00000000 		.word	.LANCHOR0
 456              		.cfi_endproc
 457              	.LFE6:
 458              		.size	CapSense_1_SsCSDCalculateScanDuration, .-CapSense_1_SsCSDCalculateScanDuration
 459              		.section	.text.CapSense_1_SsCSDStartSample,"ax",%progbits
 460              		.align	2
 461              		.global	CapSense_1_SsCSDStartSample
 462              		.code	16
 463              		.thumb_func
 464              		.type	CapSense_1_SsCSDStartSample, %function
 465              	CapSense_1_SsCSDStartSample:
 466              	.LFB9:
1264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
 467              		.loc 1 1264 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 70B5     		push	{r4, r5, r6, lr}
 472              		.cfi_def_cfa_offset 16
 473              		.cfi_offset 4, -16
 474              		.cfi_offset 5, -12
 475              		.cfi_offset 6, -8
 476              		.cfi_offset 14, -4
1299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 477              		.loc 1 1299 0
 478 0002 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 43


 479              	.LVL48:
 480 0006 0400     		movs	r4, r0
 481              	.LVL49:
1306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 482              		.loc 1 1306 0
 483 0008 1E4B     		ldr	r3, .L39
 484 000a 1B68     		ldr	r3, [r3]
 485 000c 1E4A     		ldr	r2, .L39+4
 486 000e 1343     		orrs	r3, r2
 487 0010 1E4A     		ldr	r2, .L39+8
 488 0012 1360     		str	r3, [r2]
 489              	.LBB10:
 490              	.LBB11:
1874:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1875:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
1876:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDCalibrateOneSensor
1877:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
1878:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1879:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
1880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Computes the Modulator IDAC value for one sensor that provides raw signal at
1881:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  the specified level.
1882:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1883:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
1884:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function performs the following tasks:
1885:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   1. initializes The Compensation IDAC to zero
1886:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   2. Enables the calibrated sensor
1887:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   3. Performs eight iteration steps to get the target = rawLevel
1888:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *      setting and resetting the IDAC value bits beginning from the
1889:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *      MSB bit to an MSB bit.
1890:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   4. Disables the calibrated sensor
1891:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   5. Checks if the IDAC is in the correct range
1892:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   6. Updates the maximum IDAC value in the widget
1893:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   7. Stores the temporary ModIDAC8 value (in the single-IDAC mode).
1894:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1895:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  The CSD block should be initialized with the CapSense_1_SsCSDInitialize()
1896:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  API before using this function.
1897:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1898:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  rawLevel
1899:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The raw data level which should be reached during the calibration procedure.
1900:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  ptrIdac  The pointer to IDAC.
1901:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  iDAC8Max The pointer to the maximum IDAC value in the widget.
1902:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1903:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1904:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  - Zero     - All the sensors in the widget are calibrated successfully.
1905:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  - Non-Zero - Calibration failed for any sensor in the widget.
1906:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1907:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
1908:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateOneSensor(uint32 rawLevel,
1909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            uint8 *ptrIdac,
1910:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            uint8 *iDAC8Max)
1911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
1912:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
1913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 calMask = ((uint32)CapSense_1_CAL_MIDDLE_BIT << 1uL);
1914:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
1915:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint16 rawData0 = 0u;
1917:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 44


1918:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint16 rawData1 = 0u;
1919:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint16 rawData2 = 0u;
1920:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1921:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1922:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
1923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
1925:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ptrIdac[0u] = 0u;
1927:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1928:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[CapSense_1_FREQ_CHANNEL_1] = 0u;
1929:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[CapSense_1_FREQ_CHANNEL_2] = 0u;
1930:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1931:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Setup the calibrated sensor of the widget (Set IDAC = calMask and connect the sensor) */
1933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDSetupWidgetExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorIndex
1934:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1936:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set single IDAC mode */
1937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDSetSingleIdacMode();
1938:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1939:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1940:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*
1941:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * Perform the iteration steps to get target = rawLevel.
1942:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * The number of iteration steps is defined by calMask and depend on IDAC resolution.
1943:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
1944:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         do
1945:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1946:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Decrease IDAC until rawData reaches rawLevel */
1947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (rawData0 < rawLevel)
1948:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset bit for null channel (decrease IDAC -> will increase rawData) */
1950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[0u] &= (uint8)(~calMask);
1951:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1952:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1953:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (rawData1 < rawLevel)
1954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
1955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[CapSense_1_FREQ_CHANNEL_1] &= (uint8)(~calMask);
1956:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
1957:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (rawData2 < rawLevel)
1958:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
1959:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[CapSense_1_FREQ_CHANNEL_2] &= (uint8)(~calMask);
1960:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
1961:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1962:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
1964:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * Shift calMask to set or reset next bit.
1965:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * Perform scan even if callibration mask is equal to zero.
1966:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * It gives raw counts for the last changed IDAC.
1967:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             */
1968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calMask >>= 1u;
1969:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1970:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set bit for null channel */
1971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] |= (uint8)calMask;
1972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1973:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] |= (uint8)calMask;
1974:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] |= (uint8)calMask;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 45


1975:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1976:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1977:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Update IDAC */
1978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1979:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1980:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Scan sensor */
1981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDScanExt();
1982:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1983:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Initialize Watchdog Counter with time interval which is enough to charge 100 nF capa
1984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter = CapSense_1_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while (((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u) &&
1986:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
1987:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until scan complete and decrement Watchdog Counter to prevent unending loop
1989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 watchdogCounter--;
1990:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1991:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Read rawData */
1993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             rawData0 = CapSense_1_curRamSnsPtr->raw[0u];
1994:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 rawData1 = CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1];
1996:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 rawData2 = CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2];
1997:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while (calMask > 0u);
2000:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2001:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2002:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sen
2003:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2004:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* initialize pointer to sensor IO structure */
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
2006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
2007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             + CapSense_1_sensorIndex;
2008:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2009:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable sensor */
2010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
2011:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set flag about disconnecting the electrode */
2014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_eleCsdDisconnectFlag = 0u;
2015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2016:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2017:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Restore IDAC configuration to default state */
2018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDRestoreIdacMode();
2019:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2020:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2021:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check if IDAC is in correct range */
2022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         calibrateStatus = CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData0);
2023:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2024:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData1);
2025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData2);
2026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2027:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2028:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*
2029:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * Update maximum IDAC value in widget. iDAC8Max variable will contain
2030:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * maximum IDAC value after all the sensors in a widget have been scanned.
2031:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 46


2032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (*iDAC8Max < ptrIdac[0u])
2033:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             *iDAC8Max = ptrIdac[0u];
2035:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2036:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a 
2037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedIdac = *iDAC8Max;
2038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedRawcount = rawData0;
2039:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2040:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2041:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2042:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] < ptrIdac[CapSense_1_FREQ_CHANNEL_1])
2043:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2044:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[CapSense_1_FREQ_CHANNEL_1] = ptrIdac[CapSense_1_FREQ_CHANNEL_1];
2045:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2046:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] < ptrIdac[CapSense_1_FREQ_CHANNEL_2])
2047:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2048:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[CapSense_1_FREQ_CHANNEL_2] = ptrIdac[CapSense_1_FREQ_CHANNEL_2];
2049:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2051:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2052:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2053:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
2054:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Store temporary ModIDAC8 value (in single-IDAC mode) in idacComp variable.
2055:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * We need this value to calculate idacMod value the in the dual-IDAC mode.
2056:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              */
2057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[0u] = ptrIdac[0u];
2058:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2059:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = ptrIdac[CapSense_1_F
2060:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = ptrIdac[CapSense_1_F
2061:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2062:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2063:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2064:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return (calibrateStatus);
2065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2066:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2067:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2068:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
2069:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_CSDCalibrateWidget
2070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
2071:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2072:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
2073:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  the input.
2075:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2076:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
2077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2078:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2079:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2081:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Calibration is always performed in the single IDAC mode and if the dual
2082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  IDAC mode (Enable compensation IDAC is enabled) is configured, the IDAC
2083:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  values are re-calculated to match the raw count target. If a widget
2084:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  consists of two or more elements (buttons, slider segments, etc.), then
2085:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  calibration is performed by the element with the highest sensor
2086:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  capacitance.
2087:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2088:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the +/-10%
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 47


2089:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  range of the target.
2090:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2091:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2092:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2093:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2094:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param widgetId
2095:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2096:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2097:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  CapSense_1 Configuration header file defined as
2098:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
2099:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param target
2101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return
2104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
2107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate as expected.
2108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
2110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     cystatus CapSense_1_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
2112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawLevel;
2113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint8 maxIdac = 1u;
2118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint16 maxRaw = 1u;
2119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /*(CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
2123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (1u == CapSense_1_NUM_SCAN_FREQS)
2127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_1_NUM_SCAN_FREQS] = {1u};
2128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_1_NUM_SCAN_FREQS] = {1u, 1u, 1u};
2130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (1u == CapSense_1_NUM_SCAN_FREQS) */
2131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 *ptrIdac;
2133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calibrate maximum level for given resolution */
2135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
2136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate percentage of maximum value */
2138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawLevel = (rawLevel * target) / CapSense_1_PERCENTAGE_100;
2139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update CapSense_1_widgetIndex */
2141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_widgetIndex = (uint8)widgetId;
2142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Setup ISR handler to single-sensor scan function */
2144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_ISR_StartEx(&CapSense_1_CSDPostSingleScan);
2145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 48


2146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init pointer to Modulator IDAC */
2147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ptrIdac = &ptrWdgt->idacMod[0u];
2148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedIdac = 1u;
2151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedRawcount = 1u;
2152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Go through all the sensors (or columns of touchpad) of widget to calibrate them */
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         for (CapSense_1_sensorIndex = 0u;
2156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex++)
2158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Calibrate current sensor in widget */
2160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8Max);
2161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Normalize idacMod and idacComp values */
2164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] + 1u) >>
2169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] + 1u) >> 
2170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Go through all columns of touchpad (or all the sensors in button) to normalize them 
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (CapSense_1_sensorIndex = 0u;
2174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex++)
2176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
2178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sensorIndex
2179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
2180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (CapSense_1_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (CapSense_1_DISABLE == CapSense_1_CSDV2))
2185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[0u] =
2186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) + CapSense_1
2187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_PERCENTAGE_100);
2188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 else
2192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[0u] = 0u;
2194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Do same for first frequency channel */
2197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] >= ptrIdac[Cap
2198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] -= ptrIdac[Cap
2200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (CapSense_1_DISABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] =
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 49


2203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FR
2204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_100);
2205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                    (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
2209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = 0u;
2211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Do same for second frequency channel */
2213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] >= ptrIdac[Cap
2214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] -= ptrIdac[Cap
2216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (CapSense_1_DISABLE == CapSense_1_CSDV2))
2218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] =
2219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FR
2220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_100);
2221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                    (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
2225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = 0u;
2227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Normalize widget for single-IDAC mode*/
2232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] = iDAC8Max[0u];
2233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] = iDAC8Max[CapSense_1_FREQ_CHANNEL_1];
2235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] = iDAC8Max[CapSense_1_FREQ_CHANNEL_2];
2236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Init pointer to Modulator IDAC for columns */
2244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac = &ptrWdgt->rowIdacMod[0u];
2245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset the maximum value for columns */
2247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[0u] = 1u;
2248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     iDAC8Max[CapSense_1_FREQ_CHANNEL_1] = 1u;
2250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     iDAC8Max[CapSense_1_FREQ_CHANNEL_2] = 1u;
2251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     maxIdac = CapSense_1_calibratedIdac;
2255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     maxRaw = CapSense_1_calibratedRawcount;
2256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdac = 1u;
2257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcount = 1u;
2258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 50


2260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Go through all columns of touchpad to calibrate them */
2261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 for (CapSense_1_sensorIndex = CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                      CapSense_1_sensorIndex < (uint8)CapSense_1_dsFlash.wdgtArray[widgetId].totalNu
2263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                      CapSense_1_sensorIndex++)
2264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Calibrate current sensor in widget */
2266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     calibrateStatus |= CapSense_1_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8M
2267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdacRow = CapSense_1_calibratedIdac;
2271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcountRow = CapSense_1_calibratedRawcount;
2272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdac = maxIdac;
2273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcount = maxRaw;
2274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Normalize idacMod and idacComp values */
2277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] 
2282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] +
2283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Go through all columns of touchpad to normalize them */
2286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     for (CapSense_1_sensorIndex = CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_sensorIndex < (uint8)CapSense_1_dsFlash.wdgtArray[widgetId].tot
2288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_sensorIndex++)
2289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
2291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                  CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sen
2292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * 
2294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         if (CapSense_1_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         {
2296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                  (CapSense_1_DISABLE == CapSense_1_CSDV2))
2299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[0u] =
2300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) +
2301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
2303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                        (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         }
2305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             /* Do same for first frequency channel */
2307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] >= ptr
2308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             {
2309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] -= ptr
2310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) |
2311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                      (CapSense_1_DISABLE == CapSense_1_CSDV2))
2312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] =
2313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSe
2314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP
2316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 51


2317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             }
2318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             /* Do same for second frequency channel */
2319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] >= ptr
2320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             {
2321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] -= ptr
2322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) |
2323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                      (CapSense_1_DISABLE == CapSense_1_CSDV2))
2324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] =
2325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSe
2326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP
2328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             }
2330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
2333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Normalize widget for single-IDAC mode*/
2334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[0u] = iDAC8Max[0u];
2335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_1] = iDAC8Max[CapSense_1_FREQ_CHANNEL_1];
2337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_2] = iDAC8Max[CapSense_1_FREQ_CHANNEL_2];
2338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_sensorIndex = 0u;
2344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return calibrateStatus;
2346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) || \
2348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)) */
2349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
2352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
2353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDClockRestart
2354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
2355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
2357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function restarts the clocks.
2358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
2360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  The function performs following:
2361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
2366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_INLINE static void CapSense_1_SsCSDClockRestart(void)
2367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
2368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsdClk);
 491              		.loc 1 2369 0
 492 0014 2223     		movs	r3, #34
 493 0016 1E4A     		ldr	r2, .L39+12
 494 0018 D05C     		ldrb	r0, [r2, r3]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 52


 495 001a FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 496              	.LVL50:
2370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
2372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          ((uint32)CapSense_1_SnsClk__DIV_ID <<
2375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
2376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
2377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MAS
2380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_S
2387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHI
2388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           CapSense_1_SNSCLK_CMD_ENABLE_MASK));
2389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
 497              		.loc 1 2391 0
 498 001e 1D4A     		ldr	r2, .L39+16
 499 0020 1368     		ldr	r3, [r2]
 500 0022 5B00     		lsls	r3, r3, #1
 501 0024 5B08     		lsrs	r3, r3, #1
 502 0026 1360     		str	r3, [r2]
2392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
2393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
2394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
 503              		.loc 1 2396 0
 504 0028 1368     		ldr	r3, [r2]
 505 002a 8021     		movs	r1, #128
 506 002c 0906     		lsls	r1, r1, #24
 507 002e 0B43     		orrs	r3, r1
 508 0030 1360     		str	r3, [r2]
 509              	.LBE11:
 510              	.LBE10:
 511              	.LBB12:
 512              	.LBB13:
2397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
2398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_SnsClk__ENABLE_MASK);
2399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
2400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE)
2402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyIntDisable(CapSense_1_ISR_NUMBER);
2404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_COUNTER_PTR, CapSense_1_ONE_CYCLE);
2405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_1_COUNTER_PTR) & CapSense_1_RESOLUTION_16_BITS))
2407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until scanning is complete */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 53


2409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
2411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyIntClearPending(CapSense_1_ISR_NUMBER);
2412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE) */
2413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
2415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
2418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDCmodPrecharge
2419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
2420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
2422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
2425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Third-generation HW block:
2426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  prevent the project hanging.
2430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
2439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDCmodPrecharge(void)
2440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
2441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&\
2447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
2448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 tmpRegValue;
2449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif
2450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_CSD_CSDCMP_INIT);
2452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,  CapSense_1_CSD_SW_FW_MOD_SEL_INIT);
2453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR, CapSense_1_CSD_SW_FW_TANK_SEL_INIT);
2454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,  CapSense_1_CSD_SW_SHIELD_SEL_INIT);
2455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
2456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
2457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              */
2460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_SW_HS_P_SEL_COARSE);
2461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(0u != CapSense_1_CSD_SHIELD_TANK_EN)
2463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
2465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue &= (uint32)(~(uint32)CapSense_1_CSH_HSIOM_MASK);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 54


2466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CSH_HSIOM_SHIFT);
2467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, tmpRegValue);
2468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (0u != CapSense_1_CSD_SHIELD_TANK_EN) */
2469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_SW_HS_P_SEL_COARSE);
2472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
2473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, CapSense_1_CSD_SW_RES_INIT);
2475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_ALL_MASK);
2478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR, CapSense_1_CLEAR_MASK);
2480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_SEQ_MODE_MASK |
2483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                          CapSense_1_SEQ_START_START_MASK);
2484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_1_INTR_PTR) & CapSense_1_INTR_INIT_MASK)) && (0u != wat
2490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
2492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (0u == watchdogCounter)
2495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_ABORT_MASK);
2498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
2501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tmpRegValue;
2503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 newRegValue;
2504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 513              		.loc 1 2507 0
 514 0032 194E     		ldr	r6, .L39+20
 515 0034 3568     		ldr	r5, [r6]
 516              	.LVL51:
2508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyDelayCycles(CapSense_1_CMOD_DISCHARGE_CYCLES);
 517              		.loc 1 2510 0
 518 0036 2720     		movs	r0, #39
 519 0038 FFF7FEFF 		bl	CyDelayCycles
 520              	.LVL52:
2511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CapSense_1_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_1_IDAC_MOD_CF
 521              		.loc 1 2512 0
 522 003c 174B     		ldr	r3, .L39+24
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 55


 523 003e 2B40     		ands	r3, r5
 524 0040 174A     		ldr	r2, .L39+28
 525 0042 1343     		orrs	r3, r2
 526              	.LVL53:
2513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
 527              		.loc 1 2515 0
 528 0044 3360     		str	r3, [r6]
 529              	.LVL54:
2516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
2518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CY_GET_REG32(CapSense_1_CONFIG_PTR) & ~CapSense_1_C
2519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
2520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 530              		.loc 1 2522 0
 531 0046 E123     		movs	r3, #225
 532              	.LVL55:
 533 0048 DB01     		lsls	r3, r3, #7
 534 004a 00E0     		b	.L36
 535              	.LVL56:
 536              	.L38:
2523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_1_STATUS_PTR) & CapSense_1_STATUS_SAMPLE)) && (0u != wa
2526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
 537              		.loc 1 2527 0
 538 004c 013B     		subs	r3, r3, #1
 539              	.LVL57:
 540              	.L36:
2525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 541              		.loc 1 2525 0
 542 004e 154A     		ldr	r2, .L39+32
 543 0050 1268     		ldr	r2, [r2]
 544 0052 1207     		lsls	r2, r2, #28
 545 0054 01D4     		bmi	.L37
 546 0056 002B     		cmp	r3, #0
 547 0058 F8D1     		bne	.L38
 548              	.L37:
2528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
2531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CY_GET_REG32(CapSense_1_CONFIG_PTR) | CapSense_1_CO
2532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
2533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_PTR, tmpRegValue);
 549              		.loc 1 2535 0
 550 005a 0F4B     		ldr	r3, .L39+20
 551              	.LVL58:
 552 005c 1D60     		str	r5, [r3]
 553              	.LVL59:
2536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable the sense modulator output */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 56


2538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_CONFI
 554              		.loc 1 2538 0
 555 005e 094D     		ldr	r5, .L39
 556              	.LVL60:
 557 0060 114B     		ldr	r3, .L39+36
 558 0062 2A68     		ldr	r2, [r5]
 559 0064 1343     		orrs	r3, r2
 560 0066 094A     		ldr	r2, .L39+8
 561 0068 1360     		str	r3, [r2]
 562              	.LVL61:
2539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntEnable(CapSense_1_ISR_NUMBER);
 563              		.loc 1 2540 0
 564 006a 0F20     		movs	r0, #15
 565 006c FFF7FEFF 		bl	CyIntEnable
 566              	.LVL62:
 567              	.LBE13:
 568              	.LBE12:
1318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SNS_CLK_SOURCE != CapSense_1_CLK_SOURCE_DIRECT) */
 569              		.loc 1 1318 0
 570 0070 6F20     		movs	r0, #111
 571 0072 FFF7FEFF 		bl	CyDelayCycles
 572              	.LVL63:
 573              	.LBB14:
 574              	.LBB15:
2541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
2544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDTriggerScan
2548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
2551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function triggers the scanning.
2552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
2554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Third-generation HW block:
2555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
2567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDTriggerScan(void)
2568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
2569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 57


2573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear previous interrupts */
2576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_ALL_MASK);
2577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntClearPending(CapSense_1_ISR_NUMBER);
2580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntEnable(CapSense_1_ISR_NUMBER);
2583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_CSD_SW_HS_P_SEL_SCAN);
2586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR, CapSense_1_CSD_SW_FW_MOD_SEL_SCAN);
2589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,CapSense_1_CSD_SW_FW_TANK_SEL_SCAN);
2590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,  CapSense_1_CSD_SW_SHIELD_SEL_SCAN);
2592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && (CapSense_1_ENABLE == CapSense_1_CSD
2594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldTank();
2596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && (CapSense_1_ENABLE == CapSens
2597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, CapSense_1_CSD_SW_RES_SCAN);
2599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_CSD_CSDCMP_SCAN);
2600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN)
2602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_HSCMP_PTR, 0u);
2604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_HSCMP_SCAN_MASK);
2606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) */
2607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)
2609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR) |
2611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            CapSense_1_SENSE_PERIOD_LFSR_CLEAR_MASK)
2612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE) */
2613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR, CapSense_1_INTR_MASK_SAMPLE_MASK);
2616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u != (CapSense_1_STAT_SEQ_REG & CapSense_1_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watc
2622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
2624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
2628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                      CapSense_1_SEQ_START_AZ1_SKIP_MASK |
2629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                      CapSense_1_SEQ_START_START_MASK);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 58


2630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
2632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Third-generation HW block section */
2634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set resolution to Counter register to start scanning */
2636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_COUNTER_PTR, CapSense_1_counterResolution);
 575              		.loc 1 2636 0
 576 0076 6A68     		ldr	r2, [r5, #4]
 577 0078 0C4B     		ldr	r3, .L39+40
 578 007a 1A60     		str	r2, [r3]
 579              	.LBE15:
 580              	.LBE14:
1324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 581              		.loc 1 1324 0
 582 007c 2000     		movs	r0, r4
 583 007e FFF7FEFF 		bl	CyExitCriticalSection
 584              	.LVL64:
1326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 585              		.loc 1 1326 0
 586              		@ sp needed
 587              	.LVL65:
 588 0082 70BD     		pop	{r4, r5, r6, pc}
 589              	.L40:
 590              		.align	2
 591              	.L39:
 592 0084 00000000 		.word	.LANCHOR0
 593 0088 2008E881 		.word	-2115500000
 594 008c 04000840 		.word	1074266116
 595 0090 00000000 		.word	CapSense_1_dsRam
 596 0094 40000240 		.word	1073872960
 597 0098 08000840 		.word	1074266120
 598 009c 00E8FFBF 		.word	-1073747968
 599 00a0 F0060040 		.word	1073743600
 600 00a4 10000840 		.word	1074266128
 601 00a8 2018E881 		.word	-2115495904
 602 00ac 0C000840 		.word	1074266124
 603              		.cfi_endproc
 604              	.LFE9:
 605              		.size	CapSense_1_SsCSDStartSample, .-CapSense_1_SsCSDStartSample
 606              		.section	.text.CapSense_1_CSDScanExt,"ax",%progbits
 607              		.align	2
 608              		.global	CapSense_1_CSDScanExt
 609              		.code	16
 610              		.thumb_func
 611              		.type	CapSense_1_CSDScanExt, %function
 612              	CapSense_1_CSDScanExt:
 613              	.LFB10:
1371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
 614              		.loc 1 1371 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618 0000 10B5     		push	{r4, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 4, -8
 621              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 59


1373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 622              		.loc 1 1373 0
 623 0002 044A     		ldr	r2, .L42
 624 0004 D368     		ldr	r3, [r2, #12]
 625 0006 0449     		ldr	r1, .L42+4
 626 0008 0B43     		orrs	r3, r1
 627 000a D360     		str	r3, [r2, #12]
1388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 628              		.loc 1 1388 0
 629 000c FFF7FEFF 		bl	CapSense_1_SsCSDStartSample
 630              	.LVL66:
1389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 631              		.loc 1 1389 0
 632              		@ sp needed
 633 0010 10BD     		pop	{r4, pc}
 634              	.L43:
 635 0012 C046     		.align	2
 636              	.L42:
 637 0014 00000000 		.word	CapSense_1_dsRam
 638 0018 80000100 		.word	65664
 639              		.cfi_endproc
 640              	.LFE10:
 641              		.size	CapSense_1_CSDScanExt, .-CapSense_1_CSDScanExt
 642              		.section	.text.CapSense_1_CSDConnectSns,"ax",%progbits
 643              		.align	2
 644              		.global	CapSense_1_CSDConnectSns
 645              		.code	16
 646              		.thumb_func
 647              		.type	CapSense_1_CSDConnectSns, %function
 648              	CapSense_1_CSDConnectSns:
 649              	.LFB14:
1642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
 650              		.loc 1 1642 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              	.LVL67:
 655 0000 70B5     		push	{r4, r5, r6, lr}
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 4, -16
 658              		.cfi_offset 5, -12
 659              		.cfi_offset 6, -8
 660              		.cfi_offset 14, -4
 661 0002 0400     		movs	r4, r0
1649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 662              		.loc 1 1649 0
 663 0004 857E     		ldrb	r5, [r0, #26]
 664              	.LVL68:
1650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 665              		.loc 1 1650 0
 666 0006 067E     		ldrb	r6, [r0, #24]
 667              	.LVL69:
1652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 668              		.loc 1 1652 0
 669 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 670              	.LVL70:
1655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_1_HSIOM_SEL_MASK << pinHSIOMShift);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 60


 671              		.loc 1 1655 0
 672 000c 2368     		ldr	r3, [r4]
 673 000e 1B68     		ldr	r3, [r3]
 674              	.LVL71:
1656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_1_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 675              		.loc 1 1656 0
 676 0010 0F22     		movs	r2, #15
 677 0012 B240     		lsls	r2, r2, r6
 678 0014 9343     		bics	r3, r2
 679              	.LVL72:
 680 0016 1A00     		movs	r2, r3
 681              	.LVL73:
1657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 682              		.loc 1 1657 0
 683 0018 0423     		movs	r3, #4
 684 001a B340     		lsls	r3, r3, r6
 685 001c 1343     		orrs	r3, r2
 686              	.LVL74:
1660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 687              		.loc 1 1660 0
 688 001e 6668     		ldr	r6, [r4, #4]
 689              	.LVL75:
 690 0020 3268     		ldr	r2, [r6]
 691 0022 0721     		movs	r1, #7
 692 0024 A940     		lsls	r1, r1, r5
 693 0026 8A43     		bics	r2, r1
 694 0028 3260     		str	r2, [r6]
1663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 695              		.loc 1 1663 0
 696 002a 2268     		ldr	r2, [r4]
 697 002c 1360     		str	r3, [r2]
1665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 698              		.loc 1 1665 0
 699 002e FFF7FEFF 		bl	CyExitCriticalSection
 700              	.LVL76:
1666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 701              		.loc 1 1666 0
 702              		@ sp needed
 703              	.LVL77:
 704              	.LVL78:
 705 0032 70BD     		pop	{r4, r5, r6, pc}
 706              		.cfi_endproc
 707              	.LFE14:
 708              		.size	CapSense_1_CSDConnectSns, .-CapSense_1_CSDConnectSns
 709              		.section	.text.CapSense_1_CSDScan,"ax",%progbits
 710              		.align	2
 711              		.global	CapSense_1_CSDScan
 712              		.code	16
 713              		.thumb_func
 714              		.type	CapSense_1_CSDScan, %function
 715              	CapSense_1_CSDScan:
 716              	.LFB11:
1423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 717              		.loc 1 1423 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 61


 721 0000 70B5     		push	{r4, r5, r6, lr}
 722              		.cfi_def_cfa_offset 16
 723              		.cfi_offset 4, -16
 724              		.cfi_offset 5, -12
 725              		.cfi_offset 6, -8
 726              		.cfi_offset 14, -4
1425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 727              		.loc 1 1425 0
 728 0002 154E     		ldr	r6, .L46
 729 0004 3378     		ldrb	r3, [r6]
1424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetI
 730              		.loc 1 1424 0
 731 0006 154D     		ldr	r5, .L46+4
 732 0008 5B01     		lsls	r3, r3, #5
 733 000a EB18     		adds	r3, r5, r3
 734 000c 5868     		ldr	r0, [r3, #4]
 735              	.LVL79:
1431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 736              		.loc 1 1431 0
 737 000e 144C     		ldr	r4, .L46+8
 738 0010 0023     		movs	r3, #0
 739 0012 2370     		strb	r3, [r4]
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
 740              		.loc 1 1434 0
 741 0014 3378     		ldrb	r3, [r6]
1435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
 742              		.loc 1 1435 0
 743 0016 5B01     		lsls	r3, r3, #5
 744 0018 EB18     		adds	r3, r5, r3
 745 001a 9968     		ldr	r1, [r3, #8]
1436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 746              		.loc 1 1436 0
 747 001c 2378     		ldrb	r3, [r4]
 748 001e DBB2     		uxtb	r3, r3
 749 0020 9A00     		lsls	r2, r3, #2
 750 0022 D318     		adds	r3, r2, r3
 751 0024 5A00     		lsls	r2, r3, #1
 752 0026 8A18     		adds	r2, r1, r2
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
 753              		.loc 1 1434 0
 754 0028 0E4B     		ldr	r3, .L46+12
 755 002a 1A60     		str	r2, [r3]
1444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 756              		.loc 1 1444 0
 757 002c FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 758              	.LVL80:
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
 759              		.loc 1 1463 0
 760 0030 3378     		ldrb	r3, [r6]
1464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         + CapSense_1_sensorIndex;
 761              		.loc 1 1464 0
 762 0032 5B01     		lsls	r3, r3, #5
 763 0034 5859     		ldr	r0, [r3, r5]
1465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 764              		.loc 1 1465 0
 765 0036 2278     		ldrb	r2, [r4]
 766 0038 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 62


 767 003a D300     		lsls	r3, r2, #3
 768 003c 9A1A     		subs	r2, r3, r2
 769 003e 9300     		lsls	r3, r2, #2
 770 0040 C018     		adds	r0, r0, r3
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
 771              		.loc 1 1463 0
 772 0042 094B     		ldr	r3, .L46+16
 773 0044 1860     		str	r0, [r3]
1468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 774              		.loc 1 1468 0
 775 0046 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 776              	.LVL81:
1471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 777              		.loc 1 1471 0
 778 004a 0848     		ldr	r0, .L46+20
 779 004c FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 780              	.LVL82:
1475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 781              		.loc 1 1475 0
 782 0050 FFF7FEFF 		bl	CapSense_1_CSDScanExt
 783              	.LVL83:
1476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 784              		.loc 1 1476 0
 785              		@ sp needed
 786 0054 70BD     		pop	{r4, r5, r6, pc}
 787              	.L47:
 788 0056 C046     		.align	2
 789              	.L46:
 790 0058 00000000 		.word	CapSense_1_widgetIndex
 791 005c 00000000 		.word	CapSense_1_dsFlash
 792 0060 00000000 		.word	CapSense_1_sensorIndex
 793 0064 00000000 		.word	CapSense_1_curRamSnsPtr
 794 0068 00000000 		.word	CapSense_1_curSnsIOPtr
 795 006c 00000000 		.word	CapSense_1_CSDPostMultiScan
 796              		.cfi_endproc
 797              	.LFE11:
 798              		.size	CapSense_1_CSDScan, .-CapSense_1_CSDScan
 799              		.section	.text.CapSense_1_SsCSDConnectSensorExt,"ax",%progbits
 800              		.align	2
 801              		.global	CapSense_1_SsCSDConnectSensorExt
 802              		.code	16
 803              		.thumb_func
 804              		.type	CapSense_1_SsCSDConnectSensorExt, %function
 805              	CapSense_1_SsCSDConnectSensorExt:
 806              	.LFB12:
1499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 807              		.loc 1 1499 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              	.LVL84:
 812 0000 10B5     		push	{r4, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 4, -8
 815              		.cfi_offset 14, -4
1506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
 816              		.loc 1 1506 0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 63


 817 0002 4001     		lsls	r0, r0, #5
 818              	.LVL85:
 819 0004 054B     		ldr	r3, .L49
 820 0006 C058     		ldr	r0, [r0, r3]
1507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 821              		.loc 1 1507 0
 822 0008 CB00     		lsls	r3, r1, #3
 823 000a 591A     		subs	r1, r3, r1
 824              	.LVL86:
 825 000c 8B00     		lsls	r3, r1, #2
 826 000e C018     		adds	r0, r0, r3
1505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
 827              		.loc 1 1505 0
 828 0010 034B     		ldr	r3, .L49+4
 829 0012 1860     		str	r0, [r3]
1541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 830              		.loc 1 1541 0
 831 0014 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 832              	.LVL87:
1543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 833              		.loc 1 1543 0
 834              		@ sp needed
 835 0018 10BD     		pop	{r4, pc}
 836              	.L50:
 837 001a C046     		.align	2
 838              	.L49:
 839 001c 00000000 		.word	CapSense_1_dsFlash
 840 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 841              		.cfi_endproc
 842              	.LFE12:
 843              		.size	CapSense_1_SsCSDConnectSensorExt, .-CapSense_1_SsCSDConnectSensorExt
 844              		.section	.text.CapSense_1_CSDDisconnectSns,"ax",%progbits
 845              		.align	2
 846              		.global	CapSense_1_CSDDisconnectSns
 847              		.code	16
 848              		.thumb_func
 849              		.type	CapSense_1_CSDDisconnectSns, %function
 850              	CapSense_1_CSDDisconnectSns:
 851              	.LFB15:
1694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
 852              		.loc 1 1694 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              	.LVL88:
 857 0000 70B5     		push	{r4, r5, r6, lr}
 858              		.cfi_def_cfa_offset 16
 859              		.cfi_offset 4, -16
 860              		.cfi_offset 5, -12
 861              		.cfi_offset 6, -8
 862              		.cfi_offset 14, -4
 863 0002 0400     		movs	r4, r0
1705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 864              		.loc 1 1705 0
 865 0004 007E     		ldrb	r0, [r0, #24]
 866              	.LVL89:
1706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 64


 867              		.loc 1 1706 0
 868 0006 A57E     		ldrb	r5, [r4, #26]
 869              	.LVL90:
1711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 870              		.loc 1 1711 0
 871 0008 2168     		ldr	r1, [r4]
 872 000a 0B68     		ldr	r3, [r1]
 873 000c 0F22     		movs	r2, #15
 874 000e 8240     		lsls	r2, r2, r0
 875 0010 9343     		bics	r3, r2
 876 0012 0B60     		str	r3, [r1]
1713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 877              		.loc 1 1713 0
 878 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 879              	.LVL91:
1716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_1_GPIO_PC_MASK << pinModeShift);
 880              		.loc 1 1716 0
 881 0018 6168     		ldr	r1, [r4, #4]
 882 001a 0B68     		ldr	r3, [r1]
 883              	.LVL92:
1717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= CapSense_1_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
 884              		.loc 1 1717 0
 885 001c 0722     		movs	r2, #7
 886 001e AA40     		lsls	r2, r2, r5
 887 0020 9343     		bics	r3, r2
 888              	.LVL93:
 889 0022 1A00     		movs	r2, r3
 890              	.LVL94:
1718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
 891              		.loc 1 1718 0
 892 0024 0623     		movs	r3, #6
 893 0026 AB40     		lsls	r3, r3, r5
 894 0028 1343     		orrs	r3, r2
 895              	.LVL95:
1719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 896              		.loc 1 1719 0
 897 002a 0B60     		str	r3, [r1]
1721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 898              		.loc 1 1721 0
 899 002c FFF7FEFF 		bl	CyExitCriticalSection
 900              	.LVL96:
1724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 901              		.loc 1 1724 0
 902 0030 A168     		ldr	r1, [r4, #8]
 903 0032 0B68     		ldr	r3, [r1]
 904 0034 607E     		ldrb	r0, [r4, #25]
 905 0036 0122     		movs	r2, #1
 906 0038 8240     		lsls	r2, r2, r0
 907 003a 9343     		bics	r3, r2
 908 003c 0B60     		str	r3, [r1]
1735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 909              		.loc 1 1735 0
 910              		@ sp needed
 911              	.LVL97:
 912              	.LVL98:
 913 003e 70BD     		pop	{r4, r5, r6, pc}
 914              		.cfi_endproc
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 65


 915              	.LFE15:
 916              		.size	CapSense_1_CSDDisconnectSns, .-CapSense_1_CSDDisconnectSns
 917              		.section	.text.CapSense_1_SsCSDElectrodeCheck,"ax",%progbits
 918              		.align	2
 919              		.global	CapSense_1_SsCSDElectrodeCheck
 920              		.code	16
 921              		.thumb_func
 922              		.type	CapSense_1_SsCSDElectrodeCheck, %function
 923              	CapSense_1_SsCSDElectrodeCheck:
 924              	.LFB3:
 695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 925              		.loc 1 695 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929 0000 10B5     		push	{r4, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 4, -8
 932              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 933              		.loc 1 700 0
 934 0002 064B     		ldr	r3, .L54
 935 0004 1B78     		ldrb	r3, [r3]
 936 0006 012B     		cmp	r3, #1
 937 0008 06D1     		bne	.L52
 728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 938              		.loc 1 728 0
 939 000a 054B     		ldr	r3, .L54+4
 940 000c 1868     		ldr	r0, [r3]
 941 000e FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 942              	.LVL99:
 731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 943              		.loc 1 731 0
 944 0012 0022     		movs	r2, #0
 945 0014 014B     		ldr	r3, .L54
 946 0016 1A70     		strb	r2, [r3]
 947              	.L52:
 733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 948              		.loc 1 733 0
 949              		@ sp needed
 950 0018 10BD     		pop	{r4, pc}
 951              	.L55:
 952 001a C046     		.align	2
 953              	.L54:
 954 001c 00000000 		.word	.LANCHOR1
 955 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 956              		.cfi_endproc
 957              	.LFE3:
 958              		.size	CapSense_1_SsCSDElectrodeCheck, .-CapSense_1_SsCSDElectrodeCheck
 959              		.section	.text.CapSense_1_CSDSetupWidget,"ax",%progbits
 960              		.align	2
 961              		.global	CapSense_1_CSDSetupWidget
 962              		.code	16
 963              		.thumb_func
 964              		.type	CapSense_1_CSDSetupWidget, %function
 965              	CapSense_1_CSDSetupWidget:
 966              	.LFB7:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 66


1121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 967              		.loc 1 1121 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              	.LVL100:
 972 0000 70B5     		push	{r4, r5, r6, lr}
 973              		.cfi_def_cfa_offset 16
 974              		.cfi_offset 4, -16
 975              		.cfi_offset 5, -12
 976              		.cfi_offset 6, -8
 977              		.cfi_offset 14, -4
1123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
 978              		.loc 1 1123 0
 979 0002 104E     		ldr	r6, .L57
 980 0004 4301     		lsls	r3, r0, #5
 981 0006 F318     		adds	r3, r6, r3
 982 0008 5D68     		ldr	r5, [r3, #4]
 983              	.LVL101:
1127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 984              		.loc 1 1127 0
 985 000a C0B2     		uxtb	r0, r0
 986              	.LVL102:
 987 000c 0E4C     		ldr	r4, .L57+4
 988 000e 2070     		strb	r0, [r4]
1129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 989              		.loc 1 1129 0
 990 0010 0120     		movs	r0, #1
 991 0012 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 992              	.LVL103:
1137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 993              		.loc 1 1137 0
 994 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
 995              	.LVL104:
1141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 996              		.loc 1 1141 0
 997 001a 2378     		ldrb	r3, [r4]
 998 001c 5B01     		lsls	r3, r3, #5
 999 001e 9A59     		ldr	r2, [r3, r6]
1140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2SnsFla
 1000              		.loc 1 1140 0
 1001 0020 0A4B     		ldr	r3, .L57+8
 1002 0022 1A60     		str	r2, [r3]
1144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= CapSense_1_widgetIndex;
 1003              		.loc 1 1144 0
 1004 0024 0A4B     		ldr	r3, .L57+12
 1005 0026 DA68     		ldr	r2, [r3, #12]
 1006 0028 7F21     		movs	r1, #127
 1007 002a 8A43     		bics	r2, r1
 1008 002c DA60     		str	r2, [r3, #12]
1145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1009              		.loc 1 1145 0
 1010 002e 2178     		ldrb	r1, [r4]
 1011 0030 DA68     		ldr	r2, [r3, #12]
 1012 0032 0A43     		orrs	r2, r1
 1013 0034 DA60     		str	r2, [r3, #12]
1148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 67


 1014              		.loc 1 1148 0
 1015 0036 2800     		movs	r0, r5
 1016 0038 FFF7FEFF 		bl	CapSense_1_SsCSDCalculateScanDuration
 1017              	.LVL105:
1152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
 1018              		.loc 1 1152 0
 1019 003c FFF7FEFF 		bl	CapSense_1_SsCSDConfigClock
 1020              	.LVL106:
1155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1021              		.loc 1 1155 0
 1022              		@ sp needed
 1023              	.LVL107:
 1024              	.LVL108:
 1025 0040 70BD     		pop	{r4, r5, r6, pc}
 1026              	.L58:
 1027 0042 C046     		.align	2
 1028              	.L57:
 1029 0044 00000000 		.word	CapSense_1_dsFlash
 1030 0048 00000000 		.word	CapSense_1_widgetIndex
 1031 004c 00000000 		.word	CapSense_1_curSnsIOPtr
 1032 0050 00000000 		.word	CapSense_1_dsRam
 1033              		.cfi_endproc
 1034              	.LFE7:
 1035              		.size	CapSense_1_CSDSetupWidget, .-CapSense_1_CSDSetupWidget
 1036              		.section	.text.CapSense_1_CSDSetupWidgetExt,"ax",%progbits
 1037              		.align	2
 1038              		.global	CapSense_1_CSDSetupWidgetExt
 1039              		.code	16
 1040              		.thumb_func
 1041              		.type	CapSense_1_CSDSetupWidgetExt, %function
 1042              	CapSense_1_CSDSetupWidgetExt:
 1043              	.LFB8:
1202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1044              		.loc 1 1202 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048              	.LVL109:
 1049 0000 70B5     		push	{r4, r5, r6, lr}
 1050              		.cfi_def_cfa_offset 16
 1051              		.cfi_offset 4, -16
 1052              		.cfi_offset 5, -12
 1053              		.cfi_offset 6, -8
 1054              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
 1055              		.loc 1 1203 0
 1056 0002 4301     		lsls	r3, r0, #5
 1057 0004 134A     		ldr	r2, .L60
 1058 0006 D318     		adds	r3, r2, r3
 1059 0008 5D68     		ldr	r5, [r3, #4]
 1060              	.LVL110:
1207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1061              		.loc 1 1207 0
 1062 000a C9B2     		uxtb	r1, r1
 1063              	.LVL111:
 1064 000c 124C     		ldr	r4, .L60+4
 1065 000e 2170     		strb	r1, [r4]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 68


1211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
 1066              		.loc 1 1211 0
 1067 0010 9968     		ldr	r1, [r3, #8]
1212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1068              		.loc 1 1212 0
 1069 0012 2378     		ldrb	r3, [r4]
 1070 0014 DBB2     		uxtb	r3, r3
 1071 0016 9A00     		lsls	r2, r3, #2
 1072 0018 D318     		adds	r3, r2, r3
 1073 001a 5A00     		lsls	r2, r3, #1
 1074 001c 8A18     		adds	r2, r1, r2
1210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1075              		.loc 1 1210 0
 1076 001e 0F4B     		ldr	r3, .L60+8
 1077 0020 1A60     		str	r2, [r3]
1214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1078              		.loc 1 1214 0
 1079 0022 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 1080              	.LVL112:
1217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1081              		.loc 1 1217 0
 1082 0026 2800     		movs	r0, r5
 1083 0028 FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1084              	.LVL113:
1228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
 1085              		.loc 1 1228 0
 1086 002c 2378     		ldrb	r3, [r4]
 1087 002e DBB2     		uxtb	r3, r3
 1088 0030 0B49     		ldr	r1, .L60+12
 1089 0032 DA00     		lsls	r2, r3, #3
 1090 0034 D31A     		subs	r3, r2, r3
 1091 0036 9800     		lsls	r0, r3, #2
 1092 0038 0B68     		ldr	r3, [r1]
 1093 003a 9C46     		mov	ip, r3
 1094 003c 6044     		add	r0, r0, ip
 1095 003e 0860     		str	r0, [r1]
1229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 1096              		.loc 1 1229 0
 1097 0040 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 1098              	.LVL114:
1239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1099              		.loc 1 1239 0
 1100 0044 0122     		movs	r2, #1
 1101 0046 074B     		ldr	r3, .L60+16
 1102 0048 1A70     		strb	r2, [r3]
1242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 1103              		.loc 1 1242 0
 1104 004a 0748     		ldr	r0, .L60+20
 1105 004c FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1106              	.LVL115:
1243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1107              		.loc 1 1243 0
 1108              		@ sp needed
 1109              	.LVL116:
 1110 0050 70BD     		pop	{r4, r5, r6, pc}
 1111              	.L61:
 1112 0052 C046     		.align	2
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 69


 1113              	.L60:
 1114 0054 00000000 		.word	CapSense_1_dsFlash
 1115 0058 00000000 		.word	CapSense_1_sensorIndex
 1116 005c 00000000 		.word	CapSense_1_curRamSnsPtr
 1117 0060 00000000 		.word	CapSense_1_curSnsIOPtr
 1118 0064 00000000 		.word	.LANCHOR1
 1119 0068 00000000 		.word	CapSense_1_CSDPostSingleScan
 1120              		.cfi_endproc
 1121              	.LFE8:
 1122              		.size	CapSense_1_CSDSetupWidgetExt, .-CapSense_1_CSDSetupWidgetExt
 1123              		.section	.text.CapSense_1_SsCSDDisconnectSnsExt,"ax",%progbits
 1124              		.align	2
 1125              		.global	CapSense_1_SsCSDDisconnectSnsExt
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	CapSense_1_SsCSDDisconnectSnsExt, %function
 1129              	CapSense_1_SsCSDDisconnectSnsExt:
 1130              	.LFB13:
1569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 1131              		.loc 1 1569 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 0, uses_anonymous_args = 0
 1135              	.LVL117:
 1136 0000 10B5     		push	{r4, lr}
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 4, -8
 1139              		.cfi_offset 14, -4
1576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
 1140              		.loc 1 1576 0
 1141 0002 4001     		lsls	r0, r0, #5
 1142              	.LVL118:
 1143 0004 054B     		ldr	r3, .L63
 1144 0006 C058     		ldr	r0, [r0, r3]
1577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1145              		.loc 1 1577 0
 1146 0008 CB00     		lsls	r3, r1, #3
 1147 000a 591A     		subs	r1, r3, r1
 1148              	.LVL119:
 1149 000c 8B00     		lsls	r3, r1, #2
 1150 000e C018     		adds	r0, r0, r3
1575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
 1151              		.loc 1 1575 0
 1152 0010 034B     		ldr	r3, .L63+4
 1153 0012 1860     		str	r0, [r3]
1610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 1154              		.loc 1 1610 0
 1155 0014 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1156              	.LVL120:
1612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1157              		.loc 1 1612 0
 1158              		@ sp needed
 1159 0018 10BD     		pop	{r4, pc}
 1160              	.L64:
 1161 001a C046     		.align	2
 1162              	.L63:
 1163 001c 00000000 		.word	CapSense_1_dsFlash
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 70


 1164 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 1165              		.cfi_endproc
 1166              	.LFE13:
 1167              		.size	CapSense_1_SsCSDDisconnectSnsExt, .-CapSense_1_SsCSDDisconnectSnsExt
 1168              		.section	.text.CapSense_1_SsCSDCalibrateOneSensor,"ax",%progbits
 1169              		.align	2
 1170              		.code	16
 1171              		.thumb_func
 1172              		.type	CapSense_1_SsCSDCalibrateOneSensor, %function
 1173              	CapSense_1_SsCSDCalibrateOneSensor:
 1174              	.LFB19:
1911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
 1175              		.loc 1 1911 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 8
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              	.LVL121:
 1180 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1181              		.cfi_def_cfa_offset 20
 1182              		.cfi_offset 4, -20
 1183              		.cfi_offset 5, -16
 1184              		.cfi_offset 6, -12
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
 1187 0002 4746     		mov	r7, r8
 1188 0004 80B4     		push	{r7}
 1189              		.cfi_def_cfa_offset 24
 1190              		.cfi_offset 8, -24
 1191 0006 82B0     		sub	sp, sp, #8
 1192              		.cfi_def_cfa_offset 32
 1193 0008 0700     		movs	r7, r0
 1194 000a 0E00     		movs	r6, r1
 1195 000c 9046     		mov	r8, r2
 1196              	.LVL122:
1924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1197              		.loc 1 1924 0
 1198 000e 2F4A     		ldr	r2, .L72
 1199              	.LVL123:
 1200 0010 1378     		ldrb	r3, [r2]
1923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 1201              		.loc 1 1923 0
 1202 0012 5B01     		lsls	r3, r3, #5
 1203 0014 2E49     		ldr	r1, .L72+4
 1204              	.LVL124:
 1205 0016 CB18     		adds	r3, r1, r3
 1206 0018 5B68     		ldr	r3, [r3, #4]
 1207 001a 0193     		str	r3, [sp, #4]
 1208              	.LVL125:
1926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1209              		.loc 1 1926 0
 1210 001c 0023     		movs	r3, #0
 1211              	.LVL126:
 1212 001e 3370     		strb	r3, [r6]
1933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1213              		.loc 1 1933 0
 1214 0020 1078     		ldrb	r0, [r2]
 1215              	.LVL127:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 71


 1216 0022 C0B2     		uxtb	r0, r0
 1217 0024 2B4B     		ldr	r3, .L72+8
 1218 0026 1978     		ldrb	r1, [r3]
 1219 0028 C9B2     		uxtb	r1, r1
 1220 002a FFF7FEFF 		bl	CapSense_1_CSDSetupWidgetExt
 1221              	.LVL128:
1937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 1222              		.loc 1 1937 0
 1223 002e FFF7FEFF 		bl	CapSense_1_SsCSDSetSingleIdacMode
 1224              	.LVL129:
1916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1225              		.loc 1 1916 0
 1226 0032 0024     		movs	r4, #0
1913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
 1227              		.loc 1 1913 0
 1228 0034 8025     		movs	r5, #128
 1229 0036 6D00     		lsls	r5, r5, #1
 1230              	.LVL130:
 1231              	.L70:
1947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 1232              		.loc 1 1947 0
 1233 0038 BC42     		cmp	r4, r7
 1234 003a 02D2     		bcs	.L66
1950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 1235              		.loc 1 1950 0
 1236 003c 3378     		ldrb	r3, [r6]
 1237 003e AB43     		bics	r3, r5
 1238 0040 3370     		strb	r3, [r6]
 1239              	.L66:
1968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1240              		.loc 1 1968 0
 1241 0042 6D08     		lsrs	r5, r5, #1
 1242              	.LVL131:
1971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1243              		.loc 1 1971 0
 1244 0044 3378     		ldrb	r3, [r6]
 1245 0046 2B43     		orrs	r3, r5
 1246 0048 3370     		strb	r3, [r6]
1978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1247              		.loc 1 1978 0
 1248 004a 0198     		ldr	r0, [sp, #4]
 1249 004c FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1250              	.LVL132:
1981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1251              		.loc 1 1981 0
 1252 0050 FFF7FEFF 		bl	CapSense_1_CSDScanExt
 1253              	.LVL133:
1984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while (((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u) &&
 1254              		.loc 1 1984 0
 1255 0054 E123     		movs	r3, #225
 1256 0056 DB01     		lsls	r3, r3, #7
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1257              		.loc 1 1985 0
 1258 0058 00E0     		b	.L67
 1259              	.LVL134:
 1260              	.L69:
1989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 72


 1261              		.loc 1 1989 0
 1262 005a 013B     		subs	r3, r3, #1
 1263              	.LVL135:
 1264              	.L67:
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1265              		.loc 1 1985 0
 1266 005c 1E4A     		ldr	r2, .L72+12
 1267 005e D268     		ldr	r2, [r2, #12]
 1268 0060 1206     		lsls	r2, r2, #24
 1269 0062 01D5     		bpl	.L68
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1270              		.loc 1 1985 0 is_stmt 0 discriminator 1
 1271 0064 002B     		cmp	r3, #0
 1272 0066 F8D1     		bne	.L69
 1273              	.L68:
1993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1274              		.loc 1 1993 0 is_stmt 1
 1275 0068 1C4B     		ldr	r3, .L72+16
 1276              	.LVL136:
 1277 006a 1B68     		ldr	r3, [r3]
 1278 006c 1C88     		ldrh	r4, [r3]
 1279              	.LVL137:
1999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1280              		.loc 1 1999 0
 1281 006e 002D     		cmp	r5, #0
 1282 0070 E2D1     		bne	.L70
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
 1283              		.loc 1 2005 0
 1284 0072 164B     		ldr	r3, .L72
 1285 0074 1B78     		ldrb	r3, [r3]
2006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             + CapSense_1_sensorIndex;
 1286              		.loc 1 2006 0
 1287 0076 5B01     		lsls	r3, r3, #5
 1288 0078 154A     		ldr	r2, .L72+4
 1289 007a 9858     		ldr	r0, [r3, r2]
2007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1290              		.loc 1 2007 0
 1291 007c 154B     		ldr	r3, .L72+8
 1292 007e 1A78     		ldrb	r2, [r3]
 1293 0080 D2B2     		uxtb	r2, r2
 1294 0082 D300     		lsls	r3, r2, #3
 1295 0084 9A1A     		subs	r2, r3, r2
 1296 0086 9300     		lsls	r3, r2, #2
 1297 0088 C018     		adds	r0, r0, r3
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
 1298              		.loc 1 2005 0
 1299 008a 154B     		ldr	r3, .L72+20
 1300 008c 1860     		str	r0, [r3]
2010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 1301              		.loc 1 2010 0
 1302 008e FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1303              	.LVL138:
2014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1304              		.loc 1 2014 0
 1305 0092 0022     		movs	r2, #0
 1306 0094 134B     		ldr	r3, .L72+24
 1307 0096 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 73


2018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 1308              		.loc 1 2018 0
 1309 0098 FFF7FEFF 		bl	CapSense_1_SsCSDRestoreIdacMode
 1310              	.LVL139:
2022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1311              		.loc 1 2022 0
 1312 009c 2200     		movs	r2, r4
 1313 009e 3900     		movs	r1, r7
 1314 00a0 0198     		ldr	r0, [sp, #4]
 1315 00a2 FFF7FEFF 		bl	CapSense_1_SsCSDCalibrateCheck
 1316              	.LVL140:
2032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 1317              		.loc 1 2032 0
 1318 00a6 4346     		mov	r3, r8
 1319 00a8 1A78     		ldrb	r2, [r3]
 1320 00aa 3378     		ldrb	r3, [r6]
 1321 00ac 9A42     		cmp	r2, r3
 1322 00ae 04D2     		bcs	.L71
2034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
 1323              		.loc 1 2034 0
 1324 00b0 4246     		mov	r2, r8
 1325 00b2 1370     		strb	r3, [r2]
2037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedRawcount = rawData0;
 1326              		.loc 1 2037 0
 1327 00b4 0C4A     		ldr	r2, .L72+28
 1328 00b6 1372     		strb	r3, [r2, #8]
2038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 1329              		.loc 1 2038 0
 1330 00b8 5481     		strh	r4, [r2, #10]
 1331              	.L71:
2057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1332              		.loc 1 2057 0
 1333 00ba 084B     		ldr	r3, .L72+16
 1334 00bc 1B68     		ldr	r3, [r3]
 1335 00be 3278     		ldrb	r2, [r6]
 1336 00c0 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1337              		.loc 1 2065 0
 1338 00c2 02B0     		add	sp, sp, #8
 1339              		@ sp needed
 1340              	.LVL141:
 1341              	.LVL142:
 1342              	.LVL143:
 1343              	.LVL144:
 1344              	.LVL145:
 1345 00c4 04BC     		pop	{r2}
 1346 00c6 9046     		mov	r8, r2
 1347 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1348              	.L73:
 1349 00ca C046     		.align	2
 1350              	.L72:
 1351 00cc 00000000 		.word	CapSense_1_widgetIndex
 1352 00d0 00000000 		.word	CapSense_1_dsFlash
 1353 00d4 00000000 		.word	CapSense_1_sensorIndex
 1354 00d8 00000000 		.word	CapSense_1_dsRam
 1355 00dc 00000000 		.word	CapSense_1_curRamSnsPtr
 1356 00e0 00000000 		.word	CapSense_1_curSnsIOPtr
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 74


 1357 00e4 00000000 		.word	.LANCHOR1
 1358 00e8 00000000 		.word	.LANCHOR0
 1359              		.cfi_endproc
 1360              	.LFE19:
 1361              		.size	CapSense_1_SsCSDCalibrateOneSensor, .-CapSense_1_SsCSDCalibrateOneSensor
 1362              		.section	.text.CapSense_1_CSDCalibrateWidget,"ax",%progbits
 1363              		.align	2
 1364              		.global	CapSense_1_CSDCalibrateWidget
 1365              		.code	16
 1366              		.thumb_func
 1367              		.type	CapSense_1_CSDCalibrateWidget, %function
 1368              	CapSense_1_CSDCalibrateWidget:
 1369              	.LFB20:
2111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawLevel;
 1370              		.loc 1 2111 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 16
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL146:
 1375 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1376              		.cfi_def_cfa_offset 20
 1377              		.cfi_offset 4, -20
 1378              		.cfi_offset 5, -16
 1379              		.cfi_offset 6, -12
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 4F46     		mov	r7, r9
 1383 0004 80B4     		push	{r7}
 1384              		.cfi_def_cfa_offset 24
 1385              		.cfi_offset 9, -24
 1386 0006 84B0     		sub	sp, sp, #16
 1387              		.cfi_def_cfa_offset 40
 1388 0008 0400     		movs	r4, r0
 1389 000a 8946     		mov	r9, r1
 1390              	.LVL147:
2123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1391              		.loc 1 2123 0
 1392 000c 4301     		lsls	r3, r0, #5
 1393 000e 384A     		ldr	r2, .L81
 1394 0010 D318     		adds	r3, r2, r3
 1395 0012 5F68     		ldr	r7, [r3, #4]
 1396              	.LVL148:
2127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 1397              		.loc 1 2127 0
 1398 0014 0125     		movs	r5, #1
 1399 0016 03AB     		add	r3, sp, #12
 1400 0018 1D70     		strb	r5, [r3]
2135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1401              		.loc 1 2135 0
 1402 001a 3B88     		ldrh	r3, [r7]
 1403 001c 2800     		movs	r0, r5
 1404              	.LVL149:
 1405 001e 9840     		lsls	r0, r0, r3
 1406 0020 0138     		subs	r0, r0, #1
 1407              	.LVL150:
2138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1408              		.loc 1 2138 0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 75


 1409 0022 4843     		muls	r0, r1
 1410              	.LVL151:
 1411 0024 6421     		movs	r1, #100
 1412              	.LVL152:
 1413 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1414              	.LVL153:
 1415 002a 0190     		str	r0, [sp, #4]
 1416              	.LVL154:
2141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1417              		.loc 1 2141 0
 1418 002c E2B2     		uxtb	r2, r4
 1419 002e 314B     		ldr	r3, .L81+4
 1420 0030 1A70     		strb	r2, [r3]
2144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1421              		.loc 1 2144 0
 1422 0032 3148     		ldr	r0, .L81+8
 1423              	.LVL155:
 1424 0034 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1425              	.LVL156:
2147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1426              		.loc 1 2147 0
 1427 0038 3E00     		movs	r6, r7
 1428 003a 0936     		adds	r6, r6, #9
 1429              	.LVL157:
2150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedRawcount = 1u;
 1430              		.loc 1 2150 0
 1431 003c 2F4B     		ldr	r3, .L81+12
 1432 003e 1D72     		strb	r5, [r3, #8]
2151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 1433              		.loc 1 2151 0
 1434 0040 5D81     		strh	r5, [r3, #10]
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1435              		.loc 1 2155 0
 1436 0042 0022     		movs	r2, #0
 1437 0044 2E4B     		ldr	r3, .L81+16
 1438 0046 1A70     		strb	r2, [r3]
2113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1439              		.loc 1 2113 0
 1440 0048 0025     		movs	r5, #0
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1441              		.loc 1 2155 0
 1442 004a 0AE0     		b	.L75
 1443              	.LVL158:
 1444              	.L76:
2160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 1445              		.loc 1 2160 0
 1446 004c 03AA     		add	r2, sp, #12
 1447 004e 3100     		movs	r1, r6
 1448 0050 0198     		ldr	r0, [sp, #4]
 1449 0052 FFF7FEFF 		bl	CapSense_1_SsCSDCalibrateOneSensor
 1450              	.LVL159:
 1451 0056 0543     		orrs	r5, r0
 1452              	.LVL160:
2157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 1453              		.loc 1 2157 0
 1454 0058 294A     		ldr	r2, .L81+16
 1455 005a 1378     		ldrb	r3, [r2]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 76


 1456 005c 0133     		adds	r3, r3, #1
 1457 005e DBB2     		uxtb	r3, r3
 1458 0060 1370     		strb	r3, [r2]
 1459              	.LVL161:
 1460              	.L75:
2156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex++)
 1461              		.loc 1 2156 0 discriminator 1
 1462 0062 6301     		lsls	r3, r4, #5
 1463 0064 224A     		ldr	r2, .L81
 1464 0066 D318     		adds	r3, r2, r3
 1465 0068 DA7E     		ldrb	r2, [r3, #27]
 1466 006a 254B     		ldr	r3, .L81+16
 1467 006c 1B78     		ldrb	r3, [r3]
 1468 006e DBB2     		uxtb	r3, r3
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1469              		.loc 1 2155 0 discriminator 1
 1470 0070 9A42     		cmp	r2, r3
 1471 0072 EBD8     		bhi	.L76
2166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1472              		.loc 1 2166 0
 1473 0074 03AB     		add	r3, sp, #12
 1474 0076 1B78     		ldrb	r3, [r3]
 1475 0078 0133     		adds	r3, r3, #1
 1476 007a 5B08     		lsrs	r3, r3, #1
 1477 007c 7B72     		strb	r3, [r7, #9]
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1478              		.loc 1 2173 0
 1479 007e 0022     		movs	r2, #0
 1480 0080 1F4B     		ldr	r3, .L81+16
 1481 0082 1A70     		strb	r2, [r3]
 1482 0084 22E0     		b	.L77
 1483              	.LVL162:
 1484              	.L80:
2178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
 1485              		.loc 1 2178 0
 1486 0086 6301     		lsls	r3, r4, #5
 1487 0088 194A     		ldr	r2, .L81
 1488 008a D318     		adds	r3, r2, r3
 1489 008c 9E68     		ldr	r6, [r3, #8]
 1490 008e 1C4B     		ldr	r3, .L81+16
 1491 0090 1B78     		ldrb	r3, [r3]
 1492 0092 DBB2     		uxtb	r3, r3
 1493 0094 9A00     		lsls	r2, r3, #2
 1494 0096 D318     		adds	r3, r2, r3
 1495 0098 5A00     		lsls	r2, r3, #1
 1496 009a B618     		adds	r6, r6, r2
2177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sensorIndex
 1497              		.loc 1 2177 0
 1498 009c 194B     		ldr	r3, .L81+20
 1499 009e 1E60     		str	r6, [r3]
2180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
 1500              		.loc 1 2180 0
 1501 00a0 737A     		ldrb	r3, [r6, #9]
 1502 00a2 787A     		ldrb	r0, [r7, #9]
 1503 00a4 8342     		cmp	r3, r0
 1504 00a6 0AD3     		bcc	.L78
2182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 77


 1505              		.loc 1 2182 0
 1506 00a8 1B1A     		subs	r3, r3, r0
 1507 00aa D8B2     		uxtb	r0, r3
 1508 00ac 7072     		strb	r0, [r6, #9]
2186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_PERCENTAGE_100);
 1509              		.loc 1 2186 0
 1510 00ae 4B46     		mov	r3, r9
 1511 00b0 5843     		muls	r0, r3
 1512 00b2 6330     		adds	r0, r0, #99
 1513 00b4 6421     		movs	r1, #100
 1514 00b6 FFF7FEFF 		bl	__aeabi_uidiv
 1515              	.LVL163:
2185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) + CapSense_1
 1516              		.loc 1 2185 0
 1517 00ba 7072     		strb	r0, [r6, #9]
 1518 00bc 01E0     		b	.L79
 1519              	.L78:
2193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
 1520              		.loc 1 2193 0
 1521 00be 0023     		movs	r3, #0
 1522 00c0 7372     		strb	r3, [r6, #9]
 1523              	.L79:
2175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 1524              		.loc 1 2175 0
 1525 00c2 0F4A     		ldr	r2, .L81+16
 1526 00c4 1378     		ldrb	r3, [r2]
 1527 00c6 0133     		adds	r3, r3, #1
 1528 00c8 DBB2     		uxtb	r3, r3
 1529 00ca 1370     		strb	r3, [r2]
 1530              	.L77:
2174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex++)
 1531              		.loc 1 2174 0 discriminator 1
 1532 00cc 6301     		lsls	r3, r4, #5
 1533 00ce 084A     		ldr	r2, .L81
 1534 00d0 D318     		adds	r3, r2, r3
 1535 00d2 DA7E     		ldrb	r2, [r3, #27]
 1536 00d4 0A4B     		ldr	r3, .L81+16
 1537 00d6 1B78     		ldrb	r3, [r3]
 1538 00d8 DBB2     		uxtb	r3, r3
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1539              		.loc 1 2173 0 discriminator 1
 1540 00da 9A42     		cmp	r2, r3
 1541 00dc D3D8     		bhi	.L80
2343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1542              		.loc 1 2343 0
 1543 00de 0022     		movs	r2, #0
 1544 00e0 074B     		ldr	r3, .L81+16
 1545 00e2 1A70     		strb	r2, [r3]
2346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) || \
 1546              		.loc 1 2346 0
 1547 00e4 2800     		movs	r0, r5
 1548 00e6 04B0     		add	sp, sp, #16
 1549              		@ sp needed
 1550              	.LVL164:
 1551              	.LVL165:
 1552              	.LVL166:
 1553              	.LVL167:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 78


 1554 00e8 04BC     		pop	{r2}
 1555 00ea 9146     		mov	r9, r2
 1556 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 1557              	.L82:
 1558 00ee C046     		.align	2
 1559              	.L81:
 1560 00f0 00000000 		.word	CapSense_1_dsFlash
 1561 00f4 00000000 		.word	CapSense_1_widgetIndex
 1562 00f8 00000000 		.word	CapSense_1_CSDPostSingleScan
 1563 00fc 00000000 		.word	.LANCHOR0
 1564 0100 00000000 		.word	CapSense_1_sensorIndex
 1565 0104 00000000 		.word	CapSense_1_curRamSnsPtr
 1566              		.cfi_endproc
 1567              	.LFE20:
 1568              		.size	CapSense_1_CSDCalibrateWidget, .-CapSense_1_CSDCalibrateWidget
 1569              		.global	CapSense_1_calibratedRawcount
 1570              		.global	CapSense_1_calibratedIdac
 1571              		.global	CapSense_1_configCsd
 1572              		.data
 1573              		.align	2
 1574              		.set	.LANCHOR0,. + 0
 1575              		.type	CapSense_1_configCsd, %object
 1576              		.size	CapSense_1_configCsd, 4
 1577              	CapSense_1_configCsd:
 1578 0000 0008C001 		.word	29362176
 1579              		.type	CapSense_1_counterResolution, %object
 1580              		.size	CapSense_1_counterResolution, 4
 1581              	CapSense_1_counterResolution:
 1582 0004 0000FF0F 		.word	268369920
 1583              		.type	CapSense_1_calibratedIdac, %object
 1584              		.size	CapSense_1_calibratedIdac, 1
 1585              	CapSense_1_calibratedIdac:
 1586 0008 01       		.byte	1
 1587 0009 00       		.space	1
 1588              		.type	CapSense_1_calibratedRawcount, %object
 1589              		.size	CapSense_1_calibratedRawcount, 2
 1590              	CapSense_1_calibratedRawcount:
 1591 000a 0100     		.short	1
 1592              		.bss
 1593              		.set	.LANCHOR1,. + 0
 1594              		.type	CapSense_1_eleCsdDisconnectFlag, %object
 1595              		.size	CapSense_1_eleCsdDisconnectFlag, 1
 1596              	CapSense_1_eleCsdDisconnectFlag:
 1597 0000 00       		.space	1
 1598              		.text
 1599              	.Letext0:
 1600              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1601              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1602              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 1603              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1604              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 1605              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1606              		.file 8 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1607              		.section	.debug_info,"",%progbits
 1608              	.Ldebug_info0:
 1609 0000 29100000 		.4byte	0x1029
 1610 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 79


 1611 0006 00000000 		.4byte	.Ldebug_abbrev0
 1612 000a 04       		.byte	0x4
 1613 000b 01       		.uleb128 0x1
 1614 000c D5020000 		.4byte	.LASF173
 1615 0010 0C       		.byte	0xc
 1616 0011 C0030000 		.4byte	.LASF174
 1617 0015 1A040000 		.4byte	.LASF175
 1618 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1619 001d 00000000 		.4byte	0
 1620 0021 00000000 		.4byte	.Ldebug_line0
 1621 0025 02       		.uleb128 0x2
 1622 0026 01       		.byte	0x1
 1623 0027 06       		.byte	0x6
 1624 0028 A90A0000 		.4byte	.LASF0
 1625 002c 02       		.uleb128 0x2
 1626 002d 01       		.byte	0x1
 1627 002e 08       		.byte	0x8
 1628 002f F5090000 		.4byte	.LASF1
 1629 0033 02       		.uleb128 0x2
 1630 0034 02       		.byte	0x2
 1631 0035 05       		.byte	0x5
 1632 0036 ED070000 		.4byte	.LASF2
 1633 003a 02       		.uleb128 0x2
 1634 003b 02       		.byte	0x2
 1635 003c 07       		.byte	0x7
 1636 003d BA0A0000 		.4byte	.LASF3
 1637 0041 02       		.uleb128 0x2
 1638 0042 04       		.byte	0x4
 1639 0043 05       		.byte	0x5
 1640 0044 F7070000 		.4byte	.LASF4
 1641 0048 02       		.uleb128 0x2
 1642 0049 04       		.byte	0x4
 1643 004a 07       		.byte	0x7
 1644 004b A5090000 		.4byte	.LASF5
 1645 004f 02       		.uleb128 0x2
 1646 0050 08       		.byte	0x8
 1647 0051 05       		.byte	0x5
 1648 0052 AD050000 		.4byte	.LASF6
 1649 0056 02       		.uleb128 0x2
 1650 0057 08       		.byte	0x8
 1651 0058 07       		.byte	0x7
 1652 0059 57020000 		.4byte	.LASF7
 1653 005d 03       		.uleb128 0x3
 1654 005e 04       		.byte	0x4
 1655 005f 05       		.byte	0x5
 1656 0060 696E7400 		.ascii	"int\000"
 1657 0064 02       		.uleb128 0x2
 1658 0065 04       		.byte	0x4
 1659 0066 07       		.byte	0x7
 1660 0067 8E000000 		.4byte	.LASF8
 1661 006b 04       		.uleb128 0x4
 1662 006c 110B0000 		.4byte	.LASF9
 1663 0070 02       		.byte	0x2
 1664 0071 E401     		.2byte	0x1e4
 1665 0073 2C000000 		.4byte	0x2c
 1666 0077 04       		.uleb128 0x4
 1667 0078 3A050000 		.4byte	.LASF10
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 80


 1668 007c 02       		.byte	0x2
 1669 007d E501     		.2byte	0x1e5
 1670 007f 3A000000 		.4byte	0x3a
 1671 0083 04       		.uleb128 0x4
 1672 0084 B6060000 		.4byte	.LASF11
 1673 0088 02       		.byte	0x2
 1674 0089 E601     		.2byte	0x1e6
 1675 008b 48000000 		.4byte	0x48
 1676 008f 02       		.uleb128 0x2
 1677 0090 04       		.byte	0x4
 1678 0091 04       		.byte	0x4
 1679 0092 29020000 		.4byte	.LASF12
 1680 0096 02       		.uleb128 0x2
 1681 0097 08       		.byte	0x8
 1682 0098 04       		.byte	0x4
 1683 0099 170B0000 		.4byte	.LASF13
 1684 009d 02       		.uleb128 0x2
 1685 009e 01       		.byte	0x1
 1686 009f 08       		.byte	0x8
 1687 00a0 06050000 		.4byte	.LASF14
 1688 00a4 04       		.uleb128 0x4
 1689 00a5 EC090000 		.4byte	.LASF15
 1690 00a9 02       		.byte	0x2
 1691 00aa 8602     		.2byte	0x286
 1692 00ac 48000000 		.4byte	0x48
 1693 00b0 05       		.uleb128 0x5
 1694 00b1 6B000000 		.4byte	0x6b
 1695 00b5 04       		.uleb128 0x4
 1696 00b6 4E070000 		.4byte	.LASF16
 1697 00ba 02       		.byte	0x2
 1698 00bb 9002     		.2byte	0x290
 1699 00bd C1000000 		.4byte	0xc1
 1700 00c1 05       		.uleb128 0x5
 1701 00c2 83000000 		.4byte	0x83
 1702 00c6 04       		.uleb128 0x4
 1703 00c7 BB050000 		.4byte	.LASF17
 1704 00cb 03       		.byte	0x3
 1705 00cc 3901     		.2byte	0x139
 1706 00ce 77000000 		.4byte	0x77
 1707 00d2 04       		.uleb128 0x4
 1708 00d3 9E020000 		.4byte	.LASF18
 1709 00d7 03       		.byte	0x3
 1710 00d8 3D01     		.2byte	0x13d
 1711 00da 6B000000 		.4byte	0x6b
 1712 00de 06       		.uleb128 0x6
 1713 00df 0C       		.byte	0xc
 1714 00e0 04       		.byte	0x4
 1715 00e1 6E       		.byte	0x6e
 1716 00e2 3B010000 		.4byte	0x13b
 1717 00e6 07       		.uleb128 0x7
 1718 00e7 460B0000 		.4byte	.LASF19
 1719 00eb 04       		.byte	0x4
 1720 00ec 73       		.byte	0x73
 1721 00ed 77000000 		.4byte	0x77
 1722 00f1 00       		.byte	0
 1723 00f2 07       		.uleb128 0x7
 1724 00f3 4D0B0000 		.4byte	.LASF20
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 81


 1725 00f7 04       		.byte	0x4
 1726 00f8 77       		.byte	0x77
 1727 00f9 77000000 		.4byte	0x77
 1728 00fd 02       		.byte	0x2
 1729 00fe 07       		.uleb128 0x7
 1730 00ff 540B0000 		.4byte	.LASF21
 1731 0103 04       		.byte	0x4
 1732 0104 7B       		.byte	0x7b
 1733 0105 77000000 		.4byte	0x77
 1734 0109 04       		.byte	0x4
 1735 010a 07       		.uleb128 0x7
 1736 010b 5B0B0000 		.4byte	.LASF22
 1737 010f 04       		.byte	0x4
 1738 0110 7F       		.byte	0x7f
 1739 0111 77000000 		.4byte	0x77
 1740 0115 06       		.byte	0x6
 1741 0116 07       		.uleb128 0x7
 1742 0117 620B0000 		.4byte	.LASF23
 1743 011b 04       		.byte	0x4
 1744 011c 83       		.byte	0x83
 1745 011d 77000000 		.4byte	0x77
 1746 0121 08       		.byte	0x8
 1747 0122 07       		.uleb128 0x7
 1748 0123 690B0000 		.4byte	.LASF24
 1749 0127 04       		.byte	0x4
 1750 0128 87       		.byte	0x87
 1751 0129 6B000000 		.4byte	0x6b
 1752 012d 0A       		.byte	0xa
 1753 012e 07       		.uleb128 0x7
 1754 012f 700B0000 		.4byte	.LASF25
 1755 0133 04       		.byte	0x4
 1756 0134 8B       		.byte	0x8b
 1757 0135 6B000000 		.4byte	0x6b
 1758 0139 0B       		.byte	0xb
 1759 013a 00       		.byte	0
 1760 013b 08       		.uleb128 0x8
 1761 013c BB040000 		.4byte	.LASF26
 1762 0140 04       		.byte	0x4
 1763 0141 8C       		.byte	0x8c
 1764 0142 DE000000 		.4byte	0xde
 1765 0146 09       		.uleb128 0x9
 1766 0147 01       		.byte	0x1
 1767 0148 2C000000 		.4byte	0x2c
 1768 014c 05       		.byte	0x5
 1769 014d 70       		.byte	0x70
 1770 014e 71010000 		.4byte	0x171
 1771 0152 0A       		.uleb128 0xa
 1772 0153 D8060000 		.4byte	.LASF27
 1773 0157 00       		.byte	0
 1774 0158 0A       		.uleb128 0xa
 1775 0159 7F090000 		.4byte	.LASF28
 1776 015d 01       		.byte	0x1
 1777 015e 0A       		.uleb128 0xa
 1778 015f 56080000 		.4byte	.LASF29
 1779 0163 02       		.byte	0x2
 1780 0164 0A       		.uleb128 0xa
 1781 0165 F2030000 		.4byte	.LASF30
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 82


 1782 0169 03       		.byte	0x3
 1783 016a 0A       		.uleb128 0xa
 1784 016b 30070000 		.4byte	.LASF31
 1785 016f 04       		.byte	0x4
 1786 0170 00       		.byte	0
 1787 0171 06       		.uleb128 0x6
 1788 0172 12       		.byte	0x12
 1789 0173 05       		.byte	0x5
 1790 0174 8E       		.byte	0x8e
 1791 0175 0A020000 		.4byte	0x20a
 1792 0179 07       		.uleb128 0x7
 1793 017a 41050000 		.4byte	.LASF32
 1794 017e 05       		.byte	0x5
 1795 017f 93       		.byte	0x93
 1796 0180 77000000 		.4byte	0x77
 1797 0184 00       		.byte	0
 1798 0185 07       		.uleb128 0x7
 1799 0186 DB090000 		.4byte	.LASF33
 1800 018a 05       		.byte	0x5
 1801 018b 98       		.byte	0x98
 1802 018c C6000000 		.4byte	0xc6
 1803 0190 02       		.byte	0x2
 1804 0191 07       		.uleb128 0x7
 1805 0192 FE040000 		.4byte	.LASF34
 1806 0196 05       		.byte	0x5
 1807 0197 9D       		.byte	0x9d
 1808 0198 6B000000 		.4byte	0x6b
 1809 019c 04       		.byte	0x4
 1810 019d 07       		.uleb128 0x7
 1811 019e 6F060000 		.4byte	.LASF35
 1812 01a2 05       		.byte	0x5
 1813 01a3 A2       		.byte	0xa2
 1814 01a4 6B000000 		.4byte	0x6b
 1815 01a8 05       		.byte	0x5
 1816 01a9 07       		.uleb128 0x7
 1817 01aa BD060000 		.4byte	.LASF36
 1818 01ae 05       		.byte	0x5
 1819 01af A8       		.byte	0xa8
 1820 01b0 6B000000 		.4byte	0x6b
 1821 01b4 06       		.byte	0x6
 1822 01b5 07       		.uleb128 0x7
 1823 01b6 F2050000 		.4byte	.LASF37
 1824 01ba 05       		.byte	0x5
 1825 01bb AE       		.byte	0xae
 1826 01bc 6B000000 		.4byte	0x6b
 1827 01c0 07       		.byte	0x7
 1828 01c1 07       		.uleb128 0x7
 1829 01c2 3F040000 		.4byte	.LASF38
 1830 01c6 05       		.byte	0x5
 1831 01c7 B5       		.byte	0xb5
 1832 01c8 D2000000 		.4byte	0xd2
 1833 01cc 08       		.byte	0x8
 1834 01cd 07       		.uleb128 0x7
 1835 01ce C3090000 		.4byte	.LASF39
 1836 01d2 05       		.byte	0x5
 1837 01d3 BC       		.byte	0xbc
 1838 01d4 0A020000 		.4byte	0x20a
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 83


 1839 01d8 09       		.byte	0x9
 1840 01d9 07       		.uleb128 0x7
 1841 01da 730A0000 		.4byte	.LASF40
 1842 01de 05       		.byte	0x5
 1843 01df C4       		.byte	0xc4
 1844 01e0 77000000 		.4byte	0x77
 1845 01e4 0A       		.byte	0xa
 1846 01e5 07       		.uleb128 0x7
 1847 01e6 B3070000 		.4byte	.LASF41
 1848 01ea 05       		.byte	0x5
 1849 01eb C9       		.byte	0xc9
 1850 01ec 6B000000 		.4byte	0x6b
 1851 01f0 0C       		.byte	0xc
 1852 01f1 07       		.uleb128 0x7
 1853 01f2 39090000 		.4byte	.LASF42
 1854 01f6 05       		.byte	0x5
 1855 01f7 CF       		.byte	0xcf
 1856 01f8 77000000 		.4byte	0x77
 1857 01fc 0E       		.byte	0xe
 1858 01fd 07       		.uleb128 0x7
 1859 01fe B9030000 		.4byte	.LASF43
 1860 0202 05       		.byte	0x5
 1861 0203 D4       		.byte	0xd4
 1862 0204 77000000 		.4byte	0x77
 1863 0208 10       		.byte	0x10
 1864 0209 00       		.byte	0
 1865 020a 0B       		.uleb128 0xb
 1866 020b 6B000000 		.4byte	0x6b
 1867 020f 1A020000 		.4byte	0x21a
 1868 0213 0C       		.uleb128 0xc
 1869 0214 1A020000 		.4byte	0x21a
 1870 0218 00       		.byte	0
 1871 0219 00       		.byte	0
 1872 021a 02       		.uleb128 0x2
 1873 021b 04       		.byte	0x4
 1874 021c 07       		.byte	0x7
 1875 021d C8070000 		.4byte	.LASF44
 1876 0221 08       		.uleb128 0x8
 1877 0222 8F060000 		.4byte	.LASF45
 1878 0226 05       		.byte	0x5
 1879 0227 D5       		.byte	0xd5
 1880 0228 71010000 		.4byte	0x171
 1881 022c 06       		.uleb128 0x6
 1882 022d 12       		.byte	0x12
 1883 022e 05       		.byte	0x5
 1884 022f DA       		.byte	0xda
 1885 0230 CB020000 		.4byte	0x2cb
 1886 0234 07       		.uleb128 0x7
 1887 0235 41050000 		.4byte	.LASF32
 1888 0239 05       		.byte	0x5
 1889 023a DF       		.byte	0xdf
 1890 023b 77000000 		.4byte	0x77
 1891 023f 00       		.byte	0
 1892 0240 07       		.uleb128 0x7
 1893 0241 DB090000 		.4byte	.LASF33
 1894 0245 05       		.byte	0x5
 1895 0246 E4       		.byte	0xe4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 84


 1896 0247 C6000000 		.4byte	0xc6
 1897 024b 02       		.byte	0x2
 1898 024c 07       		.uleb128 0x7
 1899 024d FE040000 		.4byte	.LASF34
 1900 0251 05       		.byte	0x5
 1901 0252 E9       		.byte	0xe9
 1902 0253 6B000000 		.4byte	0x6b
 1903 0257 04       		.byte	0x4
 1904 0258 07       		.uleb128 0x7
 1905 0259 6F060000 		.4byte	.LASF35
 1906 025d 05       		.byte	0x5
 1907 025e EE       		.byte	0xee
 1908 025f 6B000000 		.4byte	0x6b
 1909 0263 05       		.byte	0x5
 1910 0264 07       		.uleb128 0x7
 1911 0265 BD060000 		.4byte	.LASF36
 1912 0269 05       		.byte	0x5
 1913 026a F4       		.byte	0xf4
 1914 026b 6B000000 		.4byte	0x6b
 1915 026f 06       		.byte	0x6
 1916 0270 07       		.uleb128 0x7
 1917 0271 F2050000 		.4byte	.LASF37
 1918 0275 05       		.byte	0x5
 1919 0276 FA       		.byte	0xfa
 1920 0277 6B000000 		.4byte	0x6b
 1921 027b 07       		.byte	0x7
 1922 027c 0D       		.uleb128 0xd
 1923 027d 3F040000 		.4byte	.LASF38
 1924 0281 05       		.byte	0x5
 1925 0282 0101     		.2byte	0x101
 1926 0284 D2000000 		.4byte	0xd2
 1927 0288 08       		.byte	0x8
 1928 0289 0D       		.uleb128 0xd
 1929 028a C3090000 		.4byte	.LASF39
 1930 028e 05       		.byte	0x5
 1931 028f 0801     		.2byte	0x108
 1932 0291 0A020000 		.4byte	0x20a
 1933 0295 09       		.byte	0x9
 1934 0296 0D       		.uleb128 0xd
 1935 0297 730A0000 		.4byte	.LASF40
 1936 029b 05       		.byte	0x5
 1937 029c 1001     		.2byte	0x110
 1938 029e 77000000 		.4byte	0x77
 1939 02a2 0A       		.byte	0xa
 1940 02a3 0D       		.uleb128 0xd
 1941 02a4 B3070000 		.4byte	.LASF41
 1942 02a8 05       		.byte	0x5
 1943 02a9 1501     		.2byte	0x115
 1944 02ab 6B000000 		.4byte	0x6b
 1945 02af 0C       		.byte	0xc
 1946 02b0 0D       		.uleb128 0xd
 1947 02b1 39090000 		.4byte	.LASF42
 1948 02b5 05       		.byte	0x5
 1949 02b6 1B01     		.2byte	0x11b
 1950 02b8 77000000 		.4byte	0x77
 1951 02bc 0E       		.byte	0xe
 1952 02bd 0D       		.uleb128 0xd
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 85


 1953 02be B9030000 		.4byte	.LASF43
 1954 02c2 05       		.byte	0x5
 1955 02c3 2001     		.2byte	0x120
 1956 02c5 77000000 		.4byte	0x77
 1957 02c9 10       		.byte	0x10
 1958 02ca 00       		.byte	0
 1959 02cb 04       		.uleb128 0x4
 1960 02cc 990B0000 		.4byte	.LASF46
 1961 02d0 05       		.byte	0x5
 1962 02d1 2101     		.2byte	0x121
 1963 02d3 2C020000 		.4byte	0x22c
 1964 02d7 0E       		.uleb128 0xe
 1965 02d8 90       		.byte	0x90
 1966 02d9 05       		.byte	0x5
 1967 02da 2701     		.2byte	0x127
 1968 02dc 49030000 		.4byte	0x349
 1969 02e0 0D       		.uleb128 0xd
 1970 02e1 74080000 		.4byte	.LASF47
 1971 02e5 05       		.byte	0x5
 1972 02e6 2C01     		.2byte	0x12c
 1973 02e8 CB020000 		.4byte	0x2cb
 1974 02ec 00       		.byte	0
 1975 02ed 0D       		.uleb128 0xd
 1976 02ee 7C080000 		.4byte	.LASF48
 1977 02f2 05       		.byte	0x5
 1978 02f3 3101     		.2byte	0x131
 1979 02f5 CB020000 		.4byte	0x2cb
 1980 02f9 12       		.byte	0x12
 1981 02fa 0D       		.uleb128 0xd
 1982 02fb 84080000 		.4byte	.LASF49
 1983 02ff 05       		.byte	0x5
 1984 0300 3601     		.2byte	0x136
 1985 0302 CB020000 		.4byte	0x2cb
 1986 0306 24       		.byte	0x24
 1987 0307 0D       		.uleb128 0xd
 1988 0308 8C080000 		.4byte	.LASF50
 1989 030c 05       		.byte	0x5
 1990 030d 3B01     		.2byte	0x13b
 1991 030f CB020000 		.4byte	0x2cb
 1992 0313 36       		.byte	0x36
 1993 0314 0D       		.uleb128 0xd
 1994 0315 9C080000 		.4byte	.LASF51
 1995 0319 05       		.byte	0x5
 1996 031a 4001     		.2byte	0x140
 1997 031c CB020000 		.4byte	0x2cb
 1998 0320 48       		.byte	0x48
 1999 0321 0D       		.uleb128 0xd
 2000 0322 A4080000 		.4byte	.LASF52
 2001 0326 05       		.byte	0x5
 2002 0327 4501     		.2byte	0x145
 2003 0329 CB020000 		.4byte	0x2cb
 2004 032d 5A       		.byte	0x5a
 2005 032e 0D       		.uleb128 0xd
 2006 032f 94080000 		.4byte	.LASF53
 2007 0333 05       		.byte	0x5
 2008 0334 4A01     		.2byte	0x14a
 2009 0336 CB020000 		.4byte	0x2cb
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 86


 2010 033a 6C       		.byte	0x6c
 2011 033b 0D       		.uleb128 0xd
 2012 033c AC080000 		.4byte	.LASF54
 2013 0340 05       		.byte	0x5
 2014 0341 4F01     		.2byte	0x14f
 2015 0343 CB020000 		.4byte	0x2cb
 2016 0347 7E       		.byte	0x7e
 2017 0348 00       		.byte	0
 2018 0349 04       		.uleb128 0x4
 2019 034a C1010000 		.4byte	.LASF55
 2020 034e 05       		.byte	0x5
 2021 034f 5001     		.2byte	0x150
 2022 0351 D7020000 		.4byte	0x2d7
 2023 0355 0E       		.uleb128 0xe
 2024 0356 0A       		.byte	0xa
 2025 0357 05       		.byte	0x5
 2026 0358 5601     		.2byte	0x156
 2027 035a AD030000 		.4byte	0x3ad
 2028 035e 0F       		.uleb128 0xf
 2029 035f 72617700 		.ascii	"raw\000"
 2030 0363 05       		.byte	0x5
 2031 0364 5B01     		.2byte	0x15b
 2032 0366 AD030000 		.4byte	0x3ad
 2033 036a 00       		.byte	0
 2034 036b 0D       		.uleb128 0xd
 2035 036c B50A0000 		.4byte	.LASF56
 2036 0370 05       		.byte	0x5
 2037 0371 6001     		.2byte	0x160
 2038 0373 AD030000 		.4byte	0x3ad
 2039 0377 02       		.byte	0x2
 2040 0378 0D       		.uleb128 0xd
 2041 0379 E4090000 		.4byte	.LASF57
 2042 037d 05       		.byte	0x5
 2043 037e 6601     		.2byte	0x166
 2044 0380 0A020000 		.4byte	0x20a
 2045 0384 04       		.byte	0x4
 2046 0385 0D       		.uleb128 0xd
 2047 0386 3A080000 		.4byte	.LASF58
 2048 038a 05       		.byte	0x5
 2049 038b 6B01     		.2byte	0x16b
 2050 038d C6000000 		.4byte	0xc6
 2051 0391 06       		.byte	0x6
 2052 0392 0D       		.uleb128 0xd
 2053 0393 1E0B0000 		.4byte	.LASF59
 2054 0397 05       		.byte	0x5
 2055 0398 7001     		.2byte	0x170
 2056 039a BD030000 		.4byte	0x3bd
 2057 039e 08       		.byte	0x8
 2058 039f 0D       		.uleb128 0xd
 2059 03a0 7E050000 		.4byte	.LASF60
 2060 03a4 05       		.byte	0x5
 2061 03a5 7501     		.2byte	0x175
 2062 03a7 0A020000 		.4byte	0x20a
 2063 03ab 09       		.byte	0x9
 2064 03ac 00       		.byte	0
 2065 03ad 0B       		.uleb128 0xb
 2066 03ae 77000000 		.4byte	0x77
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 87


 2067 03b2 BD030000 		.4byte	0x3bd
 2068 03b6 0C       		.uleb128 0xc
 2069 03b7 1A020000 		.4byte	0x21a
 2070 03bb 00       		.byte	0
 2071 03bc 00       		.byte	0
 2072 03bd 0B       		.uleb128 0xb
 2073 03be D2000000 		.4byte	0xd2
 2074 03c2 CD030000 		.4byte	0x3cd
 2075 03c6 0C       		.uleb128 0xc
 2076 03c7 1A020000 		.4byte	0x21a
 2077 03cb 00       		.byte	0
 2078 03cc 00       		.byte	0
 2079 03cd 04       		.uleb128 0x4
 2080 03ce 2C0B0000 		.4byte	.LASF61
 2081 03d2 05       		.byte	0x5
 2082 03d3 7601     		.2byte	0x176
 2083 03d5 55030000 		.4byte	0x355
 2084 03d9 0E       		.uleb128 0xe
 2085 03da 50       		.byte	0x50
 2086 03db 05       		.byte	0x5
 2087 03dc 7C01     		.2byte	0x17c
 2088 03de 4B040000 		.4byte	0x44b
 2089 03e2 0D       		.uleb128 0xd
 2090 03e3 74080000 		.4byte	.LASF47
 2091 03e7 05       		.byte	0x5
 2092 03e8 8101     		.2byte	0x181
 2093 03ea 4B040000 		.4byte	0x44b
 2094 03ee 00       		.byte	0
 2095 03ef 0D       		.uleb128 0xd
 2096 03f0 7C080000 		.4byte	.LASF48
 2097 03f4 05       		.byte	0x5
 2098 03f5 8601     		.2byte	0x186
 2099 03f7 4B040000 		.4byte	0x44b
 2100 03fb 0A       		.byte	0xa
 2101 03fc 0D       		.uleb128 0xd
 2102 03fd 84080000 		.4byte	.LASF49
 2103 0401 05       		.byte	0x5
 2104 0402 8B01     		.2byte	0x18b
 2105 0404 4B040000 		.4byte	0x44b
 2106 0408 14       		.byte	0x14
 2107 0409 0D       		.uleb128 0xd
 2108 040a 8C080000 		.4byte	.LASF50
 2109 040e 05       		.byte	0x5
 2110 040f 9001     		.2byte	0x190
 2111 0411 4B040000 		.4byte	0x44b
 2112 0415 1E       		.byte	0x1e
 2113 0416 0D       		.uleb128 0xd
 2114 0417 9C080000 		.4byte	.LASF51
 2115 041b 05       		.byte	0x5
 2116 041c 9501     		.2byte	0x195
 2117 041e 4B040000 		.4byte	0x44b
 2118 0422 28       		.byte	0x28
 2119 0423 0D       		.uleb128 0xd
 2120 0424 A4080000 		.4byte	.LASF52
 2121 0428 05       		.byte	0x5
 2122 0429 9A01     		.2byte	0x19a
 2123 042b 4B040000 		.4byte	0x44b
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 88


 2124 042f 32       		.byte	0x32
 2125 0430 0D       		.uleb128 0xd
 2126 0431 94080000 		.4byte	.LASF53
 2127 0435 05       		.byte	0x5
 2128 0436 9F01     		.2byte	0x19f
 2129 0438 4B040000 		.4byte	0x44b
 2130 043c 3C       		.byte	0x3c
 2131 043d 0D       		.uleb128 0xd
 2132 043e AC080000 		.4byte	.LASF54
 2133 0442 05       		.byte	0x5
 2134 0443 A401     		.2byte	0x1a4
 2135 0445 4B040000 		.4byte	0x44b
 2136 0449 46       		.byte	0x46
 2137 044a 00       		.byte	0
 2138 044b 0B       		.uleb128 0xb
 2139 044c CD030000 		.4byte	0x3cd
 2140 0450 5B040000 		.4byte	0x45b
 2141 0454 0C       		.uleb128 0xc
 2142 0455 1A020000 		.4byte	0x21a
 2143 0459 00       		.byte	0
 2144 045a 00       		.byte	0
 2145 045b 04       		.uleb128 0x4
 2146 045c EF060000 		.4byte	.LASF62
 2147 0460 05       		.byte	0x5
 2148 0461 A501     		.2byte	0x1a5
 2149 0463 D9030000 		.4byte	0x3d9
 2150 0467 10       		.uleb128 0x10
 2151 0468 0C01     		.2byte	0x10c
 2152 046a 05       		.byte	0x5
 2153 046b AB01     		.2byte	0x1ab
 2154 046d 53050000 		.4byte	0x553
 2155 0471 0D       		.uleb128 0xd
 2156 0472 67070000 		.4byte	.LASF63
 2157 0476 05       		.byte	0x5
 2158 0477 B201     		.2byte	0x1b2
 2159 0479 77000000 		.4byte	0x77
 2160 047d 00       		.byte	0
 2161 047e 0D       		.uleb128 0xd
 2162 047f 900B0000 		.4byte	.LASF64
 2163 0483 05       		.byte	0x5
 2164 0484 B701     		.2byte	0x1b7
 2165 0486 77000000 		.4byte	0x77
 2166 048a 02       		.byte	0x2
 2167 048b 0D       		.uleb128 0xd
 2168 048c CE000000 		.4byte	.LASF65
 2169 0490 05       		.byte	0x5
 2170 0491 BC01     		.2byte	0x1bc
 2171 0493 77000000 		.4byte	0x77
 2172 0497 04       		.byte	0x4
 2173 0498 0D       		.uleb128 0xd
 2174 0499 3F080000 		.4byte	.LASF66
 2175 049d 05       		.byte	0x5
 2176 049e C201     		.2byte	0x1c2
 2177 04a0 77000000 		.4byte	0x77
 2178 04a4 06       		.byte	0x6
 2179 04a5 0D       		.uleb128 0xd
 2180 04a6 9B000000 		.4byte	.LASF67
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 89


 2181 04aa 05       		.byte	0x5
 2182 04ab C701     		.2byte	0x1c7
 2183 04ad 77000000 		.4byte	0x77
 2184 04b1 08       		.byte	0x8
 2185 04b2 0D       		.uleb128 0xd
 2186 04b3 62050000 		.4byte	.LASF68
 2187 04b7 05       		.byte	0x5
 2188 04b8 CC01     		.2byte	0x1cc
 2189 04ba C1000000 		.4byte	0xc1
 2190 04be 0C       		.byte	0xc
 2191 04bf 0D       		.uleb128 0xd
 2192 04c0 1C080000 		.4byte	.LASF69
 2193 04c4 05       		.byte	0x5
 2194 04c5 D201     		.2byte	0x1d2
 2195 04c7 53050000 		.4byte	0x553
 2196 04cb 10       		.byte	0x10
 2197 04cc 0D       		.uleb128 0xd
 2198 04cd 43090000 		.4byte	.LASF70
 2199 04d1 05       		.byte	0x5
 2200 04d2 D901     		.2byte	0x1d9
 2201 04d4 53050000 		.4byte	0x553
 2202 04d8 14       		.byte	0x14
 2203 04d9 0D       		.uleb128 0xd
 2204 04da A9070000 		.4byte	.LASF71
 2205 04de 05       		.byte	0x5
 2206 04df E901     		.2byte	0x1e9
 2207 04e1 63050000 		.4byte	0x563
 2208 04e5 18       		.byte	0x18
 2209 04e6 0D       		.uleb128 0xd
 2210 04e7 78060000 		.4byte	.LASF72
 2211 04eb 05       		.byte	0x5
 2212 04ec EF01     		.2byte	0x1ef
 2213 04ee 77000000 		.4byte	0x77
 2214 04f2 20       		.byte	0x20
 2215 04f3 0D       		.uleb128 0xd
 2216 04f4 74030000 		.4byte	.LASF73
 2217 04f8 05       		.byte	0x5
 2218 04f9 F401     		.2byte	0x1f4
 2219 04fb 6B000000 		.4byte	0x6b
 2220 04ff 22       		.byte	0x22
 2221 0500 0D       		.uleb128 0xd
 2222 0501 29060000 		.4byte	.LASF74
 2223 0505 05       		.byte	0x5
 2224 0506 F901     		.2byte	0x1f9
 2225 0508 49030000 		.4byte	0x349
 2226 050c 24       		.byte	0x24
 2227 050d 0D       		.uleb128 0xd
 2228 050e 4F020000 		.4byte	.LASF75
 2229 0512 05       		.byte	0x5
 2230 0513 FE01     		.2byte	0x1fe
 2231 0515 5B040000 		.4byte	0x45b
 2232 0519 B4       		.byte	0xb4
 2233 051a 11       		.uleb128 0x11
 2234 051b 63000000 		.4byte	.LASF76
 2235 051f 05       		.byte	0x5
 2236 0520 0302     		.2byte	0x203
 2237 0522 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 90


 2238 0526 0401     		.2byte	0x104
 2239 0528 11       		.uleb128 0x11
 2240 0529 6E020000 		.4byte	.LASF77
 2241 052d 05       		.byte	0x5
 2242 052e 0802     		.2byte	0x208
 2243 0530 6B000000 		.4byte	0x6b
 2244 0534 0501     		.2byte	0x105
 2245 0536 11       		.uleb128 0x11
 2246 0537 54070000 		.4byte	.LASF78
 2247 053b 05       		.byte	0x5
 2248 053c 0D02     		.2byte	0x20d
 2249 053e 77000000 		.4byte	0x77
 2250 0542 0601     		.2byte	0x106
 2251 0544 11       		.uleb128 0x11
 2252 0545 3F060000 		.4byte	.LASF79
 2253 0549 05       		.byte	0x5
 2254 054a 1202     		.2byte	0x212
 2255 054c AD030000 		.4byte	0x3ad
 2256 0550 0801     		.2byte	0x108
 2257 0552 00       		.byte	0
 2258 0553 0B       		.uleb128 0xb
 2259 0554 83000000 		.4byte	0x83
 2260 0558 63050000 		.4byte	0x563
 2261 055c 0C       		.uleb128 0xc
 2262 055d 1A020000 		.4byte	0x21a
 2263 0561 00       		.byte	0
 2264 0562 00       		.byte	0
 2265 0563 0B       		.uleb128 0xb
 2266 0564 6B000000 		.4byte	0x6b
 2267 0568 73050000 		.4byte	0x573
 2268 056c 0C       		.uleb128 0xc
 2269 056d 1A020000 		.4byte	0x21a
 2270 0571 07       		.byte	0x7
 2271 0572 00       		.byte	0
 2272 0573 04       		.uleb128 0x4
 2273 0574 4C050000 		.4byte	.LASF80
 2274 0578 05       		.byte	0x5
 2275 0579 1302     		.2byte	0x213
 2276 057b 67040000 		.4byte	0x467
 2277 057f 0E       		.uleb128 0xe
 2278 0580 1C       		.byte	0x1c
 2279 0581 05       		.byte	0x5
 2280 0582 1902     		.2byte	0x219
 2281 0584 FE050000 		.4byte	0x5fe
 2282 0588 0D       		.uleb128 0xd
 2283 0589 AD060000 		.4byte	.LASF81
 2284 058d 05       		.byte	0x5
 2285 058e 1E02     		.2byte	0x21e
 2286 0590 FE050000 		.4byte	0x5fe
 2287 0594 00       		.byte	0
 2288 0595 0D       		.uleb128 0xd
 2289 0596 A7050000 		.4byte	.LASF82
 2290 059a 05       		.byte	0x5
 2291 059b 2302     		.2byte	0x223
 2292 059d FE050000 		.4byte	0x5fe
 2293 05a1 04       		.byte	0x4
 2294 05a2 0D       		.uleb128 0xd
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 91


 2295 05a3 B3030000 		.4byte	.LASF83
 2296 05a7 05       		.byte	0x5
 2297 05a8 2802     		.2byte	0x228
 2298 05aa FE050000 		.4byte	0x5fe
 2299 05ae 08       		.byte	0x8
 2300 05af 0D       		.uleb128 0xd
 2301 05b0 50080000 		.4byte	.LASF84
 2302 05b4 05       		.byte	0x5
 2303 05b5 2D02     		.2byte	0x22d
 2304 05b7 FE050000 		.4byte	0x5fe
 2305 05bb 0C       		.byte	0xc
 2306 05bc 0D       		.uleb128 0xd
 2307 05bd 4E0A0000 		.4byte	.LASF85
 2308 05c1 05       		.byte	0x5
 2309 05c2 3202     		.2byte	0x232
 2310 05c4 83000000 		.4byte	0x83
 2311 05c8 10       		.byte	0x10
 2312 05c9 0D       		.uleb128 0xd
 2313 05ca 0E070000 		.4byte	.LASF86
 2314 05ce 05       		.byte	0x5
 2315 05cf 3702     		.2byte	0x237
 2316 05d1 83000000 		.4byte	0x83
 2317 05d5 14       		.byte	0x14
 2318 05d6 0D       		.uleb128 0xd
 2319 05d7 2F050000 		.4byte	.LASF87
 2320 05db 05       		.byte	0x5
 2321 05dc 3C02     		.2byte	0x23c
 2322 05de 6B000000 		.4byte	0x6b
 2323 05e2 18       		.byte	0x18
 2324 05e3 0D       		.uleb128 0xd
 2325 05e4 9D090000 		.4byte	.LASF88
 2326 05e8 05       		.byte	0x5
 2327 05e9 4102     		.2byte	0x241
 2328 05eb 6B000000 		.4byte	0x6b
 2329 05ef 19       		.byte	0x19
 2330 05f0 0D       		.uleb128 0xd
 2331 05f1 2F020000 		.4byte	.LASF89
 2332 05f5 05       		.byte	0x5
 2333 05f6 4602     		.2byte	0x246
 2334 05f8 6B000000 		.4byte	0x6b
 2335 05fc 1A       		.byte	0x1a
 2336 05fd 00       		.byte	0
 2337 05fe 12       		.uleb128 0x12
 2338 05ff 04       		.byte	0x4
 2339 0600 B5000000 		.4byte	0xb5
 2340 0604 04       		.uleb128 0x4
 2341 0605 CD0A0000 		.4byte	.LASF90
 2342 0609 05       		.byte	0x5
 2343 060a 4702     		.2byte	0x247
 2344 060c 7F050000 		.4byte	0x57f
 2345 0610 0E       		.uleb128 0xe
 2346 0611 20       		.byte	0x20
 2347 0612 05       		.byte	0x5
 2348 0613 7A02     		.2byte	0x27a
 2349 0615 9C060000 		.4byte	0x69c
 2350 0619 0D       		.uleb128 0xd
 2351 061a 32060000 		.4byte	.LASF91
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 92


 2352 061e 05       		.byte	0x5
 2353 061f 8302     		.2byte	0x283
 2354 0621 9C060000 		.4byte	0x69c
 2355 0625 00       		.byte	0
 2356 0626 0D       		.uleb128 0xd
 2357 0627 420A0000 		.4byte	.LASF92
 2358 062b 05       		.byte	0x5
 2359 062c 8A02     		.2byte	0x28a
 2360 062e A3060000 		.4byte	0x6a3
 2361 0632 04       		.byte	0x4
 2362 0633 0D       		.uleb128 0xd
 2363 0634 70070000 		.4byte	.LASF93
 2364 0638 05       		.byte	0x5
 2365 0639 9002     		.2byte	0x290
 2366 063b A5060000 		.4byte	0x6a5
 2367 063f 08       		.byte	0x8
 2368 0640 0D       		.uleb128 0xd
 2369 0641 C8060000 		.4byte	.LASF94
 2370 0645 05       		.byte	0x5
 2371 0646 9602     		.2byte	0x296
 2372 0648 A3060000 		.4byte	0x6a3
 2373 064c 0C       		.byte	0xc
 2374 064d 0D       		.uleb128 0xd
 2375 064e CB090000 		.4byte	.LASF95
 2376 0652 05       		.byte	0x5
 2377 0653 9D02     		.2byte	0x29d
 2378 0655 AB060000 		.4byte	0x6ab
 2379 0659 10       		.byte	0x10
 2380 065a 0D       		.uleb128 0xd
 2381 065b 030A0000 		.4byte	.LASF96
 2382 065f 05       		.byte	0x5
 2383 0660 A202     		.2byte	0x2a2
 2384 0662 83000000 		.4byte	0x83
 2385 0666 14       		.byte	0x14
 2386 0667 0D       		.uleb128 0xd
 2387 0668 A3040000 		.4byte	.LASF97
 2388 066c 05       		.byte	0x5
 2389 066d A902     		.2byte	0x2a9
 2390 066f 77000000 		.4byte	0x77
 2391 0673 18       		.byte	0x18
 2392 0674 0D       		.uleb128 0xd
 2393 0675 95020000 		.4byte	.LASF98
 2394 0679 05       		.byte	0x5
 2395 067a B002     		.2byte	0x2b0
 2396 067c 6B000000 		.4byte	0x6b
 2397 0680 1A       		.byte	0x1a
 2398 0681 0D       		.uleb128 0xd
 2399 0682 D2080000 		.4byte	.LASF99
 2400 0686 05       		.byte	0x5
 2401 0687 BA02     		.2byte	0x2ba
 2402 0689 6B000000 		.4byte	0x6b
 2403 068d 1B       		.byte	0x1b
 2404 068e 0D       		.uleb128 0xd
 2405 068f 7E020000 		.4byte	.LASF100
 2406 0693 05       		.byte	0x5
 2407 0694 C202     		.2byte	0x2c2
 2408 0696 B1060000 		.4byte	0x6b1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 93


 2409 069a 1C       		.byte	0x1c
 2410 069b 00       		.byte	0
 2411 069c 12       		.uleb128 0x12
 2412 069d 04       		.byte	0x4
 2413 069e A2060000 		.4byte	0x6a2
 2414 06a2 13       		.uleb128 0x13
 2415 06a3 14       		.uleb128 0x14
 2416 06a4 04       		.byte	0x4
 2417 06a5 12       		.uleb128 0x12
 2418 06a6 04       		.byte	0x4
 2419 06a7 CD030000 		.4byte	0x3cd
 2420 06ab 12       		.uleb128 0x12
 2421 06ac 04       		.byte	0x4
 2422 06ad 6B000000 		.4byte	0x6b
 2423 06b1 12       		.uleb128 0x12
 2424 06b2 04       		.byte	0x4
 2425 06b3 3B010000 		.4byte	0x13b
 2426 06b7 04       		.uleb128 0x4
 2427 06b8 30000000 		.4byte	.LASF101
 2428 06bc 05       		.byte	0x5
 2429 06bd C302     		.2byte	0x2c3
 2430 06bf 10060000 		.4byte	0x610
 2431 06c3 10       		.uleb128 0x10
 2432 06c4 0001     		.2byte	0x100
 2433 06c6 05       		.byte	0x5
 2434 06c7 C902     		.2byte	0x2c9
 2435 06c9 DB060000 		.4byte	0x6db
 2436 06cd 0D       		.uleb128 0xd
 2437 06ce 070C0000 		.4byte	.LASF102
 2438 06d2 05       		.byte	0x5
 2439 06d3 CE02     		.2byte	0x2ce
 2440 06d5 DB060000 		.4byte	0x6db
 2441 06d9 00       		.byte	0
 2442 06da 00       		.byte	0
 2443 06db 0B       		.uleb128 0xb
 2444 06dc B7060000 		.4byte	0x6b7
 2445 06e0 EB060000 		.4byte	0x6eb
 2446 06e4 0C       		.uleb128 0xc
 2447 06e5 1A020000 		.4byte	0x21a
 2448 06e9 07       		.byte	0x7
 2449 06ea 00       		.byte	0
 2450 06eb 04       		.uleb128 0x4
 2451 06ec 91070000 		.4byte	.LASF103
 2452 06f0 05       		.byte	0x5
 2453 06f1 CF02     		.2byte	0x2cf
 2454 06f3 C3060000 		.4byte	0x6c3
 2455 06f7 02       		.uleb128 0x2
 2456 06f8 08       		.byte	0x8
 2457 06f9 04       		.byte	0x4
 2458 06fa 83060000 		.4byte	.LASF104
 2459 06fe 15       		.uleb128 0x15
 2460 06ff 0D020000 		.4byte	.LASF127
 2461 0703 01       		.byte	0x1
 2462 0704 070A     		.2byte	0xa07
 2463 0706 03       		.byte	0x3
 2464 0707 16       		.uleb128 0x16
 2465 0708 00000000 		.4byte	.LASF105
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 94


 2466 070c 01       		.byte	0x1
 2467 070d A701     		.2byte	0x1a7
 2468 070f 00000000 		.4byte	.LFB1
 2469 0713 10000000 		.4byte	.LFE1-.LFB1
 2470 0717 01       		.uleb128 0x1
 2471 0718 9C       		.byte	0x9c
 2472 0719 17       		.uleb128 0x17
 2473 071a E50B0000 		.4byte	.LASF115
 2474 071e 01       		.byte	0x1
 2475 071f D806     		.2byte	0x6d8
 2476 0721 00000000 		.4byte	.LFB16
 2477 0725 1C000000 		.4byte	.LFE16-.LFB16
 2478 0729 01       		.uleb128 0x1
 2479 072a 9C       		.byte	0x9c
 2480 072b 3E070000 		.4byte	0x73e
 2481 072f 18       		.uleb128 0x18
 2482 0730 E80A0000 		.4byte	.LASF110
 2483 0734 01       		.byte	0x1
 2484 0735 DA06     		.2byte	0x6da
 2485 0737 83000000 		.4byte	0x83
 2486 073b 01       		.uleb128 0x1
 2487 073c 53       		.byte	0x53
 2488 073d 00       		.byte	0
 2489 073e 16       		.uleb128 0x16
 2490 073f 4F060000 		.4byte	.LASF106
 2491 0743 01       		.byte	0x1
 2492 0744 0307     		.2byte	0x703
 2493 0746 00000000 		.4byte	.LFB17
 2494 074a 10000000 		.4byte	.LFE17-.LFB17
 2495 074e 01       		.uleb128 0x1
 2496 074f 9C       		.byte	0x9c
 2497 0750 19       		.uleb128 0x19
 2498 0751 100A0000 		.4byte	.LASF145
 2499 0755 01       		.byte	0x1
 2500 0756 3107     		.2byte	0x731
 2501 0758 A4000000 		.4byte	0xa4
 2502 075c 00000000 		.4byte	.LFB18
 2503 0760 42000000 		.4byte	.LFE18-.LFB18
 2504 0764 01       		.uleb128 0x1
 2505 0765 9C       		.byte	0x9c
 2506 0766 D9070000 		.4byte	0x7d9
 2507 076a 1A       		.uleb128 0x1a
 2508 076b 05020000 		.4byte	.LASF107
 2509 076f 01       		.byte	0x1
 2510 0770 3107     		.2byte	0x731
 2511 0772 D9070000 		.4byte	0x7d9
 2512 0776 00000000 		.4byte	.LLST0
 2513 077a 1A       		.uleb128 0x1a
 2514 077b 11040000 		.4byte	.LASF108
 2515 077f 01       		.byte	0x1
 2516 0780 3107     		.2byte	0x731
 2517 0782 83000000 		.4byte	0x83
 2518 0786 21000000 		.4byte	.LLST1
 2519 078a 1A       		.uleb128 0x1a
 2520 078b C0070000 		.4byte	.LASF109
 2521 078f 01       		.byte	0x1
 2522 0790 3107     		.2byte	0x731
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 95


 2523 0792 83000000 		.4byte	0x83
 2524 0796 4D000000 		.4byte	.LLST2
 2525 079a 18       		.uleb128 0x18
 2526 079b 19060000 		.4byte	.LASF111
 2527 079f 01       		.byte	0x1
 2528 07a0 3307     		.2byte	0x733
 2529 07a2 A4000000 		.4byte	0xa4
 2530 07a6 01       		.uleb128 0x1
 2531 07a7 50       		.byte	0x50
 2532 07a8 1B       		.uleb128 0x1b
 2533 07a9 640A0000 		.4byte	.LASF112
 2534 07ad 01       		.byte	0x1
 2535 07ae 3407     		.2byte	0x734
 2536 07b0 83000000 		.4byte	0x83
 2537 07b4 79000000 		.4byte	.LLST3
 2538 07b8 1B       		.uleb128 0x1b
 2539 07b9 AF040000 		.4byte	.LASF113
 2540 07bd 01       		.byte	0x1
 2541 07be 3507     		.2byte	0x735
 2542 07c0 83000000 		.4byte	0x83
 2543 07c4 97000000 		.4byte	.LLST4
 2544 07c8 1B       		.uleb128 0x1b
 2545 07c9 13070000 		.4byte	.LASF114
 2546 07cd 01       		.byte	0x1
 2547 07ce 3607     		.2byte	0x736
 2548 07d0 83000000 		.4byte	0x83
 2549 07d4 E3000000 		.4byte	.LLST5
 2550 07d8 00       		.byte	0
 2551 07d9 12       		.uleb128 0x12
 2552 07da 04       		.byte	0x4
 2553 07db DF070000 		.4byte	0x7df
 2554 07df 1C       		.uleb128 0x1c
 2555 07e0 21020000 		.4byte	0x221
 2556 07e4 17       		.uleb128 0x17
 2557 07e5 A7000000 		.4byte	.LASF116
 2558 07e9 01       		.byte	0x1
 2559 07ea 5E01     		.2byte	0x15e
 2560 07ec 00000000 		.4byte	.LFB0
 2561 07f0 1C000000 		.4byte	.LFE0-.LFB0
 2562 07f4 01       		.uleb128 0x1
 2563 07f5 9C       		.byte	0x9c
 2564 07f6 2C080000 		.4byte	0x82c
 2565 07fa 1A       		.uleb128 0x1a
 2566 07fb B3070000 		.4byte	.LASF41
 2567 07ff 01       		.byte	0x1
 2568 0800 5E01     		.2byte	0x15e
 2569 0802 83000000 		.4byte	0x83
 2570 0806 01010000 		.4byte	.LLST6
 2571 080a 1A       		.uleb128 0x1a
 2572 080b 820B0000 		.4byte	.LASF117
 2573 080f 01       		.byte	0x1
 2574 0810 5E01     		.2byte	0x15e
 2575 0812 83000000 		.4byte	0x83
 2576 0816 22010000 		.4byte	.LLST7
 2577 081a 1D       		.uleb128 0x1d
 2578 081b 14000000 		.4byte	.LVL22
 2579 081f C90F0000 		.4byte	0xfc9
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 96


 2580 0823 1E       		.uleb128 0x1e
 2581 0824 01       		.uleb128 0x1
 2582 0825 50       		.byte	0x50
 2583 0826 03       		.uleb128 0x3
 2584 0827 F3       		.byte	0xf3
 2585 0828 01       		.uleb128 0x1
 2586 0829 51       		.byte	0x51
 2587 082a 00       		.byte	0
 2588 082b 00       		.byte	0
 2589 082c 1F       		.uleb128 0x1f
 2590 082d A6010000 		.4byte	.LASF118
 2591 0831 01       		.byte	0x1
 2592 0832 DF01     		.2byte	0x1df
 2593 0834 00000000 		.4byte	.LFB2
 2594 0838 3C000000 		.4byte	.LFE2-.LFB2
 2595 083c 01       		.uleb128 0x1
 2596 083d 9C       		.byte	0x9c
 2597 083e 65080000 		.4byte	0x865
 2598 0842 1B       		.uleb128 0x1b
 2599 0843 E80A0000 		.4byte	.LASF110
 2600 0847 01       		.byte	0x1
 2601 0848 E101     		.2byte	0x1e1
 2602 084a 83000000 		.4byte	0x83
 2603 084e 43010000 		.4byte	.LLST8
 2604 0852 20       		.uleb128 0x20
 2605 0853 06000000 		.4byte	.LVL23
 2606 0857 D40F0000 		.4byte	0xfd4
 2607 085b 20       		.uleb128 0x20
 2608 085c 0A000000 		.4byte	.LVL24
 2609 0860 07070000 		.4byte	0x707
 2610 0864 00       		.byte	0
 2611 0865 1F       		.uleb128 0x1f
 2612 0866 73000000 		.4byte	.LASF119
 2613 086a 01       		.byte	0x1
 2614 086b F302     		.2byte	0x2f3
 2615 086d 00000000 		.4byte	.LFB4
 2616 0871 40000000 		.4byte	.LFE4-.LFB4
 2617 0875 01       		.uleb128 0x1
 2618 0876 9C       		.byte	0x9c
 2619 0877 CE080000 		.4byte	0x8ce
 2620 087b 1A       		.uleb128 0x1a
 2621 087c 05020000 		.4byte	.LASF107
 2622 0880 01       		.byte	0x1
 2623 0881 F302     		.2byte	0x2f3
 2624 0883 D9070000 		.4byte	0x7d9
 2625 0887 7C010000 		.4byte	.LLST9
 2626 088b 1B       		.uleb128 0x1b
 2627 088c ED000000 		.4byte	.LASF120
 2628 0890 01       		.byte	0x1
 2629 0891 F602     		.2byte	0x2f6
 2630 0893 6B000000 		.4byte	0x6b
 2631 0897 B7010000 		.4byte	.LLST10
 2632 089b 1B       		.uleb128 0x1b
 2633 089c E80A0000 		.4byte	.LASF110
 2634 08a0 01       		.byte	0x1
 2635 08a1 2E03     		.2byte	0x32e
 2636 08a3 83000000 		.4byte	0x83
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 97


 2637 08a7 CA010000 		.4byte	.LLST11
 2638 08ab 1B       		.uleb128 0x1b
 2639 08ac 770B0000 		.4byte	.LASF121
 2640 08b0 01       		.byte	0x1
 2641 08b1 2F03     		.2byte	0x32f
 2642 08b3 CE080000 		.4byte	0x8ce
 2643 08b7 E8010000 		.4byte	.LLST12
 2644 08bb 20       		.uleb128 0x20
 2645 08bc 0A000000 		.4byte	.LVL34
 2646 08c0 DF0F0000 		.4byte	0xfdf
 2647 08c4 20       		.uleb128 0x20
 2648 08c5 2C000000 		.4byte	.LVL39
 2649 08c9 EA0F0000 		.4byte	0xfea
 2650 08cd 00       		.byte	0
 2651 08ce 12       		.uleb128 0x12
 2652 08cf 04       		.byte	0x4
 2653 08d0 D4080000 		.4byte	0x8d4
 2654 08d4 1C       		.uleb128 0x1c
 2655 08d5 6B000000 		.4byte	0x6b
 2656 08d9 1F       		.uleb128 0x1f
 2657 08da FD050000 		.4byte	.LASF122
 2658 08de 01       		.byte	0x1
 2659 08df B403     		.2byte	0x3b4
 2660 08e1 00000000 		.4byte	.LFB5
 2661 08e5 30000000 		.4byte	.LFE5-.LFB5
 2662 08e9 01       		.uleb128 0x1
 2663 08ea 9C       		.byte	0x9c
 2664 08eb 39090000 		.4byte	0x939
 2665 08ef 1B       		.uleb128 0x1b
 2666 08f0 820B0000 		.4byte	.LASF117
 2667 08f4 01       		.byte	0x1
 2668 08f5 B603     		.2byte	0x3b6
 2669 08f7 83000000 		.4byte	0x83
 2670 08fb 16020000 		.4byte	.LLST13
 2671 08ff 1B       		.uleb128 0x1b
 2672 0900 35020000 		.4byte	.LASF123
 2673 0904 01       		.byte	0x1
 2674 0905 B703     		.2byte	0x3b7
 2675 0907 83000000 		.4byte	0x83
 2676 090b 29020000 		.4byte	.LLST14
 2677 090f 1B       		.uleb128 0x1b
 2678 0910 E80A0000 		.4byte	.LASF110
 2679 0914 01       		.byte	0x1
 2680 0915 B803     		.2byte	0x3b8
 2681 0917 83000000 		.4byte	0x83
 2682 091b 29020000 		.4byte	.LLST14
 2683 091f 1B       		.uleb128 0x1b
 2684 0920 05020000 		.4byte	.LASF107
 2685 0924 01       		.byte	0x1
 2686 0925 BA03     		.2byte	0x3ba
 2687 0927 D9070000 		.4byte	0x7d9
 2688 092b 3C020000 		.4byte	.LLST16
 2689 092f 20       		.uleb128 0x20
 2690 0930 24000000 		.4byte	.LVL46
 2691 0934 E4070000 		.4byte	0x7e4
 2692 0938 00       		.byte	0
 2693 0939 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 98


 2694 093a 7A0A0000 		.4byte	.LASF124
 2695 093e 01       		.byte	0x1
 2696 093f 1904     		.2byte	0x419
 2697 0941 00000000 		.4byte	.LFB6
 2698 0945 14000000 		.4byte	.LFE6-.LFB6
 2699 0949 01       		.uleb128 0x1
 2700 094a 9C       		.byte	0x9c
 2701 094b 5E090000 		.4byte	0x95e
 2702 094f 21       		.uleb128 0x21
 2703 0950 05020000 		.4byte	.LASF107
 2704 0954 01       		.byte	0x1
 2705 0955 1904     		.2byte	0x419
 2706 0957 D9070000 		.4byte	0x7d9
 2707 095b 01       		.uleb128 0x1
 2708 095c 50       		.byte	0x50
 2709 095d 00       		.byte	0
 2710 095e 22       		.uleb128 0x22
 2711 095f E0040000 		.4byte	.LASF176
 2712 0963 01       		.byte	0x1
 2713 0964 8709     		.2byte	0x987
 2714 0966 03       		.byte	0x3
 2715 0967 90090000 		.4byte	0x990
 2716 096b 23       		.uleb128 0x23
 2717 096c B7090000 		.4byte	.LASF125
 2718 0970 01       		.byte	0x1
 2719 0971 C609     		.2byte	0x9c6
 2720 0973 83000000 		.4byte	0x83
 2721 0977 23       		.uleb128 0x23
 2722 0978 E80A0000 		.4byte	.LASF110
 2723 097c 01       		.byte	0x1
 2724 097d C709     		.2byte	0x9c7
 2725 097f 83000000 		.4byte	0x83
 2726 0983 23       		.uleb128 0x23
 2727 0984 3F020000 		.4byte	.LASF126
 2728 0988 01       		.byte	0x1
 2729 0989 C809     		.2byte	0x9c8
 2730 098b 83000000 		.4byte	0x83
 2731 098f 00       		.byte	0
 2732 0990 15       		.uleb128 0x15
 2733 0991 D5050000 		.4byte	.LASF128
 2734 0995 01       		.byte	0x1
 2735 0996 3E09     		.2byte	0x93e
 2736 0998 03       		.byte	0x3
 2737 0999 1F       		.uleb128 0x1f
 2738 099a 00080000 		.4byte	.LASF129
 2739 099e 01       		.byte	0x1
 2740 099f EF04     		.2byte	0x4ef
 2741 09a1 00000000 		.4byte	.LFB9
 2742 09a5 B0000000 		.4byte	.LFE9-.LFB9
 2743 09a9 01       		.uleb128 0x1
 2744 09aa 9C       		.byte	0x9c
 2745 09ab 780A0000 		.4byte	0xa78
 2746 09af 1B       		.uleb128 0x1b
 2747 09b0 ED000000 		.4byte	.LASF120
 2748 09b4 01       		.byte	0x1
 2749 09b5 F204     		.2byte	0x4f2
 2750 09b7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 99


 2751 09bb 4F020000 		.4byte	.LLST17
 2752 09bf 24       		.uleb128 0x24
 2753 09c0 90090000 		.4byte	0x990
 2754 09c4 14000000 		.4byte	.LBB10
 2755 09c8 1E000000 		.4byte	.LBE10-.LBB10
 2756 09cc 01       		.byte	0x1
 2757 09cd 1F05     		.2byte	0x51f
 2758 09cf DD090000 		.4byte	0x9dd
 2759 09d3 20       		.uleb128 0x20
 2760 09d4 1E000000 		.4byte	.LVL50
 2761 09d8 F50F0000 		.4byte	0xff5
 2762 09dc 00       		.byte	0
 2763 09dd 24       		.uleb128 0x24
 2764 09de 5E090000 		.4byte	0x95e
 2765 09e2 32000000 		.4byte	.LBB12
 2766 09e6 3E000000 		.4byte	.LBE12-.LBB12
 2767 09ea 01       		.byte	0x1
 2768 09eb 2205     		.2byte	0x522
 2769 09ed 3A0A0000 		.4byte	0xa3a
 2770 09f1 25       		.uleb128 0x25
 2771 09f2 32000000 		.4byte	.LBB13
 2772 09f6 3E000000 		.4byte	.LBE13-.LBB13
 2773 09fa 26       		.uleb128 0x26
 2774 09fb 6B090000 		.4byte	0x96b
 2775 09ff 62020000 		.4byte	.LLST18
 2776 0a03 26       		.uleb128 0x26
 2777 0a04 77090000 		.4byte	0x977
 2778 0a08 81020000 		.4byte	.LLST19
 2779 0a0c 26       		.uleb128 0x26
 2780 0a0d 83090000 		.4byte	0x983
 2781 0a11 D5020000 		.4byte	.LLST20
 2782 0a15 27       		.uleb128 0x27
 2783 0a16 3C000000 		.4byte	.LVL52
 2784 0a1a 00100000 		.4byte	0x1000
 2785 0a1e 290A0000 		.4byte	0xa29
 2786 0a22 1E       		.uleb128 0x1e
 2787 0a23 01       		.uleb128 0x1
 2788 0a24 50       		.byte	0x50
 2789 0a25 02       		.uleb128 0x2
 2790 0a26 08       		.byte	0x8
 2791 0a27 27       		.byte	0x27
 2792 0a28 00       		.byte	0
 2793 0a29 1D       		.uleb128 0x1d
 2794 0a2a 70000000 		.4byte	.LVL62
 2795 0a2e 0B100000 		.4byte	0x100b
 2796 0a32 1E       		.uleb128 0x1e
 2797 0a33 01       		.uleb128 0x1
 2798 0a34 50       		.byte	0x50
 2799 0a35 01       		.uleb128 0x1
 2800 0a36 3F       		.byte	0x3f
 2801 0a37 00       		.byte	0
 2802 0a38 00       		.byte	0
 2803 0a39 00       		.byte	0
 2804 0a3a 28       		.uleb128 0x28
 2805 0a3b FE060000 		.4byte	0x6fe
 2806 0a3f 76000000 		.4byte	.LBB14
 2807 0a43 06000000 		.4byte	.LBE14-.LBB14
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 100


 2808 0a47 01       		.byte	0x1
 2809 0a48 2A05     		.2byte	0x52a
 2810 0a4a 20       		.uleb128 0x20
 2811 0a4b 06000000 		.4byte	.LVL48
 2812 0a4f DF0F0000 		.4byte	0xfdf
 2813 0a53 27       		.uleb128 0x27
 2814 0a54 76000000 		.4byte	.LVL63
 2815 0a58 00100000 		.4byte	0x1000
 2816 0a5c 670A0000 		.4byte	0xa67
 2817 0a60 1E       		.uleb128 0x1e
 2818 0a61 01       		.uleb128 0x1
 2819 0a62 50       		.byte	0x50
 2820 0a63 02       		.uleb128 0x2
 2821 0a64 08       		.byte	0x8
 2822 0a65 6F       		.byte	0x6f
 2823 0a66 00       		.byte	0
 2824 0a67 1D       		.uleb128 0x1d
 2825 0a68 82000000 		.4byte	.LVL64
 2826 0a6c EA0F0000 		.4byte	0xfea
 2827 0a70 1E       		.uleb128 0x1e
 2828 0a71 01       		.uleb128 0x1
 2829 0a72 50       		.byte	0x50
 2830 0a73 02       		.uleb128 0x2
 2831 0a74 74       		.byte	0x74
 2832 0a75 00       		.sleb128 0
 2833 0a76 00       		.byte	0
 2834 0a77 00       		.byte	0
 2835 0a78 1F       		.uleb128 0x1f
 2836 0a79 7B070000 		.4byte	.LASF130
 2837 0a7d 01       		.byte	0x1
 2838 0a7e 5A05     		.2byte	0x55a
 2839 0a80 00000000 		.4byte	.LFB10
 2840 0a84 1C000000 		.4byte	.LFE10-.LFB10
 2841 0a88 01       		.uleb128 0x1
 2842 0a89 9C       		.byte	0x9c
 2843 0a8a 980A0000 		.4byte	0xa98
 2844 0a8e 20       		.uleb128 0x20
 2845 0a8f 10000000 		.4byte	.LVL66
 2846 0a93 99090000 		.4byte	0x999
 2847 0a97 00       		.byte	0
 2848 0a98 1F       		.uleb128 0x1f
 2849 0a99 19010000 		.4byte	.LASF131
 2850 0a9d 01       		.byte	0x1
 2851 0a9e 6906     		.2byte	0x669
 2852 0aa0 00000000 		.4byte	.LFB14
 2853 0aa4 34000000 		.4byte	.LFE14-.LFB14
 2854 0aa8 01       		.uleb128 0x1
 2855 0aa9 9C       		.byte	0x9c
 2856 0aaa 110B0000 		.4byte	0xb11
 2857 0aae 1A       		.uleb128 0x1a
 2858 0aaf 25000000 		.4byte	.LASF132
 2859 0ab3 01       		.byte	0x1
 2860 0ab4 6906     		.2byte	0x669
 2861 0ab6 110B0000 		.4byte	0xb11
 2862 0aba F6020000 		.4byte	.LLST21
 2863 0abe 1B       		.uleb128 0x1b
 2864 0abf 63030000 		.4byte	.LASF133
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 101


 2865 0ac3 01       		.byte	0x1
 2866 0ac4 6B06     		.2byte	0x66b
 2867 0ac6 83000000 		.4byte	0x83
 2868 0aca 22030000 		.4byte	.LLST22
 2869 0ace 1B       		.uleb128 0x1b
 2870 0acf ED000000 		.4byte	.LASF120
 2871 0ad3 01       		.byte	0x1
 2872 0ad4 6C06     		.2byte	0x66c
 2873 0ad6 6B000000 		.4byte	0x6b
 2874 0ada 4B030000 		.4byte	.LLST23
 2875 0ade 1B       		.uleb128 0x1b
 2876 0adf 99010000 		.4byte	.LASF134
 2877 0ae3 01       		.byte	0x1
 2878 0ae4 6D06     		.2byte	0x66d
 2879 0ae6 83000000 		.4byte	0x83
 2880 0aea 5E030000 		.4byte	.LLST24
 2881 0aee 1B       		.uleb128 0x1b
 2882 0aef 32010000 		.4byte	.LASF135
 2883 0af3 01       		.byte	0x1
 2884 0af4 6E06     		.2byte	0x66e
 2885 0af6 83000000 		.4byte	0x83
 2886 0afa 71030000 		.4byte	.LLST25
 2887 0afe 20       		.uleb128 0x20
 2888 0aff 0C000000 		.4byte	.LVL70
 2889 0b03 DF0F0000 		.4byte	0xfdf
 2890 0b07 20       		.uleb128 0x20
 2891 0b08 32000000 		.4byte	.LVL76
 2892 0b0c EA0F0000 		.4byte	0xfea
 2893 0b10 00       		.byte	0
 2894 0b11 12       		.uleb128 0x12
 2895 0b12 04       		.byte	0x4
 2896 0b13 170B0000 		.4byte	0xb17
 2897 0b17 1C       		.uleb128 0x1c
 2898 0b18 04060000 		.4byte	0x604
 2899 0b1c 1F       		.uleb128 0x1f
 2900 0b1d 2F0A0000 		.4byte	.LASF136
 2901 0b21 01       		.byte	0x1
 2902 0b22 8E05     		.2byte	0x58e
 2903 0b24 00000000 		.4byte	.LFB11
 2904 0b28 70000000 		.4byte	.LFE11-.LFB11
 2905 0b2c 01       		.uleb128 0x1
 2906 0b2d 9C       		.byte	0x9c
 2907 0b2e 670B0000 		.4byte	0xb67
 2908 0b32 1B       		.uleb128 0x1b
 2909 0b33 05020000 		.4byte	.LASF107
 2910 0b37 01       		.byte	0x1
 2911 0b38 9005     		.2byte	0x590
 2912 0b3a D9070000 		.4byte	0x7d9
 2913 0b3e 84030000 		.4byte	.LLST26
 2914 0b42 20       		.uleb128 0x20
 2915 0b43 30000000 		.4byte	.LVL80
 2916 0b47 65080000 		.4byte	0x865
 2917 0b4b 20       		.uleb128 0x20
 2918 0b4c 4A000000 		.4byte	.LVL81
 2919 0b50 980A0000 		.4byte	0xa98
 2920 0b54 20       		.uleb128 0x20
 2921 0b55 50000000 		.4byte	.LVL82
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 102


 2922 0b59 16100000 		.4byte	0x1016
 2923 0b5d 20       		.uleb128 0x20
 2924 0b5e 54000000 		.4byte	.LVL83
 2925 0b62 780A0000 		.4byte	0xa78
 2926 0b66 00       		.byte	0
 2927 0b67 1F       		.uleb128 0x1f
 2928 0b68 5F010000 		.4byte	.LASF137
 2929 0b6c 01       		.byte	0x1
 2930 0b6d DA05     		.2byte	0x5da
 2931 0b6f 00000000 		.4byte	.LFB12
 2932 0b73 24000000 		.4byte	.LFE12-.LFB12
 2933 0b77 01       		.uleb128 0x1
 2934 0b78 9C       		.byte	0x9c
 2935 0b79 A70B0000 		.4byte	0xba7
 2936 0b7d 1A       		.uleb128 0x1a
 2937 0b7e B90B0000 		.4byte	.LASF138
 2938 0b82 01       		.byte	0x1
 2939 0b83 DA05     		.2byte	0x5da
 2940 0b85 83000000 		.4byte	0x83
 2941 0b89 97030000 		.4byte	.LLST27
 2942 0b8d 1A       		.uleb128 0x1a
 2943 0b8e FC010000 		.4byte	.LASF139
 2944 0b92 01       		.byte	0x1
 2945 0b93 DA05     		.2byte	0x5da
 2946 0b95 83000000 		.4byte	0x83
 2947 0b99 B8030000 		.4byte	.LLST28
 2948 0b9d 20       		.uleb128 0x20
 2949 0b9e 18000000 		.4byte	.LVL87
 2950 0ba2 980A0000 		.4byte	0xa98
 2951 0ba6 00       		.byte	0
 2952 0ba7 1F       		.uleb128 0x1f
 2953 0ba8 D1070000 		.4byte	.LASF140
 2954 0bac 01       		.byte	0x1
 2955 0bad 9D06     		.2byte	0x69d
 2956 0baf 00000000 		.4byte	.LFB15
 2957 0bb3 40000000 		.4byte	.LFE15-.LFB15
 2958 0bb7 01       		.uleb128 0x1
 2959 0bb8 9C       		.byte	0x9c
 2960 0bb9 200C0000 		.4byte	0xc20
 2961 0bbd 1A       		.uleb128 0x1a
 2962 0bbe 25000000 		.4byte	.LASF132
 2963 0bc2 01       		.byte	0x1
 2964 0bc3 9D06     		.2byte	0x69d
 2965 0bc5 110B0000 		.4byte	0xb11
 2966 0bc9 D9030000 		.4byte	.LLST29
 2967 0bcd 1B       		.uleb128 0x1b
 2968 0bce 32010000 		.4byte	.LASF135
 2969 0bd2 01       		.byte	0x1
 2970 0bd3 9F06     		.2byte	0x69f
 2971 0bd5 83000000 		.4byte	0x83
 2972 0bd9 05040000 		.4byte	.LLST30
 2973 0bdd 1B       		.uleb128 0x1b
 2974 0bde 63030000 		.4byte	.LASF133
 2975 0be2 01       		.byte	0x1
 2976 0be3 A006     		.2byte	0x6a0
 2977 0be5 83000000 		.4byte	0x83
 2978 0be9 18040000 		.4byte	.LLST31
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 103


 2979 0bed 1B       		.uleb128 0x1b
 2980 0bee 99010000 		.4byte	.LASF134
 2981 0bf2 01       		.byte	0x1
 2982 0bf3 A106     		.2byte	0x6a1
 2983 0bf5 83000000 		.4byte	0x83
 2984 0bf9 41040000 		.4byte	.LLST32
 2985 0bfd 1B       		.uleb128 0x1b
 2986 0bfe ED000000 		.4byte	.LASF120
 2987 0c02 01       		.byte	0x1
 2988 0c03 A506     		.2byte	0x6a5
 2989 0c05 6B000000 		.4byte	0x6b
 2990 0c09 54040000 		.4byte	.LLST33
 2991 0c0d 20       		.uleb128 0x20
 2992 0c0e 18000000 		.4byte	.LVL91
 2993 0c12 DF0F0000 		.4byte	0xfdf
 2994 0c16 20       		.uleb128 0x20
 2995 0c17 30000000 		.4byte	.LVL96
 2996 0c1b EA0F0000 		.4byte	0xfea
 2997 0c1f 00       		.byte	0
 2998 0c20 1F       		.uleb128 0x1f
 2999 0c21 40010000 		.4byte	.LASF141
 3000 0c25 01       		.byte	0x1
 3001 0c26 B602     		.2byte	0x2b6
 3002 0c28 00000000 		.4byte	.LFB3
 3003 0c2c 24000000 		.4byte	.LFE3-.LFB3
 3004 0c30 01       		.uleb128 0x1
 3005 0c31 9C       		.byte	0x9c
 3006 0c32 400C0000 		.4byte	0xc40
 3007 0c36 20       		.uleb128 0x20
 3008 0c37 12000000 		.4byte	.LVL99
 3009 0c3b A70B0000 		.4byte	0xba7
 3010 0c3f 00       		.byte	0
 3011 0c40 1F       		.uleb128 0x1f
 3012 0c41 4E090000 		.4byte	.LASF142
 3013 0c45 01       		.byte	0x1
 3014 0c46 6004     		.2byte	0x460
 3015 0c48 00000000 		.4byte	.LFB7
 3016 0c4c 54000000 		.4byte	.LFE7-.LFB7
 3017 0c50 01       		.uleb128 0x1
 3018 0c51 9C       		.byte	0x9c
 3019 0c52 B00C0000 		.4byte	0xcb0
 3020 0c56 1A       		.uleb128 0x1a
 3021 0c57 B90B0000 		.4byte	.LASF138
 3022 0c5b 01       		.byte	0x1
 3023 0c5c 6004     		.2byte	0x460
 3024 0c5e 83000000 		.4byte	0x83
 3025 0c62 67040000 		.4byte	.LLST34
 3026 0c66 1B       		.uleb128 0x1b
 3027 0c67 05020000 		.4byte	.LASF107
 3028 0c6b 01       		.byte	0x1
 3029 0c6c 6304     		.2byte	0x463
 3030 0c6e D9070000 		.4byte	0x7d9
 3031 0c72 88040000 		.4byte	.LLST35
 3032 0c76 27       		.uleb128 0x27
 3033 0c77 16000000 		.4byte	.LVL103
 3034 0c7b 21100000 		.4byte	0x1021
 3035 0c7f 890C0000 		.4byte	0xc89
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 104


 3036 0c83 1E       		.uleb128 0x1e
 3037 0c84 01       		.uleb128 0x1
 3038 0c85 50       		.byte	0x50
 3039 0c86 01       		.uleb128 0x1
 3040 0c87 31       		.byte	0x31
 3041 0c88 00       		.byte	0
 3042 0c89 20       		.uleb128 0x20
 3043 0c8a 1A000000 		.4byte	.LVL104
 3044 0c8e 200C0000 		.4byte	0xc20
 3045 0c92 27       		.uleb128 0x27
 3046 0c93 3C000000 		.4byte	.LVL105
 3047 0c97 39090000 		.4byte	0x939
 3048 0c9b A60C0000 		.4byte	0xca6
 3049 0c9f 1E       		.uleb128 0x1e
 3050 0ca0 01       		.uleb128 0x1
 3051 0ca1 50       		.byte	0x50
 3052 0ca2 02       		.uleb128 0x2
 3053 0ca3 75       		.byte	0x75
 3054 0ca4 00       		.sleb128 0
 3055 0ca5 00       		.byte	0
 3056 0ca6 20       		.uleb128 0x20
 3057 0ca7 40000000 		.4byte	.LVL106
 3058 0cab D9080000 		.4byte	0x8d9
 3059 0caf 00       		.byte	0
 3060 0cb0 1F       		.uleb128 0x1f
 3061 0cb1 FC000000 		.4byte	.LASF143
 3062 0cb5 01       		.byte	0x1
 3063 0cb6 B104     		.2byte	0x4b1
 3064 0cb8 00000000 		.4byte	.LFB8
 3065 0cbc 6C000000 		.4byte	.LFE8-.LFB8
 3066 0cc0 01       		.uleb128 0x1
 3067 0cc1 9C       		.byte	0x9c
 3068 0cc2 320D0000 		.4byte	0xd32
 3069 0cc6 1A       		.uleb128 0x1a
 3070 0cc7 B90B0000 		.4byte	.LASF138
 3071 0ccb 01       		.byte	0x1
 3072 0ccc B104     		.2byte	0x4b1
 3073 0cce 83000000 		.4byte	0x83
 3074 0cd2 AF040000 		.4byte	.LLST36
 3075 0cd6 1A       		.uleb128 0x1a
 3076 0cd7 FC010000 		.4byte	.LASF139
 3077 0cdb 01       		.byte	0x1
 3078 0cdc B104     		.2byte	0x4b1
 3079 0cde 83000000 		.4byte	0x83
 3080 0ce2 D0040000 		.4byte	.LLST37
 3081 0ce6 1B       		.uleb128 0x1b
 3082 0ce7 05020000 		.4byte	.LASF107
 3083 0ceb 01       		.byte	0x1
 3084 0cec B304     		.2byte	0x4b3
 3085 0cee D9070000 		.4byte	0x7d9
 3086 0cf2 F1040000 		.4byte	.LLST38
 3087 0cf6 27       		.uleb128 0x27
 3088 0cf7 26000000 		.4byte	.LVL112
 3089 0cfb 400C0000 		.4byte	0xc40
 3090 0cff 0B0D0000 		.4byte	0xd0b
 3091 0d03 1E       		.uleb128 0x1e
 3092 0d04 01       		.uleb128 0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 105


 3093 0d05 50       		.byte	0x50
 3094 0d06 03       		.uleb128 0x3
 3095 0d07 F3       		.byte	0xf3
 3096 0d08 01       		.uleb128 0x1
 3097 0d09 50       		.byte	0x50
 3098 0d0a 00       		.byte	0
 3099 0d0b 27       		.uleb128 0x27
 3100 0d0c 2C000000 		.4byte	.LVL113
 3101 0d10 65080000 		.4byte	0x865
 3102 0d14 1F0D0000 		.4byte	0xd1f
 3103 0d18 1E       		.uleb128 0x1e
 3104 0d19 01       		.uleb128 0x1
 3105 0d1a 50       		.byte	0x50
 3106 0d1b 02       		.uleb128 0x2
 3107 0d1c 75       		.byte	0x75
 3108 0d1d 00       		.sleb128 0
 3109 0d1e 00       		.byte	0
 3110 0d1f 20       		.uleb128 0x20
 3111 0d20 44000000 		.4byte	.LVL114
 3112 0d24 980A0000 		.4byte	0xa98
 3113 0d28 20       		.uleb128 0x20
 3114 0d29 50000000 		.4byte	.LVL115
 3115 0d2d 16100000 		.4byte	0x1016
 3116 0d31 00       		.byte	0
 3117 0d32 1F       		.uleb128 0x1f
 3118 0d33 18090000 		.4byte	.LASF144
 3119 0d37 01       		.byte	0x1
 3120 0d38 2006     		.2byte	0x620
 3121 0d3a 00000000 		.4byte	.LFB13
 3122 0d3e 24000000 		.4byte	.LFE13-.LFB13
 3123 0d42 01       		.uleb128 0x1
 3124 0d43 9C       		.byte	0x9c
 3125 0d44 720D0000 		.4byte	0xd72
 3126 0d48 1A       		.uleb128 0x1a
 3127 0d49 B90B0000 		.4byte	.LASF138
 3128 0d4d 01       		.byte	0x1
 3129 0d4e 2006     		.2byte	0x620
 3130 0d50 83000000 		.4byte	0x83
 3131 0d54 04050000 		.4byte	.LLST39
 3132 0d58 1A       		.uleb128 0x1a
 3133 0d59 FC010000 		.4byte	.LASF139
 3134 0d5d 01       		.byte	0x1
 3135 0d5e 2006     		.2byte	0x620
 3136 0d60 83000000 		.4byte	0x83
 3137 0d64 25050000 		.4byte	.LLST40
 3138 0d68 20       		.uleb128 0x20
 3139 0d69 18000000 		.4byte	.LVL120
 3140 0d6d A70B0000 		.4byte	0xba7
 3141 0d71 00       		.byte	0
 3142 0d72 29       		.uleb128 0x29
 3143 0d73 C20B0000 		.4byte	.LASF146
 3144 0d77 01       		.byte	0x1
 3145 0d78 7407     		.2byte	0x774
 3146 0d7a A4000000 		.4byte	0xa4
 3147 0d7e 00000000 		.4byte	.LFB19
 3148 0d82 EC000000 		.4byte	.LFE19-.LFB19
 3149 0d86 01       		.uleb128 0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 106


 3150 0d87 9C       		.byte	0x9c
 3151 0d88 6A0E0000 		.4byte	0xe6a
 3152 0d8c 1A       		.uleb128 0x1a
 3153 0d8d 11040000 		.4byte	.LASF108
 3154 0d91 01       		.byte	0x1
 3155 0d92 7407     		.2byte	0x774
 3156 0d94 83000000 		.4byte	0x83
 3157 0d98 46050000 		.4byte	.LLST41
 3158 0d9c 1A       		.uleb128 0x1a
 3159 0d9d 48080000 		.4byte	.LASF147
 3160 0da1 01       		.byte	0x1
 3161 0da2 7507     		.2byte	0x775
 3162 0da4 AB060000 		.4byte	0x6ab
 3163 0da8 72050000 		.4byte	.LLST42
 3164 0dac 1A       		.uleb128 0x1a
 3165 0dad A00A0000 		.4byte	.LASF148
 3166 0db1 01       		.byte	0x1
 3167 0db2 7607     		.2byte	0x776
 3168 0db4 AB060000 		.4byte	0x6ab
 3169 0db8 9E050000 		.4byte	.LLST43
 3170 0dbc 18       		.uleb128 0x18
 3171 0dbd 19060000 		.4byte	.LASF111
 3172 0dc1 01       		.byte	0x1
 3173 0dc2 7807     		.2byte	0x778
 3174 0dc4 A4000000 		.4byte	0xa4
 3175 0dc8 01       		.uleb128 0x1
 3176 0dc9 50       		.byte	0x50
 3177 0dca 1B       		.uleb128 0x1b
 3178 0dcb 8D020000 		.4byte	.LASF149
 3179 0dcf 01       		.byte	0x1
 3180 0dd0 7907     		.2byte	0x779
 3181 0dd2 83000000 		.4byte	0x83
 3182 0dd6 CA050000 		.4byte	.LLST44
 3183 0dda 1B       		.uleb128 0x1b
 3184 0ddb 3F020000 		.4byte	.LASF126
 3185 0ddf 01       		.byte	0x1
 3186 0de0 7A07     		.2byte	0x77a
 3187 0de2 83000000 		.4byte	0x83
 3188 0de6 EB050000 		.4byte	.LLST45
 3189 0dea 1B       		.uleb128 0x1b
 3190 0deb 1C000000 		.4byte	.LASF150
 3191 0def 01       		.byte	0x1
 3192 0df0 7C07     		.2byte	0x77c
 3193 0df2 77000000 		.4byte	0x77
 3194 0df6 0C060000 		.4byte	.LLST46
 3195 0dfa 1B       		.uleb128 0x1b
 3196 0dfb 05020000 		.4byte	.LASF107
 3197 0dff 01       		.byte	0x1
 3198 0e00 8307     		.2byte	0x783
 3199 0e02 6A0E0000 		.4byte	0xe6a
 3200 0e06 2B060000 		.4byte	.LLST47
 3201 0e0a 20       		.uleb128 0x20
 3202 0e0b 2E000000 		.4byte	.LVL128
 3203 0e0f B00C0000 		.4byte	0xcb0
 3204 0e13 20       		.uleb128 0x20
 3205 0e14 32000000 		.4byte	.LVL129
 3206 0e18 19070000 		.4byte	0x719
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 107


 3207 0e1c 27       		.uleb128 0x27
 3208 0e1d 50000000 		.4byte	.LVL132
 3209 0e21 65080000 		.4byte	0x865
 3210 0e25 310E0000 		.4byte	0xe31
 3211 0e29 1E       		.uleb128 0x1e
 3212 0e2a 01       		.uleb128 0x1
 3213 0e2b 50       		.byte	0x50
 3214 0e2c 03       		.uleb128 0x3
 3215 0e2d 91       		.byte	0x91
 3216 0e2e 64       		.sleb128 -28
 3217 0e2f 06       		.byte	0x6
 3218 0e30 00       		.byte	0
 3219 0e31 20       		.uleb128 0x20
 3220 0e32 54000000 		.4byte	.LVL133
 3221 0e36 780A0000 		.4byte	0xa78
 3222 0e3a 20       		.uleb128 0x20
 3223 0e3b 92000000 		.4byte	.LVL138
 3224 0e3f A70B0000 		.4byte	0xba7
 3225 0e43 20       		.uleb128 0x20
 3226 0e44 9C000000 		.4byte	.LVL139
 3227 0e48 3E070000 		.4byte	0x73e
 3228 0e4c 1D       		.uleb128 0x1d
 3229 0e4d A6000000 		.4byte	.LVL140
 3230 0e51 50070000 		.4byte	0x750
 3231 0e55 1E       		.uleb128 0x1e
 3232 0e56 01       		.uleb128 0x1
 3233 0e57 50       		.byte	0x50
 3234 0e58 03       		.uleb128 0x3
 3235 0e59 91       		.byte	0x91
 3236 0e5a 64       		.sleb128 -28
 3237 0e5b 06       		.byte	0x6
 3238 0e5c 1E       		.uleb128 0x1e
 3239 0e5d 01       		.uleb128 0x1
 3240 0e5e 51       		.byte	0x51
 3241 0e5f 02       		.uleb128 0x2
 3242 0e60 77       		.byte	0x77
 3243 0e61 00       		.sleb128 0
 3244 0e62 1E       		.uleb128 0x1e
 3245 0e63 01       		.uleb128 0x1
 3246 0e64 52       		.byte	0x52
 3247 0e65 02       		.uleb128 0x2
 3248 0e66 74       		.byte	0x74
 3249 0e67 00       		.sleb128 0
 3250 0e68 00       		.byte	0
 3251 0e69 00       		.byte	0
 3252 0e6a 12       		.uleb128 0x12
 3253 0e6b 04       		.byte	0x4
 3254 0e6c 21020000 		.4byte	0x221
 3255 0e70 2A       		.uleb128 0x2a
 3256 0e71 B4080000 		.4byte	.LASF177
 3257 0e75 01       		.byte	0x1
 3258 0e76 3E08     		.2byte	0x83e
 3259 0e78 A4000000 		.4byte	0xa4
 3260 0e7c 00000000 		.4byte	.LFB20
 3261 0e80 08010000 		.4byte	.LFE20-.LFB20
 3262 0e84 01       		.uleb128 0x1
 3263 0e85 9C       		.byte	0x9c
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 108


 3264 0e86 200F0000 		.4byte	0xf20
 3265 0e8a 1A       		.uleb128 0x1a
 3266 0e8b B90B0000 		.4byte	.LASF138
 3267 0e8f 01       		.byte	0x1
 3268 0e90 3E08     		.2byte	0x83e
 3269 0e92 83000000 		.4byte	0x83
 3270 0e96 4A060000 		.4byte	.LLST48
 3271 0e9a 1A       		.uleb128 0x1a
 3272 0e9b AC030000 		.4byte	.LASF151
 3273 0e9f 01       		.byte	0x1
 3274 0ea0 3E08     		.2byte	0x83e
 3275 0ea2 83000000 		.4byte	0x83
 3276 0ea6 76060000 		.4byte	.LLST49
 3277 0eaa 1B       		.uleb128 0x1b
 3278 0eab 11040000 		.4byte	.LASF108
 3279 0eaf 01       		.byte	0x1
 3280 0eb0 4008     		.2byte	0x840
 3281 0eb2 83000000 		.4byte	0x83
 3282 0eb6 A2060000 		.4byte	.LLST50
 3283 0eba 1B       		.uleb128 0x1b
 3284 0ebb 19060000 		.4byte	.LASF111
 3285 0ebf 01       		.byte	0x1
 3286 0ec0 4108     		.2byte	0x841
 3287 0ec2 A4000000 		.4byte	0xa4
 3288 0ec6 DE060000 		.4byte	.LLST51
 3289 0eca 1B       		.uleb128 0x1b
 3290 0ecb 05020000 		.4byte	.LASF107
 3291 0ecf 01       		.byte	0x1
 3292 0ed0 4B08     		.2byte	0x84b
 3293 0ed2 6A0E0000 		.4byte	0xe6a
 3294 0ed6 08070000 		.4byte	.LLST52
 3295 0eda 18       		.uleb128 0x18
 3296 0edb A00A0000 		.4byte	.LASF148
 3297 0edf 01       		.byte	0x1
 3298 0ee0 4F08     		.2byte	0x84f
 3299 0ee2 0A020000 		.4byte	0x20a
 3300 0ee6 02       		.uleb128 0x2
 3301 0ee7 91       		.byte	0x91
 3302 0ee8 64       		.sleb128 -28
 3303 0ee9 1B       		.uleb128 0x1b
 3304 0eea 48080000 		.4byte	.LASF147
 3305 0eee 01       		.byte	0x1
 3306 0eef 5408     		.2byte	0x854
 3307 0ef1 AB060000 		.4byte	0x6ab
 3308 0ef5 1B070000 		.4byte	.LLST53
 3309 0ef9 20       		.uleb128 0x20
 3310 0efa 38000000 		.4byte	.LVL156
 3311 0efe 16100000 		.4byte	0x1016
 3312 0f02 1D       		.uleb128 0x1d
 3313 0f03 56000000 		.4byte	.LVL159
 3314 0f07 720D0000 		.4byte	0xd72
 3315 0f0b 1E       		.uleb128 0x1e
 3316 0f0c 01       		.uleb128 0x1
 3317 0f0d 50       		.byte	0x50
 3318 0f0e 03       		.uleb128 0x3
 3319 0f0f 91       		.byte	0x91
 3320 0f10 5C       		.sleb128 -36
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 109


 3321 0f11 06       		.byte	0x6
 3322 0f12 1E       		.uleb128 0x1e
 3323 0f13 01       		.uleb128 0x1
 3324 0f14 51       		.byte	0x51
 3325 0f15 02       		.uleb128 0x2
 3326 0f16 76       		.byte	0x76
 3327 0f17 00       		.sleb128 0
 3328 0f18 1E       		.uleb128 0x1e
 3329 0f19 01       		.uleb128 0x1
 3330 0f1a 52       		.byte	0x52
 3331 0f1b 02       		.uleb128 0x2
 3332 0f1c 91       		.byte	0x91
 3333 0f1d 64       		.sleb128 -28
 3334 0f1e 00       		.byte	0
 3335 0f1f 00       		.byte	0
 3336 0f20 2B       		.uleb128 0x2b
 3337 0f21 DF010000 		.4byte	.LASF152
 3338 0f25 01       		.byte	0x1
 3339 0f26 6E       		.byte	0x6e
 3340 0f27 83000000 		.4byte	0x83
 3341 0f2b 05       		.uleb128 0x5
 3342 0f2c 03       		.byte	0x3
 3343 0f2d 04000000 		.4byte	CapSense_1_counterResolution
 3344 0f31 2B       		.uleb128 0x2b
 3345 0f32 87050000 		.4byte	.LASF153
 3346 0f36 01       		.byte	0x1
 3347 0f37 72       		.byte	0x72
 3348 0f38 6B000000 		.4byte	0x6b
 3349 0f3c 05       		.uleb128 0x5
 3350 0f3d 03       		.byte	0x3
 3351 0f3e 00000000 		.4byte	CapSense_1_eleCsdDisconnectFlag
 3352 0f42 2C       		.uleb128 0x2c
 3353 0f43 1F070000 		.4byte	.LASF154
 3354 0f47 05       		.byte	0x5
 3355 0f48 7104     		.2byte	0x471
 3356 0f4a 73050000 		.4byte	0x573
 3357 0f4e 2C       		.uleb128 0x2c
 3358 0f4f 27080000 		.4byte	.LASF155
 3359 0f53 05       		.byte	0x5
 3360 0f54 7204     		.2byte	0x472
 3361 0f56 5A0F0000 		.4byte	0xf5a
 3362 0f5a 1C       		.uleb128 0x1c
 3363 0f5b EB060000 		.4byte	0x6eb
 3364 0f5f 2D       		.uleb128 0x2d
 3365 0f60 4A040000 		.4byte	.LASF156
 3366 0f64 06       		.byte	0x6
 3367 0f65 9D       		.byte	0x9d
 3368 0f66 B0000000 		.4byte	0xb0
 3369 0f6a 2D       		.uleb128 0x2d
 3370 0f6b 68090000 		.4byte	.LASF157
 3371 0f6f 06       		.byte	0x6
 3372 0f70 9E       		.byte	0x9e
 3373 0f71 B0000000 		.4byte	0xb0
 3374 0f75 2D       		.uleb128 0x2d
 3375 0f76 4B000000 		.4byte	.LASF158
 3376 0f7a 06       		.byte	0x6
 3377 0f7b A1       		.byte	0xa1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 110


 3378 0f7c A5060000 		.4byte	0x6a5
 3379 0f80 2D       		.uleb128 0x2d
 3380 0f81 80010000 		.4byte	.LASF159
 3381 0f85 06       		.byte	0x6
 3382 0f86 A8       		.byte	0xa8
 3383 0f87 D4080000 		.4byte	0x8d4
 3384 0f8b 2D       		.uleb128 0x2d
 3385 0f8c D6000000 		.4byte	.LASF160
 3386 0f90 06       		.byte	0x6
 3387 0f91 B6       		.byte	0xb6
 3388 0f92 110B0000 		.4byte	0xb11
 3389 0f96 2E       		.uleb128 0x2e
 3390 0f97 69050000 		.4byte	.LASF161
 3391 0f9b 01       		.byte	0x1
 3392 0f9c 6D       		.byte	0x6d
 3393 0f9d 83000000 		.4byte	0x83
 3394 0fa1 05       		.uleb128 0x5
 3395 0fa2 03       		.byte	0x3
 3396 0fa3 00000000 		.4byte	CapSense_1_configCsd
 3397 0fa7 2E       		.uleb128 0x2e
 3398 0fa8 BB020000 		.4byte	.LASF162
 3399 0fac 01       		.byte	0x1
 3400 0fad 7A       		.byte	0x7a
 3401 0fae 6B000000 		.4byte	0x6b
 3402 0fb2 05       		.uleb128 0x5
 3403 0fb3 03       		.byte	0x3
 3404 0fb4 00000000 		.4byte	CapSense_1_calibratedIdac
 3405 0fb8 2E       		.uleb128 0x2e
 3406 0fb9 FA080000 		.4byte	.LASF163
 3407 0fbd 01       		.byte	0x1
 3408 0fbe 7B       		.byte	0x7b
 3409 0fbf 77000000 		.4byte	0x77
 3410 0fc3 05       		.uleb128 0x5
 3411 0fc4 03       		.byte	0x3
 3412 0fc5 00000000 		.4byte	CapSense_1_calibratedRawcount
 3413 0fc9 2F       		.uleb128 0x2f
 3414 0fca DA080000 		.4byte	.LASF164
 3415 0fce DA080000 		.4byte	.LASF164
 3416 0fd2 06       		.byte	0x6
 3417 0fd3 69       		.byte	0x69
 3418 0fd4 2F       		.uleb128 0x2f
 3419 0fd5 F40A0000 		.4byte	.LASF165
 3420 0fd9 F40A0000 		.4byte	.LASF165
 3421 0fdd 06       		.byte	0x6
 3422 0fde 85       		.byte	0x85
 3423 0fdf 2F       		.uleb128 0x2f
 3424 0fe0 95030000 		.4byte	.LASF166
 3425 0fe4 95030000 		.4byte	.LASF166
 3426 0fe8 07       		.byte	0x7
 3427 0fe9 E5       		.byte	0xe5
 3428 0fea 2F       		.uleb128 0x2f
 3429 0feb 0B050000 		.4byte	.LASF167
 3430 0fef 0B050000 		.4byte	.LASF167
 3431 0ff3 07       		.byte	0x7
 3432 0ff4 E6       		.byte	0xe6
 3433 0ff5 2F       		.uleb128 0x2f
 3434 0ff6 80040000 		.4byte	.LASF168
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 111


 3435 0ffa 80040000 		.4byte	.LASF168
 3436 0ffe 06       		.byte	0x6
 3437 0fff 68       		.byte	0x68
 3438 1000 2F       		.uleb128 0x2f
 3439 1001 21050000 		.4byte	.LASF169
 3440 1005 21050000 		.4byte	.LASF169
 3441 1009 07       		.byte	0x7
 3442 100a DC       		.byte	0xdc
 3443 100b 2F       		.uleb128 0x2f
 3444 100c 580A0000 		.4byte	.LASF170
 3445 1010 580A0000 		.4byte	.LASF170
 3446 1014 07       		.byte	0x7
 3447 1015 C3       		.byte	0xc3
 3448 1016 2F       		.uleb128 0x2f
 3449 1017 7E030000 		.4byte	.LASF171
 3450 101b 7E030000 		.4byte	.LASF171
 3451 101f 08       		.byte	0x8
 3452 1020 18       		.byte	0x18
 3453 1021 2F       		.uleb128 0x2f
 3454 1022 61040000 		.4byte	.LASF172
 3455 1026 61040000 		.4byte	.LASF172
 3456 102a 06       		.byte	0x6
 3457 102b 6E       		.byte	0x6e
 3458 102c 00       		.byte	0
 3459              		.section	.debug_abbrev,"",%progbits
 3460              	.Ldebug_abbrev0:
 3461 0000 01       		.uleb128 0x1
 3462 0001 11       		.uleb128 0x11
 3463 0002 01       		.byte	0x1
 3464 0003 25       		.uleb128 0x25
 3465 0004 0E       		.uleb128 0xe
 3466 0005 13       		.uleb128 0x13
 3467 0006 0B       		.uleb128 0xb
 3468 0007 03       		.uleb128 0x3
 3469 0008 0E       		.uleb128 0xe
 3470 0009 1B       		.uleb128 0x1b
 3471 000a 0E       		.uleb128 0xe
 3472 000b 55       		.uleb128 0x55
 3473 000c 17       		.uleb128 0x17
 3474 000d 11       		.uleb128 0x11
 3475 000e 01       		.uleb128 0x1
 3476 000f 10       		.uleb128 0x10
 3477 0010 17       		.uleb128 0x17
 3478 0011 00       		.byte	0
 3479 0012 00       		.byte	0
 3480 0013 02       		.uleb128 0x2
 3481 0014 24       		.uleb128 0x24
 3482 0015 00       		.byte	0
 3483 0016 0B       		.uleb128 0xb
 3484 0017 0B       		.uleb128 0xb
 3485 0018 3E       		.uleb128 0x3e
 3486 0019 0B       		.uleb128 0xb
 3487 001a 03       		.uleb128 0x3
 3488 001b 0E       		.uleb128 0xe
 3489 001c 00       		.byte	0
 3490 001d 00       		.byte	0
 3491 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 112


 3492 001f 24       		.uleb128 0x24
 3493 0020 00       		.byte	0
 3494 0021 0B       		.uleb128 0xb
 3495 0022 0B       		.uleb128 0xb
 3496 0023 3E       		.uleb128 0x3e
 3497 0024 0B       		.uleb128 0xb
 3498 0025 03       		.uleb128 0x3
 3499 0026 08       		.uleb128 0x8
 3500 0027 00       		.byte	0
 3501 0028 00       		.byte	0
 3502 0029 04       		.uleb128 0x4
 3503 002a 16       		.uleb128 0x16
 3504 002b 00       		.byte	0
 3505 002c 03       		.uleb128 0x3
 3506 002d 0E       		.uleb128 0xe
 3507 002e 3A       		.uleb128 0x3a
 3508 002f 0B       		.uleb128 0xb
 3509 0030 3B       		.uleb128 0x3b
 3510 0031 05       		.uleb128 0x5
 3511 0032 49       		.uleb128 0x49
 3512 0033 13       		.uleb128 0x13
 3513 0034 00       		.byte	0
 3514 0035 00       		.byte	0
 3515 0036 05       		.uleb128 0x5
 3516 0037 35       		.uleb128 0x35
 3517 0038 00       		.byte	0
 3518 0039 49       		.uleb128 0x49
 3519 003a 13       		.uleb128 0x13
 3520 003b 00       		.byte	0
 3521 003c 00       		.byte	0
 3522 003d 06       		.uleb128 0x6
 3523 003e 13       		.uleb128 0x13
 3524 003f 01       		.byte	0x1
 3525 0040 0B       		.uleb128 0xb
 3526 0041 0B       		.uleb128 0xb
 3527 0042 3A       		.uleb128 0x3a
 3528 0043 0B       		.uleb128 0xb
 3529 0044 3B       		.uleb128 0x3b
 3530 0045 0B       		.uleb128 0xb
 3531 0046 01       		.uleb128 0x1
 3532 0047 13       		.uleb128 0x13
 3533 0048 00       		.byte	0
 3534 0049 00       		.byte	0
 3535 004a 07       		.uleb128 0x7
 3536 004b 0D       		.uleb128 0xd
 3537 004c 00       		.byte	0
 3538 004d 03       		.uleb128 0x3
 3539 004e 0E       		.uleb128 0xe
 3540 004f 3A       		.uleb128 0x3a
 3541 0050 0B       		.uleb128 0xb
 3542 0051 3B       		.uleb128 0x3b
 3543 0052 0B       		.uleb128 0xb
 3544 0053 49       		.uleb128 0x49
 3545 0054 13       		.uleb128 0x13
 3546 0055 38       		.uleb128 0x38
 3547 0056 0B       		.uleb128 0xb
 3548 0057 00       		.byte	0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 113


 3549 0058 00       		.byte	0
 3550 0059 08       		.uleb128 0x8
 3551 005a 16       		.uleb128 0x16
 3552 005b 00       		.byte	0
 3553 005c 03       		.uleb128 0x3
 3554 005d 0E       		.uleb128 0xe
 3555 005e 3A       		.uleb128 0x3a
 3556 005f 0B       		.uleb128 0xb
 3557 0060 3B       		.uleb128 0x3b
 3558 0061 0B       		.uleb128 0xb
 3559 0062 49       		.uleb128 0x49
 3560 0063 13       		.uleb128 0x13
 3561 0064 00       		.byte	0
 3562 0065 00       		.byte	0
 3563 0066 09       		.uleb128 0x9
 3564 0067 04       		.uleb128 0x4
 3565 0068 01       		.byte	0x1
 3566 0069 0B       		.uleb128 0xb
 3567 006a 0B       		.uleb128 0xb
 3568 006b 49       		.uleb128 0x49
 3569 006c 13       		.uleb128 0x13
 3570 006d 3A       		.uleb128 0x3a
 3571 006e 0B       		.uleb128 0xb
 3572 006f 3B       		.uleb128 0x3b
 3573 0070 0B       		.uleb128 0xb
 3574 0071 01       		.uleb128 0x1
 3575 0072 13       		.uleb128 0x13
 3576 0073 00       		.byte	0
 3577 0074 00       		.byte	0
 3578 0075 0A       		.uleb128 0xa
 3579 0076 28       		.uleb128 0x28
 3580 0077 00       		.byte	0
 3581 0078 03       		.uleb128 0x3
 3582 0079 0E       		.uleb128 0xe
 3583 007a 1C       		.uleb128 0x1c
 3584 007b 0B       		.uleb128 0xb
 3585 007c 00       		.byte	0
 3586 007d 00       		.byte	0
 3587 007e 0B       		.uleb128 0xb
 3588 007f 01       		.uleb128 0x1
 3589 0080 01       		.byte	0x1
 3590 0081 49       		.uleb128 0x49
 3591 0082 13       		.uleb128 0x13
 3592 0083 01       		.uleb128 0x1
 3593 0084 13       		.uleb128 0x13
 3594 0085 00       		.byte	0
 3595 0086 00       		.byte	0
 3596 0087 0C       		.uleb128 0xc
 3597 0088 21       		.uleb128 0x21
 3598 0089 00       		.byte	0
 3599 008a 49       		.uleb128 0x49
 3600 008b 13       		.uleb128 0x13
 3601 008c 2F       		.uleb128 0x2f
 3602 008d 0B       		.uleb128 0xb
 3603 008e 00       		.byte	0
 3604 008f 00       		.byte	0
 3605 0090 0D       		.uleb128 0xd
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 114


 3606 0091 0D       		.uleb128 0xd
 3607 0092 00       		.byte	0
 3608 0093 03       		.uleb128 0x3
 3609 0094 0E       		.uleb128 0xe
 3610 0095 3A       		.uleb128 0x3a
 3611 0096 0B       		.uleb128 0xb
 3612 0097 3B       		.uleb128 0x3b
 3613 0098 05       		.uleb128 0x5
 3614 0099 49       		.uleb128 0x49
 3615 009a 13       		.uleb128 0x13
 3616 009b 38       		.uleb128 0x38
 3617 009c 0B       		.uleb128 0xb
 3618 009d 00       		.byte	0
 3619 009e 00       		.byte	0
 3620 009f 0E       		.uleb128 0xe
 3621 00a0 13       		.uleb128 0x13
 3622 00a1 01       		.byte	0x1
 3623 00a2 0B       		.uleb128 0xb
 3624 00a3 0B       		.uleb128 0xb
 3625 00a4 3A       		.uleb128 0x3a
 3626 00a5 0B       		.uleb128 0xb
 3627 00a6 3B       		.uleb128 0x3b
 3628 00a7 05       		.uleb128 0x5
 3629 00a8 01       		.uleb128 0x1
 3630 00a9 13       		.uleb128 0x13
 3631 00aa 00       		.byte	0
 3632 00ab 00       		.byte	0
 3633 00ac 0F       		.uleb128 0xf
 3634 00ad 0D       		.uleb128 0xd
 3635 00ae 00       		.byte	0
 3636 00af 03       		.uleb128 0x3
 3637 00b0 08       		.uleb128 0x8
 3638 00b1 3A       		.uleb128 0x3a
 3639 00b2 0B       		.uleb128 0xb
 3640 00b3 3B       		.uleb128 0x3b
 3641 00b4 05       		.uleb128 0x5
 3642 00b5 49       		.uleb128 0x49
 3643 00b6 13       		.uleb128 0x13
 3644 00b7 38       		.uleb128 0x38
 3645 00b8 0B       		.uleb128 0xb
 3646 00b9 00       		.byte	0
 3647 00ba 00       		.byte	0
 3648 00bb 10       		.uleb128 0x10
 3649 00bc 13       		.uleb128 0x13
 3650 00bd 01       		.byte	0x1
 3651 00be 0B       		.uleb128 0xb
 3652 00bf 05       		.uleb128 0x5
 3653 00c0 3A       		.uleb128 0x3a
 3654 00c1 0B       		.uleb128 0xb
 3655 00c2 3B       		.uleb128 0x3b
 3656 00c3 05       		.uleb128 0x5
 3657 00c4 01       		.uleb128 0x1
 3658 00c5 13       		.uleb128 0x13
 3659 00c6 00       		.byte	0
 3660 00c7 00       		.byte	0
 3661 00c8 11       		.uleb128 0x11
 3662 00c9 0D       		.uleb128 0xd
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 115


 3663 00ca 00       		.byte	0
 3664 00cb 03       		.uleb128 0x3
 3665 00cc 0E       		.uleb128 0xe
 3666 00cd 3A       		.uleb128 0x3a
 3667 00ce 0B       		.uleb128 0xb
 3668 00cf 3B       		.uleb128 0x3b
 3669 00d0 05       		.uleb128 0x5
 3670 00d1 49       		.uleb128 0x49
 3671 00d2 13       		.uleb128 0x13
 3672 00d3 38       		.uleb128 0x38
 3673 00d4 05       		.uleb128 0x5
 3674 00d5 00       		.byte	0
 3675 00d6 00       		.byte	0
 3676 00d7 12       		.uleb128 0x12
 3677 00d8 0F       		.uleb128 0xf
 3678 00d9 00       		.byte	0
 3679 00da 0B       		.uleb128 0xb
 3680 00db 0B       		.uleb128 0xb
 3681 00dc 49       		.uleb128 0x49
 3682 00dd 13       		.uleb128 0x13
 3683 00de 00       		.byte	0
 3684 00df 00       		.byte	0
 3685 00e0 13       		.uleb128 0x13
 3686 00e1 26       		.uleb128 0x26
 3687 00e2 00       		.byte	0
 3688 00e3 00       		.byte	0
 3689 00e4 00       		.byte	0
 3690 00e5 14       		.uleb128 0x14
 3691 00e6 0F       		.uleb128 0xf
 3692 00e7 00       		.byte	0
 3693 00e8 0B       		.uleb128 0xb
 3694 00e9 0B       		.uleb128 0xb
 3695 00ea 00       		.byte	0
 3696 00eb 00       		.byte	0
 3697 00ec 15       		.uleb128 0x15
 3698 00ed 2E       		.uleb128 0x2e
 3699 00ee 00       		.byte	0
 3700 00ef 03       		.uleb128 0x3
 3701 00f0 0E       		.uleb128 0xe
 3702 00f1 3A       		.uleb128 0x3a
 3703 00f2 0B       		.uleb128 0xb
 3704 00f3 3B       		.uleb128 0x3b
 3705 00f4 05       		.uleb128 0x5
 3706 00f5 27       		.uleb128 0x27
 3707 00f6 19       		.uleb128 0x19
 3708 00f7 20       		.uleb128 0x20
 3709 00f8 0B       		.uleb128 0xb
 3710 00f9 00       		.byte	0
 3711 00fa 00       		.byte	0
 3712 00fb 16       		.uleb128 0x16
 3713 00fc 2E       		.uleb128 0x2e
 3714 00fd 00       		.byte	0
 3715 00fe 03       		.uleb128 0x3
 3716 00ff 0E       		.uleb128 0xe
 3717 0100 3A       		.uleb128 0x3a
 3718 0101 0B       		.uleb128 0xb
 3719 0102 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 116


 3720 0103 05       		.uleb128 0x5
 3721 0104 27       		.uleb128 0x27
 3722 0105 19       		.uleb128 0x19
 3723 0106 11       		.uleb128 0x11
 3724 0107 01       		.uleb128 0x1
 3725 0108 12       		.uleb128 0x12
 3726 0109 06       		.uleb128 0x6
 3727 010a 40       		.uleb128 0x40
 3728 010b 18       		.uleb128 0x18
 3729 010c 9742     		.uleb128 0x2117
 3730 010e 19       		.uleb128 0x19
 3731 010f 00       		.byte	0
 3732 0110 00       		.byte	0
 3733 0111 17       		.uleb128 0x17
 3734 0112 2E       		.uleb128 0x2e
 3735 0113 01       		.byte	0x1
 3736 0114 03       		.uleb128 0x3
 3737 0115 0E       		.uleb128 0xe
 3738 0116 3A       		.uleb128 0x3a
 3739 0117 0B       		.uleb128 0xb
 3740 0118 3B       		.uleb128 0x3b
 3741 0119 05       		.uleb128 0x5
 3742 011a 27       		.uleb128 0x27
 3743 011b 19       		.uleb128 0x19
 3744 011c 11       		.uleb128 0x11
 3745 011d 01       		.uleb128 0x1
 3746 011e 12       		.uleb128 0x12
 3747 011f 06       		.uleb128 0x6
 3748 0120 40       		.uleb128 0x40
 3749 0121 18       		.uleb128 0x18
 3750 0122 9742     		.uleb128 0x2117
 3751 0124 19       		.uleb128 0x19
 3752 0125 01       		.uleb128 0x1
 3753 0126 13       		.uleb128 0x13
 3754 0127 00       		.byte	0
 3755 0128 00       		.byte	0
 3756 0129 18       		.uleb128 0x18
 3757 012a 34       		.uleb128 0x34
 3758 012b 00       		.byte	0
 3759 012c 03       		.uleb128 0x3
 3760 012d 0E       		.uleb128 0xe
 3761 012e 3A       		.uleb128 0x3a
 3762 012f 0B       		.uleb128 0xb
 3763 0130 3B       		.uleb128 0x3b
 3764 0131 05       		.uleb128 0x5
 3765 0132 49       		.uleb128 0x49
 3766 0133 13       		.uleb128 0x13
 3767 0134 02       		.uleb128 0x2
 3768 0135 18       		.uleb128 0x18
 3769 0136 00       		.byte	0
 3770 0137 00       		.byte	0
 3771 0138 19       		.uleb128 0x19
 3772 0139 2E       		.uleb128 0x2e
 3773 013a 01       		.byte	0x1
 3774 013b 03       		.uleb128 0x3
 3775 013c 0E       		.uleb128 0xe
 3776 013d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 117


 3777 013e 0B       		.uleb128 0xb
 3778 013f 3B       		.uleb128 0x3b
 3779 0140 05       		.uleb128 0x5
 3780 0141 27       		.uleb128 0x27
 3781 0142 19       		.uleb128 0x19
 3782 0143 49       		.uleb128 0x49
 3783 0144 13       		.uleb128 0x13
 3784 0145 11       		.uleb128 0x11
 3785 0146 01       		.uleb128 0x1
 3786 0147 12       		.uleb128 0x12
 3787 0148 06       		.uleb128 0x6
 3788 0149 40       		.uleb128 0x40
 3789 014a 18       		.uleb128 0x18
 3790 014b 9642     		.uleb128 0x2116
 3791 014d 19       		.uleb128 0x19
 3792 014e 01       		.uleb128 0x1
 3793 014f 13       		.uleb128 0x13
 3794 0150 00       		.byte	0
 3795 0151 00       		.byte	0
 3796 0152 1A       		.uleb128 0x1a
 3797 0153 05       		.uleb128 0x5
 3798 0154 00       		.byte	0
 3799 0155 03       		.uleb128 0x3
 3800 0156 0E       		.uleb128 0xe
 3801 0157 3A       		.uleb128 0x3a
 3802 0158 0B       		.uleb128 0xb
 3803 0159 3B       		.uleb128 0x3b
 3804 015a 05       		.uleb128 0x5
 3805 015b 49       		.uleb128 0x49
 3806 015c 13       		.uleb128 0x13
 3807 015d 02       		.uleb128 0x2
 3808 015e 17       		.uleb128 0x17
 3809 015f 00       		.byte	0
 3810 0160 00       		.byte	0
 3811 0161 1B       		.uleb128 0x1b
 3812 0162 34       		.uleb128 0x34
 3813 0163 00       		.byte	0
 3814 0164 03       		.uleb128 0x3
 3815 0165 0E       		.uleb128 0xe
 3816 0166 3A       		.uleb128 0x3a
 3817 0167 0B       		.uleb128 0xb
 3818 0168 3B       		.uleb128 0x3b
 3819 0169 05       		.uleb128 0x5
 3820 016a 49       		.uleb128 0x49
 3821 016b 13       		.uleb128 0x13
 3822 016c 02       		.uleb128 0x2
 3823 016d 17       		.uleb128 0x17
 3824 016e 00       		.byte	0
 3825 016f 00       		.byte	0
 3826 0170 1C       		.uleb128 0x1c
 3827 0171 26       		.uleb128 0x26
 3828 0172 00       		.byte	0
 3829 0173 49       		.uleb128 0x49
 3830 0174 13       		.uleb128 0x13
 3831 0175 00       		.byte	0
 3832 0176 00       		.byte	0
 3833 0177 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 118


 3834 0178 898201   		.uleb128 0x4109
 3835 017b 01       		.byte	0x1
 3836 017c 11       		.uleb128 0x11
 3837 017d 01       		.uleb128 0x1
 3838 017e 31       		.uleb128 0x31
 3839 017f 13       		.uleb128 0x13
 3840 0180 00       		.byte	0
 3841 0181 00       		.byte	0
 3842 0182 1E       		.uleb128 0x1e
 3843 0183 8A8201   		.uleb128 0x410a
 3844 0186 00       		.byte	0
 3845 0187 02       		.uleb128 0x2
 3846 0188 18       		.uleb128 0x18
 3847 0189 9142     		.uleb128 0x2111
 3848 018b 18       		.uleb128 0x18
 3849 018c 00       		.byte	0
 3850 018d 00       		.byte	0
 3851 018e 1F       		.uleb128 0x1f
 3852 018f 2E       		.uleb128 0x2e
 3853 0190 01       		.byte	0x1
 3854 0191 3F       		.uleb128 0x3f
 3855 0192 19       		.uleb128 0x19
 3856 0193 03       		.uleb128 0x3
 3857 0194 0E       		.uleb128 0xe
 3858 0195 3A       		.uleb128 0x3a
 3859 0196 0B       		.uleb128 0xb
 3860 0197 3B       		.uleb128 0x3b
 3861 0198 05       		.uleb128 0x5
 3862 0199 27       		.uleb128 0x27
 3863 019a 19       		.uleb128 0x19
 3864 019b 11       		.uleb128 0x11
 3865 019c 01       		.uleb128 0x1
 3866 019d 12       		.uleb128 0x12
 3867 019e 06       		.uleb128 0x6
 3868 019f 40       		.uleb128 0x40
 3869 01a0 18       		.uleb128 0x18
 3870 01a1 9742     		.uleb128 0x2117
 3871 01a3 19       		.uleb128 0x19
 3872 01a4 01       		.uleb128 0x1
 3873 01a5 13       		.uleb128 0x13
 3874 01a6 00       		.byte	0
 3875 01a7 00       		.byte	0
 3876 01a8 20       		.uleb128 0x20
 3877 01a9 898201   		.uleb128 0x4109
 3878 01ac 00       		.byte	0
 3879 01ad 11       		.uleb128 0x11
 3880 01ae 01       		.uleb128 0x1
 3881 01af 31       		.uleb128 0x31
 3882 01b0 13       		.uleb128 0x13
 3883 01b1 00       		.byte	0
 3884 01b2 00       		.byte	0
 3885 01b3 21       		.uleb128 0x21
 3886 01b4 05       		.uleb128 0x5
 3887 01b5 00       		.byte	0
 3888 01b6 03       		.uleb128 0x3
 3889 01b7 0E       		.uleb128 0xe
 3890 01b8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 119


 3891 01b9 0B       		.uleb128 0xb
 3892 01ba 3B       		.uleb128 0x3b
 3893 01bb 05       		.uleb128 0x5
 3894 01bc 49       		.uleb128 0x49
 3895 01bd 13       		.uleb128 0x13
 3896 01be 02       		.uleb128 0x2
 3897 01bf 18       		.uleb128 0x18
 3898 01c0 00       		.byte	0
 3899 01c1 00       		.byte	0
 3900 01c2 22       		.uleb128 0x22
 3901 01c3 2E       		.uleb128 0x2e
 3902 01c4 01       		.byte	0x1
 3903 01c5 03       		.uleb128 0x3
 3904 01c6 0E       		.uleb128 0xe
 3905 01c7 3A       		.uleb128 0x3a
 3906 01c8 0B       		.uleb128 0xb
 3907 01c9 3B       		.uleb128 0x3b
 3908 01ca 05       		.uleb128 0x5
 3909 01cb 27       		.uleb128 0x27
 3910 01cc 19       		.uleb128 0x19
 3911 01cd 20       		.uleb128 0x20
 3912 01ce 0B       		.uleb128 0xb
 3913 01cf 01       		.uleb128 0x1
 3914 01d0 13       		.uleb128 0x13
 3915 01d1 00       		.byte	0
 3916 01d2 00       		.byte	0
 3917 01d3 23       		.uleb128 0x23
 3918 01d4 34       		.uleb128 0x34
 3919 01d5 00       		.byte	0
 3920 01d6 03       		.uleb128 0x3
 3921 01d7 0E       		.uleb128 0xe
 3922 01d8 3A       		.uleb128 0x3a
 3923 01d9 0B       		.uleb128 0xb
 3924 01da 3B       		.uleb128 0x3b
 3925 01db 05       		.uleb128 0x5
 3926 01dc 49       		.uleb128 0x49
 3927 01dd 13       		.uleb128 0x13
 3928 01de 00       		.byte	0
 3929 01df 00       		.byte	0
 3930 01e0 24       		.uleb128 0x24
 3931 01e1 1D       		.uleb128 0x1d
 3932 01e2 01       		.byte	0x1
 3933 01e3 31       		.uleb128 0x31
 3934 01e4 13       		.uleb128 0x13
 3935 01e5 11       		.uleb128 0x11
 3936 01e6 01       		.uleb128 0x1
 3937 01e7 12       		.uleb128 0x12
 3938 01e8 06       		.uleb128 0x6
 3939 01e9 58       		.uleb128 0x58
 3940 01ea 0B       		.uleb128 0xb
 3941 01eb 59       		.uleb128 0x59
 3942 01ec 05       		.uleb128 0x5
 3943 01ed 01       		.uleb128 0x1
 3944 01ee 13       		.uleb128 0x13
 3945 01ef 00       		.byte	0
 3946 01f0 00       		.byte	0
 3947 01f1 25       		.uleb128 0x25
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 120


 3948 01f2 0B       		.uleb128 0xb
 3949 01f3 01       		.byte	0x1
 3950 01f4 11       		.uleb128 0x11
 3951 01f5 01       		.uleb128 0x1
 3952 01f6 12       		.uleb128 0x12
 3953 01f7 06       		.uleb128 0x6
 3954 01f8 00       		.byte	0
 3955 01f9 00       		.byte	0
 3956 01fa 26       		.uleb128 0x26
 3957 01fb 34       		.uleb128 0x34
 3958 01fc 00       		.byte	0
 3959 01fd 31       		.uleb128 0x31
 3960 01fe 13       		.uleb128 0x13
 3961 01ff 02       		.uleb128 0x2
 3962 0200 17       		.uleb128 0x17
 3963 0201 00       		.byte	0
 3964 0202 00       		.byte	0
 3965 0203 27       		.uleb128 0x27
 3966 0204 898201   		.uleb128 0x4109
 3967 0207 01       		.byte	0x1
 3968 0208 11       		.uleb128 0x11
 3969 0209 01       		.uleb128 0x1
 3970 020a 31       		.uleb128 0x31
 3971 020b 13       		.uleb128 0x13
 3972 020c 01       		.uleb128 0x1
 3973 020d 13       		.uleb128 0x13
 3974 020e 00       		.byte	0
 3975 020f 00       		.byte	0
 3976 0210 28       		.uleb128 0x28
 3977 0211 1D       		.uleb128 0x1d
 3978 0212 00       		.byte	0
 3979 0213 31       		.uleb128 0x31
 3980 0214 13       		.uleb128 0x13
 3981 0215 11       		.uleb128 0x11
 3982 0216 01       		.uleb128 0x1
 3983 0217 12       		.uleb128 0x12
 3984 0218 06       		.uleb128 0x6
 3985 0219 58       		.uleb128 0x58
 3986 021a 0B       		.uleb128 0xb
 3987 021b 59       		.uleb128 0x59
 3988 021c 05       		.uleb128 0x5
 3989 021d 00       		.byte	0
 3990 021e 00       		.byte	0
 3991 021f 29       		.uleb128 0x29
 3992 0220 2E       		.uleb128 0x2e
 3993 0221 01       		.byte	0x1
 3994 0222 03       		.uleb128 0x3
 3995 0223 0E       		.uleb128 0xe
 3996 0224 3A       		.uleb128 0x3a
 3997 0225 0B       		.uleb128 0xb
 3998 0226 3B       		.uleb128 0x3b
 3999 0227 05       		.uleb128 0x5
 4000 0228 27       		.uleb128 0x27
 4001 0229 19       		.uleb128 0x19
 4002 022a 49       		.uleb128 0x49
 4003 022b 13       		.uleb128 0x13
 4004 022c 11       		.uleb128 0x11
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 121


 4005 022d 01       		.uleb128 0x1
 4006 022e 12       		.uleb128 0x12
 4007 022f 06       		.uleb128 0x6
 4008 0230 40       		.uleb128 0x40
 4009 0231 18       		.uleb128 0x18
 4010 0232 9742     		.uleb128 0x2117
 4011 0234 19       		.uleb128 0x19
 4012 0235 01       		.uleb128 0x1
 4013 0236 13       		.uleb128 0x13
 4014 0237 00       		.byte	0
 4015 0238 00       		.byte	0
 4016 0239 2A       		.uleb128 0x2a
 4017 023a 2E       		.uleb128 0x2e
 4018 023b 01       		.byte	0x1
 4019 023c 3F       		.uleb128 0x3f
 4020 023d 19       		.uleb128 0x19
 4021 023e 03       		.uleb128 0x3
 4022 023f 0E       		.uleb128 0xe
 4023 0240 3A       		.uleb128 0x3a
 4024 0241 0B       		.uleb128 0xb
 4025 0242 3B       		.uleb128 0x3b
 4026 0243 05       		.uleb128 0x5
 4027 0244 27       		.uleb128 0x27
 4028 0245 19       		.uleb128 0x19
 4029 0246 49       		.uleb128 0x49
 4030 0247 13       		.uleb128 0x13
 4031 0248 11       		.uleb128 0x11
 4032 0249 01       		.uleb128 0x1
 4033 024a 12       		.uleb128 0x12
 4034 024b 06       		.uleb128 0x6
 4035 024c 40       		.uleb128 0x40
 4036 024d 18       		.uleb128 0x18
 4037 024e 9642     		.uleb128 0x2116
 4038 0250 19       		.uleb128 0x19
 4039 0251 01       		.uleb128 0x1
 4040 0252 13       		.uleb128 0x13
 4041 0253 00       		.byte	0
 4042 0254 00       		.byte	0
 4043 0255 2B       		.uleb128 0x2b
 4044 0256 34       		.uleb128 0x34
 4045 0257 00       		.byte	0
 4046 0258 03       		.uleb128 0x3
 4047 0259 0E       		.uleb128 0xe
 4048 025a 3A       		.uleb128 0x3a
 4049 025b 0B       		.uleb128 0xb
 4050 025c 3B       		.uleb128 0x3b
 4051 025d 0B       		.uleb128 0xb
 4052 025e 49       		.uleb128 0x49
 4053 025f 13       		.uleb128 0x13
 4054 0260 02       		.uleb128 0x2
 4055 0261 18       		.uleb128 0x18
 4056 0262 00       		.byte	0
 4057 0263 00       		.byte	0
 4058 0264 2C       		.uleb128 0x2c
 4059 0265 34       		.uleb128 0x34
 4060 0266 00       		.byte	0
 4061 0267 03       		.uleb128 0x3
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 122


 4062 0268 0E       		.uleb128 0xe
 4063 0269 3A       		.uleb128 0x3a
 4064 026a 0B       		.uleb128 0xb
 4065 026b 3B       		.uleb128 0x3b
 4066 026c 05       		.uleb128 0x5
 4067 026d 49       		.uleb128 0x49
 4068 026e 13       		.uleb128 0x13
 4069 026f 3F       		.uleb128 0x3f
 4070 0270 19       		.uleb128 0x19
 4071 0271 3C       		.uleb128 0x3c
 4072 0272 19       		.uleb128 0x19
 4073 0273 00       		.byte	0
 4074 0274 00       		.byte	0
 4075 0275 2D       		.uleb128 0x2d
 4076 0276 34       		.uleb128 0x34
 4077 0277 00       		.byte	0
 4078 0278 03       		.uleb128 0x3
 4079 0279 0E       		.uleb128 0xe
 4080 027a 3A       		.uleb128 0x3a
 4081 027b 0B       		.uleb128 0xb
 4082 027c 3B       		.uleb128 0x3b
 4083 027d 0B       		.uleb128 0xb
 4084 027e 49       		.uleb128 0x49
 4085 027f 13       		.uleb128 0x13
 4086 0280 3F       		.uleb128 0x3f
 4087 0281 19       		.uleb128 0x19
 4088 0282 3C       		.uleb128 0x3c
 4089 0283 19       		.uleb128 0x19
 4090 0284 00       		.byte	0
 4091 0285 00       		.byte	0
 4092 0286 2E       		.uleb128 0x2e
 4093 0287 34       		.uleb128 0x34
 4094 0288 00       		.byte	0
 4095 0289 03       		.uleb128 0x3
 4096 028a 0E       		.uleb128 0xe
 4097 028b 3A       		.uleb128 0x3a
 4098 028c 0B       		.uleb128 0xb
 4099 028d 3B       		.uleb128 0x3b
 4100 028e 0B       		.uleb128 0xb
 4101 028f 49       		.uleb128 0x49
 4102 0290 13       		.uleb128 0x13
 4103 0291 3F       		.uleb128 0x3f
 4104 0292 19       		.uleb128 0x19
 4105 0293 02       		.uleb128 0x2
 4106 0294 18       		.uleb128 0x18
 4107 0295 00       		.byte	0
 4108 0296 00       		.byte	0
 4109 0297 2F       		.uleb128 0x2f
 4110 0298 2E       		.uleb128 0x2e
 4111 0299 00       		.byte	0
 4112 029a 3F       		.uleb128 0x3f
 4113 029b 19       		.uleb128 0x19
 4114 029c 3C       		.uleb128 0x3c
 4115 029d 19       		.uleb128 0x19
 4116 029e 6E       		.uleb128 0x6e
 4117 029f 0E       		.uleb128 0xe
 4118 02a0 03       		.uleb128 0x3
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 123


 4119 02a1 0E       		.uleb128 0xe
 4120 02a2 3A       		.uleb128 0x3a
 4121 02a3 0B       		.uleb128 0xb
 4122 02a4 3B       		.uleb128 0x3b
 4123 02a5 0B       		.uleb128 0xb
 4124 02a6 00       		.byte	0
 4125 02a7 00       		.byte	0
 4126 02a8 00       		.byte	0
 4127              		.section	.debug_loc,"",%progbits
 4128              	.Ldebug_loc0:
 4129              	.LLST0:
 4130 0000 00000000 		.4byte	.LVL2
 4131 0004 14000000 		.4byte	.LVL5
 4132 0008 0100     		.2byte	0x1
 4133 000a 50       		.byte	0x50
 4134 000b 14000000 		.4byte	.LVL5
 4135 000f 42000000 		.4byte	.LFE18
 4136 0013 0400     		.2byte	0x4
 4137 0015 F3       		.byte	0xf3
 4138 0016 01       		.uleb128 0x1
 4139 0017 50       		.byte	0x50
 4140 0018 9F       		.byte	0x9f
 4141 0019 00000000 		.4byte	0
 4142 001d 00000000 		.4byte	0
 4143              	.LLST1:
 4144 0021 00000000 		.4byte	.LVL2
 4145 0025 16000000 		.4byte	.LVL6
 4146 0029 0100     		.2byte	0x1
 4147 002b 51       		.byte	0x51
 4148 002c 16000000 		.4byte	.LVL6
 4149 0030 40000000 		.4byte	.LVL19
 4150 0034 0100     		.2byte	0x1
 4151 0036 56       		.byte	0x56
 4152 0037 40000000 		.4byte	.LVL19
 4153 003b 42000000 		.4byte	.LFE18
 4154 003f 0400     		.2byte	0x4
 4155 0041 F3       		.byte	0xf3
 4156 0042 01       		.uleb128 0x1
 4157 0043 51       		.byte	0x51
 4158 0044 9F       		.byte	0x9f
 4159 0045 00000000 		.4byte	0
 4160 0049 00000000 		.4byte	0
 4161              	.LLST2:
 4162 004d 00000000 		.4byte	.LVL2
 4163 0051 19000000 		.4byte	.LVL7-1
 4164 0055 0100     		.2byte	0x1
 4165 0057 52       		.byte	0x52
 4166 0058 19000000 		.4byte	.LVL7-1
 4167 005c 40000000 		.4byte	.LVL18
 4168 0060 0100     		.2byte	0x1
 4169 0062 55       		.byte	0x55
 4170 0063 40000000 		.4byte	.LVL18
 4171 0067 42000000 		.4byte	.LFE18
 4172 006b 0400     		.2byte	0x4
 4173 006d F3       		.byte	0xf3
 4174 006e 01       		.uleb128 0x1
 4175 006f 52       		.byte	0x52
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 124


 4176 0070 9F       		.byte	0x9f
 4177 0071 00000000 		.4byte	0
 4178 0075 00000000 		.4byte	0
 4179              	.LLST3:
 4180 0079 1C000000 		.4byte	.LVL8
 4181 007d 2A000000 		.4byte	.LVL10
 4182 0081 0100     		.2byte	0x1
 4183 0083 50       		.byte	0x50
 4184 0084 2C000000 		.4byte	.LVL11
 4185 0088 2E000000 		.4byte	.LVL12
 4186 008c 0100     		.2byte	0x1
 4187 008e 50       		.byte	0x50
 4188 008f 00000000 		.4byte	0
 4189 0093 00000000 		.4byte	0
 4190              	.LLST4:
 4191 0097 06000000 		.4byte	.LVL3
 4192 009b 2A000000 		.4byte	.LVL10
 4193 009f 0200     		.2byte	0x2
 4194 00a1 30       		.byte	0x30
 4195 00a2 9F       		.byte	0x9f
 4196 00a3 2A000000 		.4byte	.LVL10
 4197 00a7 2C000000 		.4byte	.LVL11
 4198 00ab 0100     		.2byte	0x1
 4199 00ad 50       		.byte	0x50
 4200 00ae 2C000000 		.4byte	.LVL11
 4201 00b2 2E000000 		.4byte	.LVL12
 4202 00b6 0200     		.2byte	0x2
 4203 00b8 30       		.byte	0x30
 4204 00b9 9F       		.byte	0x9f
 4205 00ba 2E000000 		.4byte	.LVL12
 4206 00be 38000000 		.4byte	.LVL13
 4207 00c2 0100     		.2byte	0x1
 4208 00c4 50       		.byte	0x50
 4209 00c5 3A000000 		.4byte	.LVL14
 4210 00c9 3C000000 		.4byte	.LVL15
 4211 00cd 0100     		.2byte	0x1
 4212 00cf 50       		.byte	0x50
 4213 00d0 3E000000 		.4byte	.LVL16
 4214 00d4 40000000 		.4byte	.LVL17
 4215 00d8 0100     		.2byte	0x1
 4216 00da 50       		.byte	0x50
 4217 00db 00000000 		.4byte	0
 4218 00df 00000000 		.4byte	0
 4219              	.LLST5:
 4220 00e3 0E000000 		.4byte	.LVL4
 4221 00e7 24000000 		.4byte	.LVL9
 4222 00eb 0100     		.2byte	0x1
 4223 00ed 54       		.byte	0x54
 4224 00ee 24000000 		.4byte	.LVL9
 4225 00f2 42000000 		.4byte	.LFE18
 4226 00f6 0100     		.2byte	0x1
 4227 00f8 53       		.byte	0x53
 4228 00f9 00000000 		.4byte	0
 4229 00fd 00000000 		.4byte	0
 4230              	.LLST6:
 4231 0101 00000000 		.4byte	.LVL20
 4232 0105 0C000000 		.4byte	.LVL21
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 125


 4233 0109 0100     		.2byte	0x1
 4234 010b 50       		.byte	0x50
 4235 010c 0C000000 		.4byte	.LVL21
 4236 0110 1C000000 		.4byte	.LFE0
 4237 0114 0400     		.2byte	0x4
 4238 0116 F3       		.byte	0xf3
 4239 0117 01       		.uleb128 0x1
 4240 0118 50       		.byte	0x50
 4241 0119 9F       		.byte	0x9f
 4242 011a 00000000 		.4byte	0
 4243 011e 00000000 		.4byte	0
 4244              	.LLST7:
 4245 0122 00000000 		.4byte	.LVL20
 4246 0126 13000000 		.4byte	.LVL22-1
 4247 012a 0100     		.2byte	0x1
 4248 012c 51       		.byte	0x51
 4249 012d 13000000 		.4byte	.LVL22-1
 4250 0131 1C000000 		.4byte	.LFE0
 4251 0135 0400     		.2byte	0x4
 4252 0137 F3       		.byte	0xf3
 4253 0138 01       		.uleb128 0x1
 4254 0139 51       		.byte	0x51
 4255 013a 9F       		.byte	0x9f
 4256 013b 00000000 		.4byte	0
 4257 013f 00000000 		.4byte	0
 4258              	.LLST8:
 4259 0143 0E000000 		.4byte	.LVL25
 4260 0147 12000000 		.4byte	.LVL26
 4261 014b 0100     		.2byte	0x1
 4262 014d 51       		.byte	0x51
 4263 014e 12000000 		.4byte	.LVL26
 4264 0152 1C000000 		.4byte	.LVL28
 4265 0156 0100     		.2byte	0x1
 4266 0158 53       		.byte	0x53
 4267 0159 1C000000 		.4byte	.LVL28
 4268 015d 20000000 		.4byte	.LVL29
 4269 0161 0200     		.2byte	0x2
 4270 0163 72       		.byte	0x72
 4271 0164 00       		.sleb128 0
 4272 0165 20000000 		.4byte	.LVL29
 4273 0169 26000000 		.4byte	.LVL30
 4274 016d 0500     		.2byte	0x5
 4275 016f 0C       		.byte	0xc
 4276 0170 10000140 		.4byte	0x40010010
 4277 0174 00000000 		.4byte	0
 4278 0178 00000000 		.4byte	0
 4279              	.LLST9:
 4280 017c 00000000 		.4byte	.LVL31
 4281 0180 04000000 		.4byte	.LVL32
 4282 0184 0100     		.2byte	0x1
 4283 0186 50       		.byte	0x50
 4284 0187 04000000 		.4byte	.LVL32
 4285 018b 09000000 		.4byte	.LVL34-1
 4286 018f 0300     		.2byte	0x3
 4287 0191 70       		.byte	0x70
 4288 0192 77       		.sleb128 -9
 4289 0193 9F       		.byte	0x9f
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 126


 4290 0194 09000000 		.4byte	.LVL34-1
 4291 0198 1A000000 		.4byte	.LVL37
 4292 019c 0300     		.2byte	0x3
 4293 019e 74       		.byte	0x74
 4294 019f 77       		.sleb128 -9
 4295 01a0 9F       		.byte	0x9f
 4296 01a1 1A000000 		.4byte	.LVL37
 4297 01a5 40000000 		.4byte	.LFE4
 4298 01a9 0400     		.2byte	0x4
 4299 01ab F3       		.byte	0xf3
 4300 01ac 01       		.uleb128 0x1
 4301 01ad 50       		.byte	0x50
 4302 01ae 9F       		.byte	0x9f
 4303 01af 00000000 		.4byte	0
 4304 01b3 00000000 		.4byte	0
 4305              	.LLST10:
 4306 01b7 0A000000 		.4byte	.LVL34
 4307 01bb 2B000000 		.4byte	.LVL39-1
 4308 01bf 0100     		.2byte	0x1
 4309 01c1 50       		.byte	0x50
 4310 01c2 00000000 		.4byte	0
 4311 01c6 00000000 		.4byte	0
 4312              	.LLST11:
 4313 01ca 0E000000 		.4byte	.LVL35
 4314 01ce 26000000 		.4byte	.LVL38
 4315 01d2 0100     		.2byte	0x1
 4316 01d4 51       		.byte	0x51
 4317 01d5 26000000 		.4byte	.LVL38
 4318 01d9 2B000000 		.4byte	.LVL39-1
 4319 01dd 0100     		.2byte	0x1
 4320 01df 53       		.byte	0x53
 4321 01e0 00000000 		.4byte	0
 4322 01e4 00000000 		.4byte	0
 4323              	.LLST12:
 4324 01e8 06000000 		.4byte	.LVL33
 4325 01ec 09000000 		.4byte	.LVL34-1
 4326 01f0 0100     		.2byte	0x1
 4327 01f2 50       		.byte	0x50
 4328 01f3 09000000 		.4byte	.LVL34-1
 4329 01f7 1A000000 		.4byte	.LVL37
 4330 01fb 0100     		.2byte	0x1
 4331 01fd 54       		.byte	0x54
 4332 01fe 1A000000 		.4byte	.LVL37
 4333 0202 40000000 		.4byte	.LFE4
 4334 0206 0600     		.2byte	0x6
 4335 0208 F3       		.byte	0xf3
 4336 0209 01       		.uleb128 0x1
 4337 020a 50       		.byte	0x50
 4338 020b 23       		.byte	0x23
 4339 020c 09       		.uleb128 0x9
 4340 020d 9F       		.byte	0x9f
 4341 020e 00000000 		.4byte	0
 4342 0212 00000000 		.4byte	0
 4343              	.LLST13:
 4344 0216 10000000 		.4byte	.LVL41
 4345 021a 23000000 		.4byte	.LVL46-1
 4346 021e 0100     		.2byte	0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 127


 4347 0220 51       		.byte	0x51
 4348 0221 00000000 		.4byte	0
 4349 0225 00000000 		.4byte	0
 4350              	.LLST14:
 4351 0229 12000000 		.4byte	.LVL42
 4352 022d 23000000 		.4byte	.LVL46-1
 4353 0231 0100     		.2byte	0x1
 4354 0233 50       		.byte	0x50
 4355 0234 00000000 		.4byte	0
 4356 0238 00000000 		.4byte	0
 4357              	.LLST16:
 4358 023c 0E000000 		.4byte	.LVL40
 4359 0240 14000000 		.4byte	.LVL43
 4360 0244 0100     		.2byte	0x1
 4361 0246 53       		.byte	0x53
 4362 0247 00000000 		.4byte	0
 4363 024b 00000000 		.4byte	0
 4364              	.LLST17:
 4365 024f 08000000 		.4byte	.LVL49
 4366 0253 82000000 		.4byte	.LVL65
 4367 0257 0100     		.2byte	0x1
 4368 0259 54       		.byte	0x54
 4369 025a 00000000 		.4byte	0
 4370 025e 00000000 		.4byte	0
 4371              	.LLST18:
 4372 0262 36000000 		.4byte	.LVL51
 4373 0266 60000000 		.4byte	.LVL60
 4374 026a 0100     		.2byte	0x1
 4375 026c 55       		.byte	0x55
 4376 026d 60000000 		.4byte	.LVL60
 4377 0271 6A000000 		.4byte	.LVL61
 4378 0275 0200     		.2byte	0x2
 4379 0277 76       		.byte	0x76
 4380 0278 00       		.sleb128 0
 4381 0279 00000000 		.4byte	0
 4382 027d 00000000 		.4byte	0
 4383              	.LLST19:
 4384 0281 44000000 		.4byte	.LVL53
 4385 0285 48000000 		.4byte	.LVL55
 4386 0289 0100     		.2byte	0x1
 4387 028b 53       		.byte	0x53
 4388 028c 48000000 		.4byte	.LVL55
 4389 0290 5E000000 		.4byte	.LVL59
 4390 0294 0200     		.2byte	0x2
 4391 0296 76       		.byte	0x76
 4392 0297 00       		.sleb128 0
 4393 0298 5E000000 		.4byte	.LVL59
 4394 029c 60000000 		.4byte	.LVL60
 4395 02a0 1000     		.2byte	0x10
 4396 02a2 75       		.byte	0x75
 4397 02a3 00       		.sleb128 0
 4398 02a4 11       		.byte	0x11
 4399 02a5 80D0FFFF 		.sleb128 -1073747968
 4399      7B
 4400 02aa 1A       		.byte	0x1a
 4401 02ab 0C       		.byte	0xc
 4402 02ac F0060040 		.4byte	0x400006f0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 128


 4403 02b0 21       		.byte	0x21
 4404 02b1 9F       		.byte	0x9f
 4405 02b2 60000000 		.4byte	.LVL60
 4406 02b6 6A000000 		.4byte	.LVL61
 4407 02ba 1100     		.2byte	0x11
 4408 02bc 76       		.byte	0x76
 4409 02bd 00       		.sleb128 0
 4410 02be 06       		.byte	0x6
 4411 02bf 11       		.byte	0x11
 4412 02c0 80D0FFFF 		.sleb128 -1073747968
 4412      7B
 4413 02c5 1A       		.byte	0x1a
 4414 02c6 0C       		.byte	0xc
 4415 02c7 F0060040 		.4byte	0x400006f0
 4416 02cb 21       		.byte	0x21
 4417 02cc 9F       		.byte	0x9f
 4418 02cd 00000000 		.4byte	0
 4419 02d1 00000000 		.4byte	0
 4420              	.LLST20:
 4421 02d5 46000000 		.4byte	.LVL54
 4422 02d9 4C000000 		.4byte	.LVL56
 4423 02dd 0400     		.2byte	0x4
 4424 02df 0A       		.byte	0xa
 4425 02e0 8070     		.2byte	0x7080
 4426 02e2 9F       		.byte	0x9f
 4427 02e3 4C000000 		.4byte	.LVL56
 4428 02e7 5C000000 		.4byte	.LVL58
 4429 02eb 0100     		.2byte	0x1
 4430 02ed 53       		.byte	0x53
 4431 02ee 00000000 		.4byte	0
 4432 02f2 00000000 		.4byte	0
 4433              	.LLST21:
 4434 02f6 00000000 		.4byte	.LVL67
 4435 02fa 0B000000 		.4byte	.LVL70-1
 4436 02fe 0100     		.2byte	0x1
 4437 0300 50       		.byte	0x50
 4438 0301 0B000000 		.4byte	.LVL70-1
 4439 0305 32000000 		.4byte	.LVL77
 4440 0309 0100     		.2byte	0x1
 4441 030b 54       		.byte	0x54
 4442 030c 32000000 		.4byte	.LVL77
 4443 0310 34000000 		.4byte	.LFE14
 4444 0314 0400     		.2byte	0x4
 4445 0316 F3       		.byte	0xf3
 4446 0317 01       		.uleb128 0x1
 4447 0318 50       		.byte	0x50
 4448 0319 9F       		.byte	0x9f
 4449 031a 00000000 		.4byte	0
 4450 031e 00000000 		.4byte	0
 4451              	.LLST22:
 4452 0322 10000000 		.4byte	.LVL71
 4453 0326 16000000 		.4byte	.LVL72
 4454 032a 0100     		.2byte	0x1
 4455 032c 53       		.byte	0x53
 4456 032d 18000000 		.4byte	.LVL73
 4457 0331 1E000000 		.4byte	.LVL74
 4458 0335 0100     		.2byte	0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 129


 4459 0337 52       		.byte	0x52
 4460 0338 1E000000 		.4byte	.LVL74
 4461 033c 31000000 		.4byte	.LVL76-1
 4462 0340 0100     		.2byte	0x1
 4463 0342 53       		.byte	0x53
 4464 0343 00000000 		.4byte	0
 4465 0347 00000000 		.4byte	0
 4466              	.LLST23:
 4467 034b 0C000000 		.4byte	.LVL70
 4468 034f 31000000 		.4byte	.LVL76-1
 4469 0353 0100     		.2byte	0x1
 4470 0355 50       		.byte	0x50
 4471 0356 00000000 		.4byte	0
 4472 035a 00000000 		.4byte	0
 4473              	.LLST24:
 4474 035e 06000000 		.4byte	.LVL68
 4475 0362 32000000 		.4byte	.LVL78
 4476 0366 0100     		.2byte	0x1
 4477 0368 55       		.byte	0x55
 4478 0369 00000000 		.4byte	0
 4479 036d 00000000 		.4byte	0
 4480              	.LLST25:
 4481 0371 08000000 		.4byte	.LVL69
 4482 0375 20000000 		.4byte	.LVL75
 4483 0379 0100     		.2byte	0x1
 4484 037b 56       		.byte	0x56
 4485 037c 00000000 		.4byte	0
 4486 0380 00000000 		.4byte	0
 4487              	.LLST26:
 4488 0384 0E000000 		.4byte	.LVL79
 4489 0388 2F000000 		.4byte	.LVL80-1
 4490 038c 0100     		.2byte	0x1
 4491 038e 50       		.byte	0x50
 4492 038f 00000000 		.4byte	0
 4493 0393 00000000 		.4byte	0
 4494              	.LLST27:
 4495 0397 00000000 		.4byte	.LVL84
 4496 039b 04000000 		.4byte	.LVL85
 4497 039f 0100     		.2byte	0x1
 4498 03a1 50       		.byte	0x50
 4499 03a2 04000000 		.4byte	.LVL85
 4500 03a6 24000000 		.4byte	.LFE12
 4501 03aa 0400     		.2byte	0x4
 4502 03ac F3       		.byte	0xf3
 4503 03ad 01       		.uleb128 0x1
 4504 03ae 50       		.byte	0x50
 4505 03af 9F       		.byte	0x9f
 4506 03b0 00000000 		.4byte	0
 4507 03b4 00000000 		.4byte	0
 4508              	.LLST28:
 4509 03b8 00000000 		.4byte	.LVL84
 4510 03bc 0C000000 		.4byte	.LVL86
 4511 03c0 0100     		.2byte	0x1
 4512 03c2 51       		.byte	0x51
 4513 03c3 0C000000 		.4byte	.LVL86
 4514 03c7 24000000 		.4byte	.LFE12
 4515 03cb 0400     		.2byte	0x4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 130


 4516 03cd F3       		.byte	0xf3
 4517 03ce 01       		.uleb128 0x1
 4518 03cf 51       		.byte	0x51
 4519 03d0 9F       		.byte	0x9f
 4520 03d1 00000000 		.4byte	0
 4521 03d5 00000000 		.4byte	0
 4522              	.LLST29:
 4523 03d9 00000000 		.4byte	.LVL88
 4524 03dd 06000000 		.4byte	.LVL89
 4525 03e1 0100     		.2byte	0x1
 4526 03e3 50       		.byte	0x50
 4527 03e4 06000000 		.4byte	.LVL89
 4528 03e8 3E000000 		.4byte	.LVL97
 4529 03ec 0100     		.2byte	0x1
 4530 03ee 54       		.byte	0x54
 4531 03ef 3E000000 		.4byte	.LVL97
 4532 03f3 40000000 		.4byte	.LFE15
 4533 03f7 0400     		.2byte	0x4
 4534 03f9 F3       		.byte	0xf3
 4535 03fa 01       		.uleb128 0x1
 4536 03fb 50       		.byte	0x50
 4537 03fc 9F       		.byte	0x9f
 4538 03fd 00000000 		.4byte	0
 4539 0401 00000000 		.4byte	0
 4540              	.LLST30:
 4541 0405 06000000 		.4byte	.LVL89
 4542 0409 17000000 		.4byte	.LVL91-1
 4543 040d 0100     		.2byte	0x1
 4544 040f 50       		.byte	0x50
 4545 0410 00000000 		.4byte	0
 4546 0414 00000000 		.4byte	0
 4547              	.LLST31:
 4548 0418 1C000000 		.4byte	.LVL92
 4549 041c 22000000 		.4byte	.LVL93
 4550 0420 0100     		.2byte	0x1
 4551 0422 53       		.byte	0x53
 4552 0423 24000000 		.4byte	.LVL94
 4553 0427 2A000000 		.4byte	.LVL95
 4554 042b 0100     		.2byte	0x1
 4555 042d 52       		.byte	0x52
 4556 042e 2A000000 		.4byte	.LVL95
 4557 0432 2F000000 		.4byte	.LVL96-1
 4558 0436 0100     		.2byte	0x1
 4559 0438 53       		.byte	0x53
 4560 0439 00000000 		.4byte	0
 4561 043d 00000000 		.4byte	0
 4562              	.LLST32:
 4563 0441 08000000 		.4byte	.LVL90
 4564 0445 3E000000 		.4byte	.LVL98
 4565 0449 0100     		.2byte	0x1
 4566 044b 55       		.byte	0x55
 4567 044c 00000000 		.4byte	0
 4568 0450 00000000 		.4byte	0
 4569              	.LLST33:
 4570 0454 18000000 		.4byte	.LVL91
 4571 0458 2F000000 		.4byte	.LVL96-1
 4572 045c 0100     		.2byte	0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 131


 4573 045e 50       		.byte	0x50
 4574 045f 00000000 		.4byte	0
 4575 0463 00000000 		.4byte	0
 4576              	.LLST34:
 4577 0467 00000000 		.4byte	.LVL100
 4578 046b 0C000000 		.4byte	.LVL102
 4579 046f 0100     		.2byte	0x1
 4580 0471 50       		.byte	0x50
 4581 0472 0C000000 		.4byte	.LVL102
 4582 0476 54000000 		.4byte	.LFE7
 4583 047a 0400     		.2byte	0x4
 4584 047c F3       		.byte	0xf3
 4585 047d 01       		.uleb128 0x1
 4586 047e 50       		.byte	0x50
 4587 047f 9F       		.byte	0x9f
 4588 0480 00000000 		.4byte	0
 4589 0484 00000000 		.4byte	0
 4590              	.LLST35:
 4591 0488 0A000000 		.4byte	.LVL101
 4592 048c 40000000 		.4byte	.LVL107
 4593 0490 0100     		.2byte	0x1
 4594 0492 55       		.byte	0x55
 4595 0493 40000000 		.4byte	.LVL107
 4596 0497 40000000 		.4byte	.LVL108
 4597 049b 0A00     		.2byte	0xa
 4598 049d F3       		.byte	0xf3
 4599 049e 01       		.uleb128 0x1
 4600 049f 50       		.byte	0x50
 4601 04a0 35       		.byte	0x35
 4602 04a1 24       		.byte	0x24
 4603 04a2 76       		.byte	0x76
 4604 04a3 00       		.sleb128 0
 4605 04a4 22       		.byte	0x22
 4606 04a5 23       		.byte	0x23
 4607 04a6 04       		.uleb128 0x4
 4608 04a7 00000000 		.4byte	0
 4609 04ab 00000000 		.4byte	0
 4610              	.LLST36:
 4611 04af 00000000 		.4byte	.LVL109
 4612 04b3 25000000 		.4byte	.LVL112-1
 4613 04b7 0100     		.2byte	0x1
 4614 04b9 50       		.byte	0x50
 4615 04ba 25000000 		.4byte	.LVL112-1
 4616 04be 6C000000 		.4byte	.LFE8
 4617 04c2 0400     		.2byte	0x4
 4618 04c4 F3       		.byte	0xf3
 4619 04c5 01       		.uleb128 0x1
 4620 04c6 50       		.byte	0x50
 4621 04c7 9F       		.byte	0x9f
 4622 04c8 00000000 		.4byte	0
 4623 04cc 00000000 		.4byte	0
 4624              	.LLST37:
 4625 04d0 00000000 		.4byte	.LVL109
 4626 04d4 0C000000 		.4byte	.LVL111
 4627 04d8 0100     		.2byte	0x1
 4628 04da 51       		.byte	0x51
 4629 04db 0C000000 		.4byte	.LVL111
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 132


 4630 04df 6C000000 		.4byte	.LFE8
 4631 04e3 0400     		.2byte	0x4
 4632 04e5 F3       		.byte	0xf3
 4633 04e6 01       		.uleb128 0x1
 4634 04e7 51       		.byte	0x51
 4635 04e8 9F       		.byte	0x9f
 4636 04e9 00000000 		.4byte	0
 4637 04ed 00000000 		.4byte	0
 4638              	.LLST38:
 4639 04f1 0A000000 		.4byte	.LVL110
 4640 04f5 50000000 		.4byte	.LVL116
 4641 04f9 0100     		.2byte	0x1
 4642 04fb 55       		.byte	0x55
 4643 04fc 00000000 		.4byte	0
 4644 0500 00000000 		.4byte	0
 4645              	.LLST39:
 4646 0504 00000000 		.4byte	.LVL117
 4647 0508 04000000 		.4byte	.LVL118
 4648 050c 0100     		.2byte	0x1
 4649 050e 50       		.byte	0x50
 4650 050f 04000000 		.4byte	.LVL118
 4651 0513 24000000 		.4byte	.LFE13
 4652 0517 0400     		.2byte	0x4
 4653 0519 F3       		.byte	0xf3
 4654 051a 01       		.uleb128 0x1
 4655 051b 50       		.byte	0x50
 4656 051c 9F       		.byte	0x9f
 4657 051d 00000000 		.4byte	0
 4658 0521 00000000 		.4byte	0
 4659              	.LLST40:
 4660 0525 00000000 		.4byte	.LVL117
 4661 0529 0C000000 		.4byte	.LVL119
 4662 052d 0100     		.2byte	0x1
 4663 052f 51       		.byte	0x51
 4664 0530 0C000000 		.4byte	.LVL119
 4665 0534 24000000 		.4byte	.LFE13
 4666 0538 0400     		.2byte	0x4
 4667 053a F3       		.byte	0xf3
 4668 053b 01       		.uleb128 0x1
 4669 053c 51       		.byte	0x51
 4670 053d 9F       		.byte	0x9f
 4671 053e 00000000 		.4byte	0
 4672 0542 00000000 		.4byte	0
 4673              	.LLST41:
 4674 0546 00000000 		.4byte	.LVL121
 4675 054a 22000000 		.4byte	.LVL127
 4676 054e 0100     		.2byte	0x1
 4677 0550 50       		.byte	0x50
 4678 0551 22000000 		.4byte	.LVL127
 4679 0555 C4000000 		.4byte	.LVL144
 4680 0559 0100     		.2byte	0x1
 4681 055b 57       		.byte	0x57
 4682 055c C4000000 		.4byte	.LVL144
 4683 0560 EC000000 		.4byte	.LFE19
 4684 0564 0400     		.2byte	0x4
 4685 0566 F3       		.byte	0xf3
 4686 0567 01       		.uleb128 0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 133


 4687 0568 50       		.byte	0x50
 4688 0569 9F       		.byte	0x9f
 4689 056a 00000000 		.4byte	0
 4690 056e 00000000 		.4byte	0
 4691              	.LLST42:
 4692 0572 00000000 		.4byte	.LVL121
 4693 0576 16000000 		.4byte	.LVL124
 4694 057a 0100     		.2byte	0x1
 4695 057c 51       		.byte	0x51
 4696 057d 16000000 		.4byte	.LVL124
 4697 0581 C4000000 		.4byte	.LVL143
 4698 0585 0100     		.2byte	0x1
 4699 0587 56       		.byte	0x56
 4700 0588 C4000000 		.4byte	.LVL143
 4701 058c EC000000 		.4byte	.LFE19
 4702 0590 0400     		.2byte	0x4
 4703 0592 F3       		.byte	0xf3
 4704 0593 01       		.uleb128 0x1
 4705 0594 51       		.byte	0x51
 4706 0595 9F       		.byte	0x9f
 4707 0596 00000000 		.4byte	0
 4708 059a 00000000 		.4byte	0
 4709              	.LLST43:
 4710 059e 00000000 		.4byte	.LVL121
 4711 05a2 10000000 		.4byte	.LVL123
 4712 05a6 0100     		.2byte	0x1
 4713 05a8 52       		.byte	0x52
 4714 05a9 10000000 		.4byte	.LVL123
 4715 05ad C4000000 		.4byte	.LVL145
 4716 05b1 0100     		.2byte	0x1
 4717 05b3 58       		.byte	0x58
 4718 05b4 C4000000 		.4byte	.LVL145
 4719 05b8 EC000000 		.4byte	.LFE19
 4720 05bc 0400     		.2byte	0x4
 4721 05be F3       		.byte	0xf3
 4722 05bf 01       		.uleb128 0x1
 4723 05c0 52       		.byte	0x52
 4724 05c1 9F       		.byte	0x9f
 4725 05c2 00000000 		.4byte	0
 4726 05c6 00000000 		.4byte	0
 4727              	.LLST44:
 4728 05ca 0E000000 		.4byte	.LVL122
 4729 05ce 38000000 		.4byte	.LVL130
 4730 05d2 0400     		.2byte	0x4
 4731 05d4 0A       		.byte	0xa
 4732 05d5 0001     		.2byte	0x100
 4733 05d7 9F       		.byte	0x9f
 4734 05d8 38000000 		.4byte	.LVL130
 4735 05dc C4000000 		.4byte	.LVL142
 4736 05e0 0100     		.2byte	0x1
 4737 05e2 55       		.byte	0x55
 4738 05e3 00000000 		.4byte	0
 4739 05e7 00000000 		.4byte	0
 4740              	.LLST45:
 4741 05eb 54000000 		.4byte	.LVL133
 4742 05ef 5A000000 		.4byte	.LVL134
 4743 05f3 0400     		.2byte	0x4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 134


 4744 05f5 0A       		.byte	0xa
 4745 05f6 8070     		.2byte	0x7080
 4746 05f8 9F       		.byte	0x9f
 4747 05f9 5A000000 		.4byte	.LVL134
 4748 05fd 6A000000 		.4byte	.LVL136
 4749 0601 0100     		.2byte	0x1
 4750 0603 53       		.byte	0x53
 4751 0604 00000000 		.4byte	0
 4752 0608 00000000 		.4byte	0
 4753              	.LLST46:
 4754 060c 0E000000 		.4byte	.LVL122
 4755 0610 38000000 		.4byte	.LVL130
 4756 0614 0200     		.2byte	0x2
 4757 0616 30       		.byte	0x30
 4758 0617 9F       		.byte	0x9f
 4759 0618 38000000 		.4byte	.LVL130
 4760 061c C4000000 		.4byte	.LVL141
 4761 0620 0100     		.2byte	0x1
 4762 0622 54       		.byte	0x54
 4763 0623 00000000 		.4byte	0
 4764 0627 00000000 		.4byte	0
 4765              	.LLST47:
 4766 062b 1C000000 		.4byte	.LVL125
 4767 062f 1E000000 		.4byte	.LVL126
 4768 0633 0100     		.2byte	0x1
 4769 0635 53       		.byte	0x53
 4770 0636 1E000000 		.4byte	.LVL126
 4771 063a EC000000 		.4byte	.LFE19
 4772 063e 0200     		.2byte	0x2
 4773 0640 91       		.byte	0x91
 4774 0641 64       		.sleb128 -28
 4775 0642 00000000 		.4byte	0
 4776 0646 00000000 		.4byte	0
 4777              	.LLST48:
 4778 064a 00000000 		.4byte	.LVL146
 4779 064e 1E000000 		.4byte	.LVL149
 4780 0652 0100     		.2byte	0x1
 4781 0654 50       		.byte	0x50
 4782 0655 1E000000 		.4byte	.LVL149
 4783 0659 E8000000 		.4byte	.LVL164
 4784 065d 0100     		.2byte	0x1
 4785 065f 54       		.byte	0x54
 4786 0660 E8000000 		.4byte	.LVL164
 4787 0664 08010000 		.4byte	.LFE20
 4788 0668 0400     		.2byte	0x4
 4789 066a F3       		.byte	0xf3
 4790 066b 01       		.uleb128 0x1
 4791 066c 50       		.byte	0x50
 4792 066d 9F       		.byte	0x9f
 4793 066e 00000000 		.4byte	0
 4794 0672 00000000 		.4byte	0
 4795              	.LLST49:
 4796 0676 00000000 		.4byte	.LVL146
 4797 067a 26000000 		.4byte	.LVL152
 4798 067e 0100     		.2byte	0x1
 4799 0680 51       		.byte	0x51
 4800 0681 26000000 		.4byte	.LVL152
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 135


 4801 0685 E8000000 		.4byte	.LVL167
 4802 0689 0100     		.2byte	0x1
 4803 068b 59       		.byte	0x59
 4804 068c E8000000 		.4byte	.LVL167
 4805 0690 08010000 		.4byte	.LFE20
 4806 0694 0400     		.2byte	0x4
 4807 0696 F3       		.byte	0xf3
 4808 0697 01       		.uleb128 0x1
 4809 0698 51       		.byte	0x51
 4810 0699 9F       		.byte	0x9f
 4811 069a 00000000 		.4byte	0
 4812 069e 00000000 		.4byte	0
 4813              	.LLST50:
 4814 06a2 22000000 		.4byte	.LVL150
 4815 06a6 24000000 		.4byte	.LVL151
 4816 06aa 0100     		.2byte	0x1
 4817 06ac 50       		.byte	0x50
 4818 06ad 24000000 		.4byte	.LVL151
 4819 06b1 29000000 		.4byte	.LVL153-1
 4820 06b5 0800     		.2byte	0x8
 4821 06b7 75       		.byte	0x75
 4822 06b8 00       		.sleb128 0
 4823 06b9 73       		.byte	0x73
 4824 06ba 00       		.sleb128 0
 4825 06bb 24       		.byte	0x24
 4826 06bc 31       		.byte	0x31
 4827 06bd 1C       		.byte	0x1c
 4828 06be 9F       		.byte	0x9f
 4829 06bf 2C000000 		.4byte	.LVL154
 4830 06c3 34000000 		.4byte	.LVL155
 4831 06c7 0100     		.2byte	0x1
 4832 06c9 50       		.byte	0x50
 4833 06ca 34000000 		.4byte	.LVL155
 4834 06ce 08010000 		.4byte	.LFE20
 4835 06d2 0200     		.2byte	0x2
 4836 06d4 91       		.byte	0x91
 4837 06d5 5C       		.sleb128 -36
 4838 06d6 00000000 		.4byte	0
 4839 06da 00000000 		.4byte	0
 4840              	.LLST51:
 4841 06de 0C000000 		.4byte	.LVL147
 4842 06e2 4C000000 		.4byte	.LVL158
 4843 06e6 0200     		.2byte	0x2
 4844 06e8 30       		.byte	0x30
 4845 06e9 9F       		.byte	0x9f
 4846 06ea 4C000000 		.4byte	.LVL158
 4847 06ee E8000000 		.4byte	.LVL165
 4848 06f2 0100     		.2byte	0x1
 4849 06f4 55       		.byte	0x55
 4850 06f5 E8000000 		.4byte	.LVL165
 4851 06f9 08010000 		.4byte	.LFE20
 4852 06fd 0100     		.2byte	0x1
 4853 06ff 50       		.byte	0x50
 4854 0700 00000000 		.4byte	0
 4855 0704 00000000 		.4byte	0
 4856              	.LLST52:
 4857 0708 14000000 		.4byte	.LVL148
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 136


 4858 070c E8000000 		.4byte	.LVL166
 4859 0710 0100     		.2byte	0x1
 4860 0712 57       		.byte	0x57
 4861 0713 00000000 		.4byte	0
 4862 0717 00000000 		.4byte	0
 4863              	.LLST53:
 4864 071b 3C000000 		.4byte	.LVL157
 4865 071f 86000000 		.4byte	.LVL162
 4866 0723 0100     		.2byte	0x1
 4867 0725 56       		.byte	0x56
 4868 0726 86000000 		.4byte	.LVL162
 4869 072a E8000000 		.4byte	.LVL166
 4870 072e 0300     		.2byte	0x3
 4871 0730 77       		.byte	0x77
 4872 0731 09       		.sleb128 9
 4873 0732 9F       		.byte	0x9f
 4874 0733 00000000 		.4byte	0
 4875 0737 00000000 		.4byte	0
 4876              		.section	.debug_aranges,"",%progbits
 4877 0000 BC000000 		.4byte	0xbc
 4878 0004 0200     		.2byte	0x2
 4879 0006 00000000 		.4byte	.Ldebug_info0
 4880 000a 04       		.byte	0x4
 4881 000b 00       		.byte	0
 4882 000c 0000     		.2byte	0
 4883 000e 0000     		.2byte	0
 4884 0010 00000000 		.4byte	.LFB1
 4885 0014 10000000 		.4byte	.LFE1-.LFB1
 4886 0018 00000000 		.4byte	.LFB16
 4887 001c 1C000000 		.4byte	.LFE16-.LFB16
 4888 0020 00000000 		.4byte	.LFB17
 4889 0024 10000000 		.4byte	.LFE17-.LFB17
 4890 0028 00000000 		.4byte	.LFB18
 4891 002c 42000000 		.4byte	.LFE18-.LFB18
 4892 0030 00000000 		.4byte	.LFB0
 4893 0034 1C000000 		.4byte	.LFE0-.LFB0
 4894 0038 00000000 		.4byte	.LFB2
 4895 003c 3C000000 		.4byte	.LFE2-.LFB2
 4896 0040 00000000 		.4byte	.LFB4
 4897 0044 40000000 		.4byte	.LFE4-.LFB4
 4898 0048 00000000 		.4byte	.LFB5
 4899 004c 30000000 		.4byte	.LFE5-.LFB5
 4900 0050 00000000 		.4byte	.LFB6
 4901 0054 14000000 		.4byte	.LFE6-.LFB6
 4902 0058 00000000 		.4byte	.LFB9
 4903 005c B0000000 		.4byte	.LFE9-.LFB9
 4904 0060 00000000 		.4byte	.LFB10
 4905 0064 1C000000 		.4byte	.LFE10-.LFB10
 4906 0068 00000000 		.4byte	.LFB14
 4907 006c 34000000 		.4byte	.LFE14-.LFB14
 4908 0070 00000000 		.4byte	.LFB11
 4909 0074 70000000 		.4byte	.LFE11-.LFB11
 4910 0078 00000000 		.4byte	.LFB12
 4911 007c 24000000 		.4byte	.LFE12-.LFB12
 4912 0080 00000000 		.4byte	.LFB15
 4913 0084 40000000 		.4byte	.LFE15-.LFB15
 4914 0088 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 137


 4915 008c 24000000 		.4byte	.LFE3-.LFB3
 4916 0090 00000000 		.4byte	.LFB7
 4917 0094 54000000 		.4byte	.LFE7-.LFB7
 4918 0098 00000000 		.4byte	.LFB8
 4919 009c 6C000000 		.4byte	.LFE8-.LFB8
 4920 00a0 00000000 		.4byte	.LFB13
 4921 00a4 24000000 		.4byte	.LFE13-.LFB13
 4922 00a8 00000000 		.4byte	.LFB19
 4923 00ac EC000000 		.4byte	.LFE19-.LFB19
 4924 00b0 00000000 		.4byte	.LFB20
 4925 00b4 08010000 		.4byte	.LFE20-.LFB20
 4926 00b8 00000000 		.4byte	0
 4927 00bc 00000000 		.4byte	0
 4928              		.section	.debug_ranges,"",%progbits
 4929              	.Ldebug_ranges0:
 4930 0000 00000000 		.4byte	.LFB1
 4931 0004 10000000 		.4byte	.LFE1
 4932 0008 00000000 		.4byte	.LFB16
 4933 000c 1C000000 		.4byte	.LFE16
 4934 0010 00000000 		.4byte	.LFB17
 4935 0014 10000000 		.4byte	.LFE17
 4936 0018 00000000 		.4byte	.LFB18
 4937 001c 42000000 		.4byte	.LFE18
 4938 0020 00000000 		.4byte	.LFB0
 4939 0024 1C000000 		.4byte	.LFE0
 4940 0028 00000000 		.4byte	.LFB2
 4941 002c 3C000000 		.4byte	.LFE2
 4942 0030 00000000 		.4byte	.LFB4
 4943 0034 40000000 		.4byte	.LFE4
 4944 0038 00000000 		.4byte	.LFB5
 4945 003c 30000000 		.4byte	.LFE5
 4946 0040 00000000 		.4byte	.LFB6
 4947 0044 14000000 		.4byte	.LFE6
 4948 0048 00000000 		.4byte	.LFB9
 4949 004c B0000000 		.4byte	.LFE9
 4950 0050 00000000 		.4byte	.LFB10
 4951 0054 1C000000 		.4byte	.LFE10
 4952 0058 00000000 		.4byte	.LFB14
 4953 005c 34000000 		.4byte	.LFE14
 4954 0060 00000000 		.4byte	.LFB11
 4955 0064 70000000 		.4byte	.LFE11
 4956 0068 00000000 		.4byte	.LFB12
 4957 006c 24000000 		.4byte	.LFE12
 4958 0070 00000000 		.4byte	.LFB15
 4959 0074 40000000 		.4byte	.LFE15
 4960 0078 00000000 		.4byte	.LFB3
 4961 007c 24000000 		.4byte	.LFE3
 4962 0080 00000000 		.4byte	.LFB7
 4963 0084 54000000 		.4byte	.LFE7
 4964 0088 00000000 		.4byte	.LFB8
 4965 008c 6C000000 		.4byte	.LFE8
 4966 0090 00000000 		.4byte	.LFB13
 4967 0094 24000000 		.4byte	.LFE13
 4968 0098 00000000 		.4byte	.LFB19
 4969 009c EC000000 		.4byte	.LFE19
 4970 00a0 00000000 		.4byte	.LFB20
 4971 00a4 08010000 		.4byte	.LFE20
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 138


 4972 00a8 00000000 		.4byte	0
 4973 00ac 00000000 		.4byte	0
 4974              		.section	.debug_line,"",%progbits
 4975              	.Ldebug_line0:
 4976 0000 91030000 		.section	.debug_str,"MS",%progbits,1
 4976      0200E200 
 4976      00000201 
 4976      FB0E0D00 
 4976      01010101 
 4977              	.LASF105:
 4978 0000 43617053 		.ascii	"CapSense_1_SsCSDConfigIDACs\000"
 4978      656E7365 
 4978      5F315F53 
 4978      73435344 
 4978      436F6E66 
 4979              	.LASF150:
 4980 001c 72617744 		.ascii	"rawData0\000"
 4980      61746130 
 4980      00
 4981              	.LASF132:
 4982 0025 736E7341 		.ascii	"snsAddrPtr\000"
 4982      64647250 
 4982      747200
 4983              	.LASF101:
 4984 0030 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4984      656E7365 
 4984      5F315F46 
 4984      4C415348 
 4984      5F57445F 
 4985              	.LASF158:
 4986 004b 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4986      656E7365 
 4986      5F315F63 
 4986      75725261 
 4986      6D536E73 
 4987              	.LASF76:
 4988 0063 736E7254 		.ascii	"snrTestWidgetId\000"
 4988      65737457 
 4988      69646765 
 4988      74496400 
 4989              	.LASF119:
 4990 0073 43617053 		.ascii	"CapSense_1_SsCSDSetUpIdacs\000"
 4990      656E7365 
 4990      5F315F53 
 4990      73435344 
 4990      53657455 
 4991              	.LASF8:
 4992 008e 756E7369 		.ascii	"unsigned int\000"
 4992      676E6564 
 4992      20696E74 
 4992      00
 4993              	.LASF67:
 4994 009b 7363616E 		.ascii	"scanCounter\000"
 4994      436F756E 
 4994      74657200 
 4995              	.LASF116:
 4996 00a7 43617053 		.ascii	"CapSense_1_SsCSDSetModeSnsClockDivider\000"
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 139


 4996      656E7365 
 4996      5F315F53 
 4996      73435344 
 4996      5365744D 
 4997              	.LASF65:
 4998 00ce 6877436C 		.ascii	"hwClock\000"
 4998      6F636B00 
 4999              	.LASF160:
 5000 00d6 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 5000      656E7365 
 5000      5F315F63 
 5000      7572536E 
 5000      73494F50 
 5001              	.LASF120:
 5002 00ed 696E7465 		.ascii	"interruptState\000"
 5002      72727570 
 5002      74537461 
 5002      746500
 5003              	.LASF143:
 5004 00fc 43617053 		.ascii	"CapSense_1_CSDSetupWidgetExt\000"
 5004      656E7365 
 5004      5F315F43 
 5004      53445365 
 5004      74757057 
 5005              	.LASF131:
 5006 0119 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 5006      656E7365 
 5006      5F315F43 
 5006      5344436F 
 5006      6E6E6563 
 5007              	.LASF135:
 5008 0132 70696E48 		.ascii	"pinHSIOMShift\000"
 5008      53494F4D 
 5008      53686966 
 5008      7400
 5009              	.LASF141:
 5010 0140 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 5010      656E7365 
 5010      5F315F53 
 5010      73435344 
 5010      456C6563 
 5011              	.LASF137:
 5012 015f 43617053 		.ascii	"CapSense_1_SsCSDConnectSensorExt\000"
 5012      656E7365 
 5012      5F315F53 
 5012      73435344 
 5012      436F6E6E 
 5013              	.LASF159:
 5014 0180 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 5014      656E7365 
 5014      5F315F73 
 5014      63616E46 
 5014      72657149 
 5015              	.LASF134:
 5016 0199 70696E4D 		.ascii	"pinModeShift\000"
 5016      6F646553 
 5016      68696674 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 140


 5016      00
 5017              	.LASF118:
 5018 01a6 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 5018      656E7365 
 5018      5F315F53 
 5018      73435344 
 5018      496E6974 
 5019              	.LASF55:
 5020 01c1 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 5020      656E7365 
 5020      5F315F52 
 5020      414D5F57 
 5020      445F4C49 
 5021              	.LASF152:
 5022 01df 43617053 		.ascii	"CapSense_1_counterResolution\000"
 5022      656E7365 
 5022      5F315F63 
 5022      6F756E74 
 5022      65725265 
 5023              	.LASF139:
 5024 01fc 73656E73 		.ascii	"sensorId\000"
 5024      6F724964 
 5024      00
 5025              	.LASF107:
 5026 0205 70747257 		.ascii	"ptrWdgt\000"
 5026      64677400 
 5027              	.LASF127:
 5028 020d 43617053 		.ascii	"CapSense_1_SsCSDTriggerScan\000"
 5028      656E7365 
 5028      5F315F53 
 5028      73435344 
 5028      54726967 
 5029              	.LASF12:
 5030 0229 666C6F61 		.ascii	"float\000"
 5030      7400
 5031              	.LASF89:
 5032 022f 73686966 		.ascii	"shift\000"
 5032      7400
 5033              	.LASF123:
 5034 0235 736E7343 		.ascii	"snsClkSrc\000"
 5034      6C6B5372 
 5034      6300
 5035              	.LASF126:
 5036 023f 77617463 		.ascii	"watchdogCounter\000"
 5036      68646F67 
 5036      436F756E 
 5036      74657200 
 5037              	.LASF75:
 5038 024f 736E734C 		.ascii	"snsList\000"
 5038      69737400 
 5039              	.LASF7:
 5040 0257 6C6F6E67 		.ascii	"long long unsigned int\000"
 5040      206C6F6E 
 5040      6720756E 
 5040      7369676E 
 5040      65642069 
 5041              	.LASF77:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 141


 5042 026e 736E7254 		.ascii	"snrTestSensorId\000"
 5042      65737453 
 5042      656E736F 
 5042      72496400 
 5043              	.LASF100:
 5044 027e 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 5044      4E6F6973 
 5044      65456E76 
 5044      6C7000
 5045              	.LASF149:
 5046 028d 63616C4D 		.ascii	"calMask\000"
 5046      61736B00 
 5047              	.LASF98:
 5048 0295 77646774 		.ascii	"wdgtType\000"
 5048      54797065 
 5048      00
 5049              	.LASF18:
 5050 029e 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 5050      656E7365 
 5050      5F315F4C 
 5050      4F575F42 
 5050      534C4E5F 
 5051              	.LASF162:
 5052 02bb 43617053 		.ascii	"CapSense_1_calibratedIdac\000"
 5052      656E7365 
 5052      5F315F63 
 5052      616C6962 
 5052      72617465 
 5053              	.LASF173:
 5054 02d5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5054      43313120 
 5054      352E342E 
 5054      31203230 
 5054      31363036 
 5055 0308 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5055      20726576 
 5055      6973696F 
 5055      6E203233 
 5055      37373135 
 5056 033b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5056      66756E63 
 5056      74696F6E 
 5056      2D736563 
 5056      74696F6E 
 5057              	.LASF133:
 5058 0363 6E657752 		.ascii	"newRegisterValue\000"
 5058      65676973 
 5058      74657256 
 5058      616C7565 
 5058      00
 5059              	.LASF73:
 5060 0374 6D6F6443 		.ascii	"modCsdClk\000"
 5060      7364436C 
 5060      6B00
 5061              	.LASF171:
 5062 037e 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 5062      656E7365 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 142


 5062      5F315F49 
 5062      53525F53 
 5062      74617274 
 5063              	.LASF166:
 5064 0395 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5064      74657243 
 5064      72697469 
 5064      63616C53 
 5064      65637469 
 5065              	.LASF151:
 5066 03ac 74617267 		.ascii	"target\000"
 5066      657400
 5067              	.LASF83:
 5068 03b3 64725074 		.ascii	"drPtr\000"
 5068      7200
 5069              	.LASF43:
 5070 03b9 73696750 		.ascii	"sigPFC\000"
 5070      464300
 5071              	.LASF174:
 5072 03c0 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.c"
 5072      72617465 
 5072      645F536F 
 5072      75726365 
 5072      5C50536F 
 5073 03f1 00       		.ascii	"\000"
 5074              	.LASF30:
 5075 03f2 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 5075      656E7365 
 5075      5F315F53 
 5075      454E5345 
 5075      5F4D4554 
 5076              	.LASF108:
 5077 0411 7261774C 		.ascii	"rawLevel\000"
 5077      6576656C 
 5077      00
 5078              	.LASF175:
 5079 041a 443A5C53 		.ascii	"D:\\SMD Innovation\\4_1\\Design01.cydsn\000"
 5079      4D442049 
 5079      6E6E6F76 
 5079      6174696F 
 5079      6E5C345F 
 5080              	.LASF38:
 5081 043f 6C6F7742 		.ascii	"lowBslnRst\000"
 5081      736C6E52 
 5081      737400
 5082              	.LASF156:
 5083 044a 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5083      656E7365 
 5083      5F315F77 
 5083      69646765 
 5083      74496E64 
 5084              	.LASF172:
 5085 0461 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 5085      656E7365 
 5085      5F315F53 
 5085      73537769 
 5085      74636853 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 143


 5086              	.LASF168:
 5087 0480 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 5087      656E7365 
 5087      5F315F53 
 5087      73536574 
 5087      4D6F6443 
 5088              	.LASF97:
 5089 04a3 746F7461 		.ascii	"totalNumSns\000"
 5089      6C4E756D 
 5089      536E7300 
 5090              	.LASF113:
 5091 04af 6D696E52 		.ascii	"minRawLevel\000"
 5091      61774C65 
 5091      76656C00 
 5092              	.LASF26:
 5093 04bb 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 5093      5453454E 
 5093      53455F43 
 5093      53445F4E 
 5093      4F495345 
 5094              	.LASF176:
 5095 04e0 43617053 		.ascii	"CapSense_1_SsCSDCmodPrecharge\000"
 5095      656E7365 
 5095      5F315F53 
 5095      73435344 
 5095      436D6F64 
 5096              	.LASF34:
 5097 04fe 6E6F6973 		.ascii	"noiseTh\000"
 5097      65546800 
 5098              	.LASF14:
 5099 0506 63686172 		.ascii	"char\000"
 5099      00
 5100              	.LASF167:
 5101 050b 43794578 		.ascii	"CyExitCriticalSection\000"
 5101      69744372 
 5101      69746963 
 5101      616C5365 
 5101      6374696F 
 5102              	.LASF169:
 5103 0521 43794465 		.ascii	"CyDelayCycles\000"
 5103      6C617943 
 5103      79636C65 
 5103      7300
 5104              	.LASF87:
 5105 052f 6873696F 		.ascii	"hsiomShift\000"
 5105      6D536869 
 5105      667400
 5106              	.LASF10:
 5107 053a 75696E74 		.ascii	"uint16\000"
 5107      313600
 5108              	.LASF32:
 5109 0541 7265736F 		.ascii	"resolution\000"
 5109      6C757469 
 5109      6F6E00
 5110              	.LASF80:
 5111 054c 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 5111      656E7365 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 144


 5111      5F315F52 
 5111      414D5F53 
 5111      54525543 
 5112              	.LASF68:
 5113 0562 73746174 		.ascii	"status\000"
 5113      757300
 5114              	.LASF161:
 5115 0569 43617053 		.ascii	"CapSense_1_configCsd\000"
 5115      656E7365 
 5115      5F315F63 
 5115      6F6E6669 
 5115      67437364 
 5116              	.LASF60:
 5117 057e 69646163 		.ascii	"idacComp\000"
 5117      436F6D70 
 5117      00
 5118              	.LASF153:
 5119 0587 43617053 		.ascii	"CapSense_1_eleCsdDisconnectFlag\000"
 5119      656E7365 
 5119      5F315F65 
 5119      6C654373 
 5119      64446973 
 5120              	.LASF82:
 5121 05a7 70635074 		.ascii	"pcPtr\000"
 5121      7200
 5122              	.LASF6:
 5123 05ad 6C6F6E67 		.ascii	"long long int\000"
 5123      206C6F6E 
 5123      6720696E 
 5123      7400
 5124              	.LASF17:
 5125 05bb 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 5125      656E7365 
 5125      5F315F54 
 5125      48524553 
 5125      484F4C44 
 5126              	.LASF128:
 5127 05d5 43617053 		.ascii	"CapSense_1_SsCSDClockRestart\000"
 5127      656E7365 
 5127      5F315F53 
 5127      73435344 
 5127      436C6F63 
 5128              	.LASF37:
 5129 05f2 6F6E4465 		.ascii	"onDebounce\000"
 5129      626F756E 
 5129      636500
 5130              	.LASF122:
 5131 05fd 43617053 		.ascii	"CapSense_1_SsCSDConfigClock\000"
 5131      656E7365 
 5131      5F315F53 
 5131      73435344 
 5131      436F6E66 
 5132              	.LASF111:
 5133 0619 63616C69 		.ascii	"calibrateStatus\000"
 5133      62726174 
 5133      65537461 
 5133      74757300 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 145


 5134              	.LASF74:
 5135 0629 77646774 		.ascii	"wdgtList\000"
 5135      4C697374 
 5135      00
 5136              	.LASF91:
 5137 0632 70747232 		.ascii	"ptr2SnsFlash\000"
 5137      536E7346 
 5137      6C617368 
 5137      00
 5138              	.LASF79:
 5139 063f 736E7254 		.ascii	"snrTestRawCount\000"
 5139      65737452 
 5139      6177436F 
 5139      756E7400 
 5140              	.LASF106:
 5141 064f 43617053 		.ascii	"CapSense_1_SsCSDRestoreIdacMode\000"
 5141      656E7365 
 5141      5F315F53 
 5141      73435344 
 5141      52657374 
 5142              	.LASF35:
 5143 066f 6E4E6F69 		.ascii	"nNoiseTh\000"
 5143      73655468 
 5143      00
 5144              	.LASF72:
 5145 0678 63736430 		.ascii	"csd0Config\000"
 5145      436F6E66 
 5145      696700
 5146              	.LASF104:
 5147 0683 6C6F6E67 		.ascii	"long double\000"
 5147      20646F75 
 5147      626C6500 
 5148              	.LASF45:
 5149 068f 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 5149      656E7365 
 5149      5F315F52 
 5149      414D5F57 
 5149      445F4241 
 5150              	.LASF81:
 5151 06ad 6873696F 		.ascii	"hsiomPtr\000"
 5151      6D507472 
 5151      00
 5152              	.LASF11:
 5153 06b6 75696E74 		.ascii	"uint32\000"
 5153      333200
 5154              	.LASF36:
 5155 06bd 68797374 		.ascii	"hysteresis\000"
 5155      65726573 
 5155      697300
 5156              	.LASF94:
 5157 06c8 70747232 		.ascii	"ptr2FltrHistory\000"
 5157      466C7472 
 5157      48697374 
 5157      6F727900 
 5158              	.LASF27:
 5159 06d8 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 5159      656E7365 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 146


 5159      5F315F55 
 5159      4E444546 
 5159      494E4544 
 5160              	.LASF62:
 5161 06ef 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 5161      656E7365 
 5161      5F315F52 
 5161      414D5F53 
 5161      4E535F4C 
 5162              	.LASF86:
 5163 070e 6D61736B 		.ascii	"mask\000"
 5163      00
 5164              	.LASF114:
 5165 0713 6D617852 		.ascii	"maxRawLevel\000"
 5165      61774C65 
 5165      76656C00 
 5166              	.LASF154:
 5167 071f 43617053 		.ascii	"CapSense_1_dsRam\000"
 5167      656E7365 
 5167      5F315F64 
 5167      7352616D 
 5167      00
 5168              	.LASF31:
 5169 0730 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 5169      656E7365 
 5169      5F315F53 
 5169      454E5345 
 5169      5F4D4554 
 5170              	.LASF16:
 5171 074e 72656733 		.ascii	"reg32\000"
 5171      3200
 5172              	.LASF78:
 5173 0754 736E7254 		.ascii	"snrTestScanCounter\000"
 5173      65737453 
 5173      63616E43 
 5173      6F756E74 
 5173      657200
 5174              	.LASF63:
 5175 0767 636F6E66 		.ascii	"configId\000"
 5175      69674964 
 5175      00
 5176              	.LASF93:
 5177 0770 70747232 		.ascii	"ptr2SnsRam\000"
 5177      536E7352 
 5177      616D00
 5178              	.LASF130:
 5179 077b 43617053 		.ascii	"CapSense_1_CSDScanExt\000"
 5179      656E7365 
 5179      5F315F43 
 5179      53445363 
 5179      616E4578 
 5180              	.LASF103:
 5181 0791 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 5181      656E7365 
 5181      5F315F46 
 5181      4C415348 
 5181      5F535452 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 147


 5182              	.LASF71:
 5183 07a9 736E7353 		.ascii	"snsStatus\000"
 5183      74617475 
 5183      7300
 5184              	.LASF41:
 5185 07b3 736E7343 		.ascii	"snsClkSource\000"
 5185      6C6B536F 
 5185      75726365 
 5185      00
 5186              	.LASF109:
 5187 07c0 72617744 		.ascii	"rawData\000"
 5187      61746100 
 5188              	.LASF44:
 5189 07c8 73697A65 		.ascii	"sizetype\000"
 5189      74797065 
 5189      00
 5190              	.LASF140:
 5191 07d1 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 5191      656E7365 
 5191      5F315F43 
 5191      53444469 
 5191      73636F6E 
 5192              	.LASF2:
 5193 07ed 73686F72 		.ascii	"short int\000"
 5193      7420696E 
 5193      7400
 5194              	.LASF4:
 5195 07f7 6C6F6E67 		.ascii	"long int\000"
 5195      20696E74 
 5195      00
 5196              	.LASF129:
 5197 0800 43617053 		.ascii	"CapSense_1_SsCSDStartSample\000"
 5197      656E7365 
 5197      5F315F53 
 5197      73435344 
 5197      53746172 
 5198              	.LASF69:
 5199 081c 77646774 		.ascii	"wdgtEnable\000"
 5199      456E6162 
 5199      6C6500
 5200              	.LASF155:
 5201 0827 43617053 		.ascii	"CapSense_1_dsFlash\000"
 5201      656E7365 
 5201      5F315F64 
 5201      73466C61 
 5201      736800
 5202              	.LASF58:
 5203 083a 64696666 		.ascii	"diff\000"
 5203      00
 5204              	.LASF66:
 5205 083f 74756E65 		.ascii	"tunerCmd\000"
 5205      72436D64 
 5205      00
 5206              	.LASF147:
 5207 0848 70747249 		.ascii	"ptrIdac\000"
 5207      64616300 
 5208              	.LASF84:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 148


 5209 0850 70735074 		.ascii	"psPtr\000"
 5209      7200
 5210              	.LASF29:
 5211 0856 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 5211      656E7365 
 5211      5F315F53 
 5211      454E5345 
 5211      5F4D4554 
 5212              	.LASF47:
 5213 0874 62757474 		.ascii	"button0\000"
 5213      6F6E3000 
 5214              	.LASF48:
 5215 087c 62757474 		.ascii	"button1\000"
 5215      6F6E3100 
 5216              	.LASF49:
 5217 0884 62757474 		.ascii	"button2\000"
 5217      6F6E3200 
 5218              	.LASF50:
 5219 088c 62757474 		.ascii	"button3\000"
 5219      6F6E3300 
 5220              	.LASF53:
 5221 0894 62757474 		.ascii	"button4\000"
 5221      6F6E3400 
 5222              	.LASF51:
 5223 089c 62757474 		.ascii	"button5\000"
 5223      6F6E3500 
 5224              	.LASF52:
 5225 08a4 62757474 		.ascii	"button6\000"
 5225      6F6E3600 
 5226              	.LASF54:
 5227 08ac 62757474 		.ascii	"button7\000"
 5227      6F6E3700 
 5228              	.LASF177:
 5229 08b4 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 5229      656E7365 
 5229      5F315F43 
 5229      53444361 
 5229      6C696272 
 5230              	.LASF99:
 5231 08d2 6E756D43 		.ascii	"numCols\000"
 5231      6F6C7300 
 5232              	.LASF164:
 5233 08da 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 5233      656E7365 
 5233      5F315F53 
 5233      73536574 
 5233      536E7343 
 5234              	.LASF163:
 5235 08fa 43617053 		.ascii	"CapSense_1_calibratedRawcount\000"
 5235      656E7365 
 5235      5F315F63 
 5235      616C6962 
 5235      72617465 
 5236              	.LASF144:
 5237 0918 43617053 		.ascii	"CapSense_1_SsCSDDisconnectSnsExt\000"
 5237      656E7365 
 5237      5F315F53 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 149


 5237      73435344 
 5237      44697363 
 5238              	.LASF42:
 5239 0939 66696E67 		.ascii	"fingerCap\000"
 5239      65724361 
 5239      7000
 5240              	.LASF70:
 5241 0943 77646774 		.ascii	"wdgtStatus\000"
 5241      53746174 
 5241      757300
 5242              	.LASF142:
 5243 094e 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 5243      656E7365 
 5243      5F315F43 
 5243      53445365 
 5243      74757057 
 5244              	.LASF157:
 5245 0968 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 5245      656E7365 
 5245      5F315F73 
 5245      656E736F 
 5245      72496E64 
 5246              	.LASF28:
 5247 097f 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 5247      656E7365 
 5247      5F315F53 
 5247      454E5345 
 5247      5F4D4554 
 5248              	.LASF88:
 5249 099d 64725368 		.ascii	"drShift\000"
 5249      69667400 
 5250              	.LASF5:
 5251 09a5 6C6F6E67 		.ascii	"long unsigned int\000"
 5251      20756E73 
 5251      69676E65 
 5251      6420696E 
 5251      7400
 5252              	.LASF125:
 5253 09b7 746D7052 		.ascii	"tmpRegValue\000"
 5253      65675661 
 5253      6C756500 
 5254              	.LASF39:
 5255 09c3 69646163 		.ascii	"idacMod\000"
 5255      4D6F6400 
 5256              	.LASF95:
 5257 09cb 70747232 		.ascii	"ptr2DebounceArr\000"
 5257      4465626F 
 5257      756E6365 
 5257      41727200 
 5258              	.LASF33:
 5259 09db 66696E67 		.ascii	"fingerTh\000"
 5259      65725468 
 5259      00
 5260              	.LASF57:
 5261 09e4 62736C6E 		.ascii	"bslnExt\000"
 5261      45787400 
 5262              	.LASF15:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 150


 5263 09ec 63797374 		.ascii	"cystatus\000"
 5263      61747573 
 5263      00
 5264              	.LASF1:
 5265 09f5 756E7369 		.ascii	"unsigned char\000"
 5265      676E6564 
 5265      20636861 
 5265      7200
 5266              	.LASF96:
 5267 0a03 73746174 		.ascii	"staticConfig\000"
 5267      6963436F 
 5267      6E666967 
 5267      00
 5268              	.LASF145:
 5269 0a10 43617053 		.ascii	"CapSense_1_SsCSDCalibrateCheck\000"
 5269      656E7365 
 5269      5F315F53 
 5269      73435344 
 5269      43616C69 
 5270              	.LASF136:
 5271 0a2f 43617053 		.ascii	"CapSense_1_CSDScan\000"
 5271      656E7365 
 5271      5F315F43 
 5271      53445363 
 5271      616E00
 5272              	.LASF92:
 5273 0a42 70747232 		.ascii	"ptr2WdgtRam\000"
 5273      57646774 
 5273      52616D00 
 5274              	.LASF85:
 5275 0a4e 6873696F 		.ascii	"hsiomMask\000"
 5275      6D4D6173 
 5275      6B00
 5276              	.LASF170:
 5277 0a58 4379496E 		.ascii	"CyIntEnable\000"
 5277      74456E61 
 5277      626C6500 
 5278              	.LASF112:
 5279 0a64 72617743 		.ascii	"rawCountsError\000"
 5279      6F756E74 
 5279      73457272 
 5279      6F7200
 5280              	.LASF40:
 5281 0a73 736E7343 		.ascii	"snsClk\000"
 5281      6C6B00
 5282              	.LASF124:
 5283 0a7a 43617053 		.ascii	"CapSense_1_SsCSDCalculateScanDuration\000"
 5283      656E7365 
 5283      5F315F53 
 5283      73435344 
 5283      43616C63 
 5284              	.LASF148:
 5285 0aa0 69444143 		.ascii	"iDAC8Max\000"
 5285      384D6178 
 5285      00
 5286              	.LASF0:
 5287 0aa9 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 151


 5287      65642063 
 5287      68617200 
 5288              	.LASF56:
 5289 0ab5 62736C6E 		.ascii	"bsln\000"
 5289      00
 5290              	.LASF3:
 5291 0aba 73686F72 		.ascii	"short unsigned int\000"
 5291      7420756E 
 5291      7369676E 
 5291      65642069 
 5291      6E7400
 5292              	.LASF90:
 5293 0acd 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 5293      656E7365 
 5293      5F315F46 
 5293      4C415348 
 5293      5F494F5F 
 5294              	.LASF110:
 5295 0ae8 6E657752 		.ascii	"newRegValue\000"
 5295      65675661 
 5295      6C756500 
 5296              	.LASF165:
 5297 0af4 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 5297      656E7365 
 5297      5F315F53 
 5297      73436C65 
 5297      61724353 
 5298              	.LASF9:
 5299 0b11 75696E74 		.ascii	"uint8\000"
 5299      3800
 5300              	.LASF13:
 5301 0b17 646F7562 		.ascii	"double\000"
 5301      6C6500
 5302              	.LASF59:
 5303 0b1e 6E656742 		.ascii	"negBslnRstCnt\000"
 5303      736C6E52 
 5303      7374436E 
 5303      7400
 5304              	.LASF61:
 5305 0b2c 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 5305      656E7365 
 5305      5F315F52 
 5305      414D5F53 
 5305      4E535F53 
 5306              	.LASF19:
 5307 0b46 70617261 		.ascii	"param0\000"
 5307      6D3000
 5308              	.LASF20:
 5309 0b4d 70617261 		.ascii	"param1\000"
 5309      6D3100
 5310              	.LASF21:
 5311 0b54 70617261 		.ascii	"param2\000"
 5311      6D3200
 5312              	.LASF22:
 5313 0b5b 70617261 		.ascii	"param3\000"
 5313      6D3300
 5314              	.LASF23:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cclvnGhd.s 			page 152


 5315 0b62 70617261 		.ascii	"param4\000"
 5315      6D3400
 5316              	.LASF24:
 5317 0b69 70617261 		.ascii	"param5\000"
 5317      6D3500
 5318              	.LASF25:
 5319 0b70 70617261 		.ascii	"param6\000"
 5319      6D3600
 5320              	.LASF121:
 5321 0b77 70747249 		.ascii	"ptrIdacMod\000"
 5321      6461634D 
 5321      6F6400
 5322              	.LASF117:
 5323 0b82 736E7343 		.ascii	"snsClkDivider\000"
 5323      6C6B4469 
 5323      76696465 
 5323      7200
 5324              	.LASF64:
 5325 0b90 64657669 		.ascii	"deviceId\000"
 5325      63654964 
 5325      00
 5326              	.LASF46:
 5327 0b99 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 5327      656E7365 
 5327      5F315F52 
 5327      414D5F57 
 5327      445F4255 
 5328              	.LASF138:
 5329 0bb9 77696467 		.ascii	"widgetId\000"
 5329      65744964 
 5329      00
 5330              	.LASF146:
 5331 0bc2 43617053 		.ascii	"CapSense_1_SsCSDCalibrateOneSensor\000"
 5331      656E7365 
 5331      5F315F53 
 5331      73435344 
 5331      43616C69 
 5332              	.LASF115:
 5333 0be5 43617053 		.ascii	"CapSense_1_SsCSDSetSingleIdacMode\000"
 5333      656E7365 
 5333      5F315F53 
 5333      73435344 
 5333      53657453 
 5334              	.LASF102:
 5335 0c07 77646774 		.ascii	"wdgtArray\000"
 5335      41727261 
 5335      7900
 5336              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
