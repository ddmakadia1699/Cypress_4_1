ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsTrimIdacsSourcing, %function
  24              	CapSense_1_SsTrimIdacsSourcing:
  25              	.LFB17:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 6.0
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v6.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 34


1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
  27              		.loc 1 1904 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 35


  35              		.cfi_offset 14, -4
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
  36              		.loc 1 1908 0
  37 0002 0848     		ldr	r0, .L2
  38 0004 0368     		ldr	r3, [r0]
  39 0006 0F24     		movs	r4, #15
  40 0008 A343     		bics	r3, r4
  41 000a 1900     		movs	r1, r3
  42              	.LVL0:
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
  43              		.loc 1 1909 0
  44 000c 064D     		ldr	r5, .L2+4
  45 000e 2B78     		ldrb	r3, [r5]
  46 0010 0F22     		movs	r2, #15
  47 0012 1340     		ands	r3, r2
  48 0014 0B43     		orrs	r3, r1
  49              	.LVL1:
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
  50              		.loc 1 1914 0
  51 0016 E132     		adds	r2, r2, #225
  52 0018 9343     		bics	r3, r2
  53              	.LVL2:
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
  54              		.loc 1 1915 0
  55 001a 2A78     		ldrb	r2, [r5]
  56 001c A243     		bics	r2, r4
  57 001e 1343     		orrs	r3, r2
  58              	.LVL3:
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
  59              		.loc 1 1920 0
  60 0020 0360     		str	r3, [r0]
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
  61              		.loc 1 1921 0
  62              		@ sp needed
  63 0022 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0024 00FF0840 		.word	1074331392
  68 0028 62F1FF0F 		.word	268431714
  69              		.cfi_endproc
  70              	.LFE17:
  71              		.size	CapSense_1_SsTrimIdacsSourcing, .-CapSense_1_SsTrimIdacsSourcing
  72              		.section	.text.CapSense_1_SsTrimIdacs,"ax",%progbits
  73              		.align	2
  74              		.code	16
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 36


  75              		.thumb_func
  76              		.type	CapSense_1_SsTrimIdacs, %function
  77              	CapSense_1_SsTrimIdacs:
  78              	.LFB18:
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
  79              		.loc 1 1942 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
  87              		.loc 1 1949 0
  88 0002 FFF7FEFF 		bl	CapSense_1_SsTrimIdacsSourcing
  89              	.LVL4:
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  90              		.loc 1 1953 0
  91              		@ sp needed
  92 0006 10BD     		pop	{r4, pc}
  93              		.cfi_endproc
  94              	.LFE18:
  95              		.size	CapSense_1_SsTrimIdacs, .-CapSense_1_SsTrimIdacs
  96              		.section	.text.CapSense_1_SsCSDDisableMode,"ax",%progbits
  97              		.align	2
  98              		.code	16
  99              		.thumb_func
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 37


 100              		.type	CapSense_1_SsCSDDisableMode, %function
 101              	CapSense_1_SsCSDDisableMode:
 102              	.LFB6:
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 103              		.loc 1 763 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 111              		.loc 1 767 0
 112 0002 044A     		ldr	r2, .L6
 113 0004 1168     		ldr	r1, [r2]
 114              	.LVL5:
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 115              		.loc 1 768 0
 116 0006 044B     		ldr	r3, .L6+4
 117 0008 0B40     		ands	r3, r1
 118              	.LVL6:
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 119              		.loc 1 769 0
 120 000a 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 121              		.loc 1 783 0
 122 000c FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
 123              	.LVL7:
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 124              		.loc 1 799 0
 125              		@ sp needed
 126 0010 10BD     		pop	{r4, pc}
 127              	.L7:
 128 0012 C046     		.align	2
 129              	.L6:
 130 0014 10000140 		.word	1073807376
 131 0018 FFF0FFFF 		.word	-3841
 132              		.cfi_endproc
 133              	.LFE6:
 134              		.size	CapSense_1_SsCSDDisableMode, .-CapSense_1_SsCSDDisableMode
 135              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
 136              		.align	2
 137              		.global	CapSense_1_IsBusy
 138              		.code	16
 139              		.thumb_func
 140              		.type	CapSense_1_IsBusy, %function
 141              	CapSense_1_IsBusy:
 142              	.LFB0:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 143              		.loc 1 234 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 148              		.loc 1 235 0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 38


 149 0000 024B     		ldr	r3, .L9
 150 0002 DB68     		ldr	r3, [r3, #12]
 151 0004 8020     		movs	r0, #128
 152 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 153              		.loc 1 236 0
 154              		@ sp needed
 155 0008 7047     		bx	lr
 156              	.L10:
 157 000a C046     		.align	2
 158              	.L9:
 159 000c 00000000 		.word	CapSense_1_dsRam
 160              		.cfi_endproc
 161              	.LFE0:
 162              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 163              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 164              		.align	2
 165              		.global	CapSense_1_SetupWidget
 166              		.code	16
 167              		.thumb_func
 168              		.type	CapSense_1_SetupWidget, %function
 169              	CapSense_1_SetupWidget:
 170              	.LFB1:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 171              		.loc 1 286 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              	.LVL8:
 176 0000 10B5     		push	{r4, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 4, -8
 179              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 180              		.loc 1 289 0
 181 0002 0E4B     		ldr	r3, .L17
 182 0004 DB68     		ldr	r3, [r3, #12]
 183 0006 DB03     		lsls	r3, r3, #15
 184 0008 0DD4     		bmi	.L14
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 185              		.loc 1 299 0
 186 000a 0728     		cmp	r0, #7
 187 000c 0DD8     		bhi	.L15
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 188              		.loc 1 300 0 discriminator 1
 189 000e 4309     		lsrs	r3, r0, #5
 190 0010 0433     		adds	r3, r3, #4
 191 0012 9B00     		lsls	r3, r3, #2
 192 0014 094A     		ldr	r2, .L17
 193 0016 9B58     		ldr	r3, [r3, r2]
 194 0018 1F22     		movs	r2, #31
 195 001a 0240     		ands	r2, r0
 196 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 197              		.loc 1 299 0 discriminator 1
 198 001e DB07     		lsls	r3, r3, #31
 199 0020 05D4     		bmi	.L16
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 39


 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 200              		.loc 1 307 0
 201 0022 0124     		movs	r4, #1
 202 0024 04E0     		b	.L12
 203              	.L14:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 204              		.loc 1 292 0
 205 0026 1124     		movs	r4, #17
 206 0028 02E0     		b	.L12
 207              	.L15:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 208              		.loc 1 307 0
 209 002a 0124     		movs	r4, #1
 210 002c 00E0     		b	.L12
 211              	.L16:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 212              		.loc 1 303 0
 213 002e 0024     		movs	r4, #0
 214              	.L12:
 215              	.LVL9:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 216              		.loc 1 314 0
 217 0030 002C     		cmp	r4, #0
 218 0032 01D1     		bne	.L13
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 219              		.loc 1 327 0
 220 0034 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 221              	.LVL10:
 222              	.L13:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 223              		.loc 1 343 0
 224 0038 2000     		movs	r0, r4
 225              		@ sp needed
 226              	.LVL11:
 227 003a 10BD     		pop	{r4, pc}
 228              	.L18:
 229              		.align	2
 230              	.L17:
 231 003c 00000000 		.word	CapSense_1_dsRam
 232              		.cfi_endproc
 233              	.LFE1:
 234              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 235              		.section	.text.CapSense_1_Scan,"ax",%progbits
 236              		.align	2
 237              		.global	CapSense_1_Scan
 238              		.code	16
 239              		.thumb_func
 240              		.type	CapSense_1_Scan, %function
 241              	CapSense_1_Scan:
 242              	.LFB2:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 243              		.loc 1 369 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 10B5     		push	{r4, lr}
 248              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 40


 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 251              	.LVL12:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 252              		.loc 1 372 0
 253 0002 084B     		ldr	r3, .L25
 254 0004 DB68     		ldr	r3, [r3, #12]
 255 0006 DB03     		lsls	r3, r3, #15
 256 0008 07D4     		bmi	.L22
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 257              		.loc 1 379 0
 258 000a 074B     		ldr	r3, .L25+4
 259 000c 1B78     		ldrb	r3, [r3]
 260 000e 012B     		cmp	r3, #1
 261 0010 05D1     		bne	.L24
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 262              		.loc 1 388 0
 263 0012 FFF7FEFF 		bl	CapSense_1_CSDScan
 264              	.LVL13:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 265              		.loc 1 370 0
 266 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 267              		.loc 1 389 0
 268 0018 03E0     		b	.L20
 269              	.L22:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 270              		.loc 1 375 0
 271 001a 1120     		movs	r0, #17
 272 001c 01E0     		b	.L20
 273              	.L24:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 274              		.loc 1 397 0
 275 001e 0120     		movs	r0, #1
 276 0020 4042     		rsbs	r0, r0, #0
 277              	.L20:
 278              	.LVL14:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 279              		.loc 1 402 0
 280              		@ sp needed
 281 0022 10BD     		pop	{r4, pc}
 282              	.L26:
 283              		.align	2
 284              	.L25:
 285 0024 00000000 		.word	CapSense_1_dsRam
 286 0028 00000000 		.word	.LANCHOR0
 287              		.cfi_endproc
 288              	.LFE2:
 289              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 290              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 291              		.align	2
 292              		.global	CapSense_1_ScanAllWidgets
 293              		.code	16
 294              		.thumb_func
 295              		.type	CapSense_1_ScanAllWidgets, %function
 296              	CapSense_1_ScanAllWidgets:
 297              	.LFB3:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 41


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 298              		.loc 1 431 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 10B5     		push	{r4, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 4, -8
 305              		.cfi_offset 14, -4
 306              	.LVL15:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307              		.loc 1 436 0
 308 0002 0F4B     		ldr	r3, .L35
 309 0004 DB68     		ldr	r3, [r3, #12]
 310 0006 1B06     		lsls	r3, r3, #24
 311 0008 18D4     		bmi	.L34
 312 000a 0024     		movs	r4, #0
 313 000c 0120     		movs	r0, #1
 314 000e 4042     		rsbs	r0, r0, #0
 315 0010 11E0     		b	.L29
 316              	.LVL16:
 317              	.L33:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 318              		.loc 1 452 0
 319 0012 2000     		movs	r0, r4
 320              	.LVL17:
 321 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 322              	.LVL18:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 323              		.loc 1 454 0
 324 0018 0028     		cmp	r0, #0
 325 001a 0BD1     		bne	.L30
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 326              		.loc 1 458 0
 327 001c 062C     		cmp	r4, #6
 328 001e 03D8     		bhi	.L31
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 329              		.loc 1 461 0
 330 0020 0122     		movs	r2, #1
 331 0022 084B     		ldr	r3, .L35+4
 332 0024 5A70     		strb	r2, [r3, #1]
 333 0026 02E0     		b	.L32
 334              	.L31:
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 335              		.loc 1 466 0
 336 0028 0022     		movs	r2, #0
 337 002a 064B     		ldr	r3, .L35+4
 338 002c 5A70     		strb	r2, [r3, #1]
 339              	.L32:
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 340              		.loc 1 476 0
 341 002e FFF7FEFF 		bl	CapSense_1_Scan
 342              	.LVL19:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 343              		.loc 1 478 0
 344 0032 04E0     		b	.L28
 345              	.L30:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 42


 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 346              		.loc 1 449 0
 347 0034 0134     		adds	r4, r4, #1
 348              	.LVL20:
 349              	.L29:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 350              		.loc 1 447 0 discriminator 1
 351 0036 072C     		cmp	r4, #7
 352 0038 EBD9     		bls	.L33
 353 003a 00E0     		b	.L28
 354              	.LVL21:
 355              	.L34:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 356              		.loc 1 439 0
 357 003c 1120     		movs	r0, #17
 358              	.LVL22:
 359              	.L28:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 360              		.loc 1 484 0
 361              		@ sp needed
 362 003e 10BD     		pop	{r4, pc}
 363              	.L36:
 364              		.align	2
 365              	.L35:
 366 0040 00000000 		.word	CapSense_1_dsRam
 367 0044 00000000 		.word	.LANCHOR0
 368              		.cfi_endproc
 369              	.LFE3:
 370              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 371              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 372              		.align	2
 373              		.global	CapSense_1_SetPinState
 374              		.code	16
 375              		.thumb_func
 376              		.type	CapSense_1_SetPinState, %function
 377              	CapSense_1_SetPinState:
 378              	.LFB5:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 379              		.loc 1 650 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL23:
 384 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 385              		.cfi_def_cfa_offset 24
 386              		.cfi_offset 3, -24
 387              		.cfi_offset 4, -20
 388              		.cfi_offset 5, -16
 389              		.cfi_offset 6, -12
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 393              		.loc 1 675 0
 394 0004 4001     		lsls	r0, r0, #5
 395              	.LVL24:
 396 0006 244B     		ldr	r3, .L44
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 43


 397 0008 C458     		ldr	r4, [r0, r3]
 398 000a CB00     		lsls	r3, r1, #3
 399 000c 591A     		subs	r1, r3, r1
 400              	.LVL25:
 401 000e 8B00     		lsls	r3, r1, #2
 402 0010 E418     		adds	r4, r4, r3
 403              	.LVL26:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 404              		.loc 1 680 0
 405 0012 0025     		movs	r5, #0
 406 0014 3CE0     		b	.L38
 407              	.LVL27:
 408              	.L43:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 409              		.loc 1 683 0
 410 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 411              	.LVL28:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 412              		.loc 1 684 0
 413 001a 2168     		ldr	r1, [r4]
 414 001c 0B68     		ldr	r3, [r1]
 415 001e 277E     		ldrb	r7, [r4, #24]
 416 0020 0F22     		movs	r2, #15
 417 0022 BA40     		lsls	r2, r2, r7
 418 0024 9343     		bics	r3, r2
 419 0026 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 420              		.loc 1 685 0
 421 0028 6168     		ldr	r1, [r4, #4]
 422 002a 0B68     		ldr	r3, [r1]
 423 002c A77E     		ldrb	r7, [r4, #26]
 424 002e 0722     		movs	r2, #7
 425 0030 BA40     		lsls	r2, r2, r7
 426 0032 9343     		bics	r3, r2
 427 0034 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 428              		.loc 1 686 0
 429 0036 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL29:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 431              		.loc 1 688 0
 432 003a 012E     		cmp	r6, #1
 433 003c 17D0     		beq	.L40
 434 003e 002E     		cmp	r6, #0
 435 0040 02D0     		beq	.L41
 436 0042 032E     		cmp	r6, #3
 437 0044 1FD0     		beq	.L42
 438 0046 21E0     		b	.L39
 439              	.L41:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 440              		.loc 1 692 0
 441 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 442              	.LVL30:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 443              		.loc 1 693 0
 444 004c 6268     		ldr	r2, [r4, #4]
 445 004e 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 44


 446 0050 A77E     		ldrb	r7, [r4, #26]
 447 0052 0623     		movs	r3, #6
 448 0054 BB40     		lsls	r3, r3, r7
 449 0056 0B43     		orrs	r3, r1
 450 0058 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 451              		.loc 1 694 0
 452 005a A168     		ldr	r1, [r4, #8]
 453 005c 0B68     		ldr	r3, [r1]
 454 005e 677E     		ldrb	r7, [r4, #25]
 455 0060 0122     		movs	r2, #1
 456 0062 BA40     		lsls	r2, r2, r7
 457 0064 9343     		bics	r3, r2
 458 0066 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 459              		.loc 1 695 0
 460 0068 FFF7FEFF 		bl	CyExitCriticalSection
 461              	.LVL31:
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 462              		.loc 1 696 0
 463 006c 0EE0     		b	.L39
 464              	.L40:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 465              		.loc 1 699 0
 466 006e FFF7FEFF 		bl	CyEnterCriticalSection
 467              	.LVL32:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 468              		.loc 1 700 0
 469 0072 A168     		ldr	r1, [r4, #8]
 470 0074 0B68     		ldr	r3, [r1]
 471 0076 677E     		ldrb	r7, [r4, #25]
 472 0078 0122     		movs	r2, #1
 473 007a BA40     		lsls	r2, r2, r7
 474 007c 9343     		bics	r3, r2
 475 007e 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 476              		.loc 1 701 0
 477 0080 FFF7FEFF 		bl	CyExitCriticalSection
 478              	.LVL33:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 479              		.loc 1 702 0
 480 0084 02E0     		b	.L39
 481              	.L42:
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 482              		.loc 1 707 0
 483 0086 2000     		movs	r0, r4
 484 0088 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 485              	.LVL34:
 486              	.L39:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 487              		.loc 1 742 0 discriminator 2
 488 008c 1C34     		adds	r4, r4, #28
 489              	.LVL35:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 490              		.loc 1 680 0 discriminator 2
 491 008e 0135     		adds	r5, r5, #1
 492              	.LVL36:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 45


 493              	.L38:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 494              		.loc 1 680 0 is_stmt 0 discriminator 1
 495 0090 002D     		cmp	r5, #0
 496 0092 C0D0     		beq	.L43
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 497              		.loc 1 744 0 is_stmt 1
 498              		@ sp needed
 499              	.LVL37:
 500              	.LVL38:
 501              	.LVL39:
 502 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 503              	.L45:
 504 0096 C046     		.align	2
 505              	.L44:
 506 0098 00000000 		.word	CapSense_1_dsFlash
 507              		.cfi_endproc
 508              	.LFE5:
 509              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 510              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 511              		.align	2
 512              		.global	CapSense_1_SsSwitchSensingMode
 513              		.code	16
 514              		.thumb_func
 515              		.type	CapSense_1_SsSwitchSensingMode, %function
 516              	CapSense_1_SsSwitchSensingMode:
 517              	.LFB7:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 518              		.loc 1 902 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              	.LVL40:
 523 0000 10B5     		push	{r4, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 4, -8
 526              		.cfi_offset 14, -4
 527 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 528              		.loc 1 903 0
 529 0004 0C4B     		ldr	r3, .L50
 530 0006 1B78     		ldrb	r3, [r3]
 531 0008 8342     		cmp	r3, r0
 532 000a 14D0     		beq	.L46
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 533              		.loc 1 906 0
 534 000c 012B     		cmp	r3, #1
 535 000e 01D1     		bne	.L48
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 536              		.loc 1 909 0
 537 0010 FFF7FEFF 		bl	CapSense_1_SsCSDDisableMode
 538              	.LVL41:
 539              	.L48:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 540              		.loc 1 939 0
 541 0014 012C     		cmp	r4, #1
 542 0016 05D1     		bne	.L49
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 46


 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 543              		.loc 1 943 0
 544 0018 FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 545              	.LVL42:
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 546              		.loc 1 944 0
 547 001c 0122     		movs	r2, #1
 548 001e 064B     		ldr	r3, .L50
 549 0020 1A70     		strb	r2, [r3]
 550 0022 08E0     		b	.L46
 551              	.L49:
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 552              		.loc 1 947 0
 553 0024 022C     		cmp	r4, #2
 554 0026 06D0     		beq	.L46
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 555              		.loc 1 955 0
 556 0028 042C     		cmp	r4, #4
 557 002a 04D0     		beq	.L46
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 558              		.loc 1 963 0
 559 002c 032C     		cmp	r4, #3
 560 002e 02D0     		beq	.L46
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 561              		.loc 1 972 0
 562 0030 0022     		movs	r2, #0
 563 0032 014B     		ldr	r3, .L50
 564 0034 1A70     		strb	r2, [r3]
 565              	.L46:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 566              		.loc 1 975 0
 567              		@ sp needed
 568 0036 10BD     		pop	{r4, pc}
 569              	.L51:
 570              		.align	2
 571              	.L50:
 572 0038 00000000 		.word	.LANCHOR0
 573              		.cfi_endproc
 574              	.LFE7:
 575              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 576              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 577              		.align	2
 578              		.global	CapSense_1_SsSetIOsInDefaultState
 579              		.code	16
 580              		.thumb_func
 581              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 582              	CapSense_1_SsSetIOsInDefaultState:
 583              	.LFB8:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 584              		.loc 1 1001 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588 0000 30B5     		push	{r4, r5, lr}
 589              		.cfi_def_cfa_offset 12
 590              		.cfi_offset 4, -12
 591              		.cfi_offset 5, -8
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 47


 592              		.cfi_offset 14, -4
 593              	.LVL43:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 594              		.loc 1 1007 0
 595 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 596              		.loc 1 1002 0
 597 0004 0D4B     		ldr	r3, .L55
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 598              		.loc 1 1007 0
 599 0006 16E0     		b	.L53
 600              	.LVL44:
 601              	.L54:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 602              		.loc 1 1014 0 discriminator 3
 603 0008 1968     		ldr	r1, [r3]
 604 000a 0A68     		ldr	r2, [r1]
 605              	.LVL45:
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 606              		.loc 1 1015 0 discriminator 3
 607 000c 1C69     		ldr	r4, [r3, #16]
 608 000e A243     		bics	r2, r4
 609              	.LVL46:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 610              		.loc 1 1016 0 discriminator 3
 611 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 612              		.loc 1 1018 0 discriminator 3
 613 0012 5C68     		ldr	r4, [r3, #4]
 614 0014 2268     		ldr	r2, [r4]
 615              	.LVL47:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 616              		.loc 1 1019 0 discriminator 3
 617 0016 9D7E     		ldrb	r5, [r3, #26]
 618 0018 0721     		movs	r1, #7
 619 001a A940     		lsls	r1, r1, r5
 620 001c 8A43     		bics	r2, r1
 621              	.LVL48:
 622 001e 1100     		movs	r1, r2
 623              	.LVL49:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 624              		.loc 1 1020 0 discriminator 3
 625 0020 0622     		movs	r2, #6
 626 0022 AA40     		lsls	r2, r2, r5
 627 0024 0A43     		orrs	r2, r1
 628              	.LVL50:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 629              		.loc 1 1021 0 discriminator 3
 630 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 631              		.loc 1 1023 0 discriminator 3
 632 0028 9968     		ldr	r1, [r3, #8]
 633 002a 0A68     		ldr	r2, [r1]
 634              	.LVL51:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 635              		.loc 1 1024 0 discriminator 3
 636 002c 5C69     		ldr	r4, [r3, #20]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 48


 637 002e A243     		bics	r2, r4
 638              	.LVL52:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 639              		.loc 1 1025 0 discriminator 3
 640 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 641              		.loc 1 1028 0 discriminator 3
 642 0032 1C33     		adds	r3, r3, #28
 643              	.LVL53:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 644              		.loc 1 1007 0 discriminator 3
 645 0034 0130     		adds	r0, r0, #1
 646              	.LVL54:
 647              	.L53:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 648              		.loc 1 1007 0 is_stmt 0 discriminator 1
 649 0036 0728     		cmp	r0, #7
 650 0038 E6D9     		bls	.L54
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 651              		.loc 1 1038 0 is_stmt 1
 652              		@ sp needed
 653 003a 30BD     		pop	{r4, r5, pc}
 654              	.L56:
 655              		.align	2
 656              	.L55:
 657 003c 00000000 		.word	CapSense_1_ioList
 658              		.cfi_endproc
 659              	.LFE8:
 660              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 661              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 662              		.align	2
 663              		.global	CapSense_1_SsPostAllWidgetsScan
 664              		.code	16
 665              		.thumb_func
 666              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 667              	CapSense_1_SsPostAllWidgetsScan:
 668              	.LFB9:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 669              		.loc 1 1123 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673 0000 10B5     		push	{r4, lr}
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 4, -8
 676              		.cfi_offset 14, -4
 677              	.L62:
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 678              		.loc 1 1134 0
 679 0002 1B4A     		ldr	r2, .L63
 680 0004 9378     		ldrb	r3, [r2, #2]
 681 0006 0133     		adds	r3, r3, #1
 682 0008 DBB2     		uxtb	r3, r3
 683 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 684              		.loc 1 1136 0
 685 000c 9078     		ldrb	r0, [r2, #2]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 49


 686 000e C0B2     		uxtb	r0, r0
 687 0010 FFF7FEFF 		bl	CapSense_1_SetupWidget
 688              	.LVL55:
 689 0014 041E     		subs	r4, r0, #0
 690              	.LVL56:
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 691              		.loc 1 1138 0
 692 0016 09D1     		bne	.L58
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 693              		.loc 1 1140 0
 694 0018 154B     		ldr	r3, .L63
 695 001a 9B78     		ldrb	r3, [r3, #2]
 696 001c 072B     		cmp	r3, #7
 697 001e 02D1     		bne	.L59
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 698              		.loc 1 1143 0
 699 0020 0022     		movs	r2, #0
 700 0022 134B     		ldr	r3, .L63
 701 0024 5A70     		strb	r2, [r3, #1]
 702              	.L59:
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 703              		.loc 1 1145 0
 704 0026 FFF7FEFF 		bl	CapSense_1_Scan
 705              	.LVL57:
 706 002a 1EE0     		b	.L60
 707              	.LVL58:
 708              	.L58:
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 709              		.loc 1 1147 0
 710 002c 104B     		ldr	r3, .L63
 711 002e 9B78     		ldrb	r3, [r3, #2]
 712 0030 072B     		cmp	r3, #7
 713 0032 11D1     		bne	.L61
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 714              		.loc 1 1161 0
 715 0034 0F4B     		ldr	r3, .L63+4
 716 0036 1A89     		ldrh	r2, [r3, #8]
 717 0038 0132     		adds	r2, r2, #1
 718 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 719              		.loc 1 1163 0
 720 003c DA68     		ldr	r2, [r3, #12]
 721 003e 8021     		movs	r1, #128
 722 0040 8A43     		bics	r2, r1
 723 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 724              		.loc 1 1166 0
 725 0044 DA68     		ldr	r2, [r3, #12]
 726 0046 1202     		lsls	r2, r2, #8
 727 0048 120A     		lsrs	r2, r2, #8
 728 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729              		.loc 1 1167 0
 730 004c DA68     		ldr	r2, [r3, #12]
 731 004e 0406     		lsls	r4, r0, #24
 732 0050 1443     		orrs	r4, r2
 733 0052 DC60     		str	r4, [r3, #12]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 50


 734              	.LVL59:
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 735              		.loc 1 1170 0
 736 0054 0024     		movs	r4, #0
 737 0056 08E0     		b	.L60
 738              	.LVL60:
 739              	.L61:
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 740              		.loc 1 1175 0
 741 0058 064A     		ldr	r2, .L63+4
 742 005a D368     		ldr	r3, [r2, #12]
 743 005c 1B02     		lsls	r3, r3, #8
 744 005e 1B0A     		lsrs	r3, r3, #8
 745 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 746              		.loc 1 1176 0
 747 0062 D168     		ldr	r1, [r2, #12]
 748 0064 0306     		lsls	r3, r0, #24
 749 0066 0B43     		orrs	r3, r1
 750 0068 D360     		str	r3, [r2, #12]
 751              	.LVL61:
 752              	.L60:
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
 753              		.loc 1 1178 0
 754 006a 002C     		cmp	r4, #0
 755 006c C9D1     		bne	.L62
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 756              		.loc 1 1180 0
 757              		@ sp needed
 758              	.LVL62:
 759 006e 10BD     		pop	{r4, pc}
 760              	.L64:
 761              		.align	2
 762              	.L63:
 763 0070 00000000 		.word	.LANCHOR0
 764 0074 00000000 		.word	CapSense_1_dsRam
 765              		.cfi_endproc
 766              	.LFE9:
 767              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 768              		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 769              		.align	2
 770              		.global	CapSense_1_SsIsrInitialize
 771              		.code	16
 772              		.thumb_func
 773              		.type	CapSense_1_SsIsrInitialize, %function
 774              	CapSense_1_SsIsrInitialize:
 775              	.LFB10:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 776              		.loc 1 1200 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              	.LVL63:
 781 0000 10B5     		push	{r4, lr}
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 4, -8
 784              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 51


1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 785              		.loc 1 1201 0
 786 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 787              	.LVL64:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 788              		.loc 1 1202 0
 789              		@ sp needed
 790 0006 10BD     		pop	{r4, pc}
 791              		.cfi_endproc
 792              	.LFE10:
 793              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 794              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 795              		.align	2
 796              		.global	CapSense_1_SsSetModClkClockDivider
 797              		.code	16
 798              		.thumb_func
 799              		.type	CapSense_1_SsSetModClkClockDivider, %function
 800              	CapSense_1_SsSetModClkClockDivider:
 801              	.LFB11:
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 802              		.loc 1 1223 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807              	.LVL65:
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
 808              		.loc 1 1253 0
 809 0000 084B     		ldr	r3, .L67
 810 0002 1A68     		ldr	r2, [r3]
 811 0004 5200     		lsls	r2, r2, #1
 812 0006 5208     		lsrs	r2, r2, #1
 813 0008 1A60     		str	r2, [r3]
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
 814              		.loc 1 1261 0
 815 000a 1A68     		ldr	r2, [r3]
 816 000c 120C     		lsrs	r2, r2, #16
 817 000e 1204     		lsls	r2, r2, #16
 818              	.LVL66:
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
 819              		.loc 1 1262 0
 820 0010 0138     		subs	r0, r0, #1
 821              	.LVL67:
 822 0012 1043     		orrs	r0, r2
 823              	.LVL68:
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 824              		.loc 1 1263 0
 825 0014 1860     		str	r0, [r3]
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
 826              		.loc 1 1266 0
 827 0016 1A68     		ldr	r2, [r3]
 828 0018 8021     		movs	r1, #128
 829 001a 0906     		lsls	r1, r1, #24
 830 001c 0A43     		orrs	r2, r1
 831 001e 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 832              		.loc 1 1270 0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 52


 833              		@ sp needed
 834 0020 7047     		bx	lr
 835              	.L68:
 836 0022 C046     		.align	2
 837              	.L67:
 838 0024 00000240 		.word	1073872896
 839              		.cfi_endproc
 840              	.LFE11:
 841              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 842              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 843              		.align	2
 844              		.global	CapSense_1_SsSetSnsClockDivider
 845              		.code	16
 846              		.thumb_func
 847              		.type	CapSense_1_SsSetSnsClockDivider, %function
 848              	CapSense_1_SsSetSnsClockDivider:
 849              	.LFB12:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 850              		.loc 1 1291 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL69:
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
 856              		.loc 1 1334 0
 857 0000 084B     		ldr	r3, .L70
 858 0002 1A68     		ldr	r2, [r3]
 859 0004 5200     		lsls	r2, r2, #1
 860 0006 5208     		lsrs	r2, r2, #1
 861 0008 1A60     		str	r2, [r3]
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
 862              		.loc 1 1342 0
 863 000a 1A68     		ldr	r2, [r3]
 864 000c 120C     		lsrs	r2, r2, #16
 865 000e 1204     		lsls	r2, r2, #16
 866              	.LVL70:
1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
 867              		.loc 1 1343 0
 868 0010 0138     		subs	r0, r0, #1
 869              	.LVL71:
 870 0012 1043     		orrs	r0, r2
 871              	.LVL72:
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 872              		.loc 1 1344 0
 873 0014 1860     		str	r0, [r3]
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
 874              		.loc 1 1347 0
 875 0016 1A68     		ldr	r2, [r3]
 876 0018 8021     		movs	r1, #128
 877 001a 0906     		lsls	r1, r1, #24
 878 001c 0A43     		orrs	r2, r1
 879 001e 1A60     		str	r2, [r3]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 880              		.loc 1 1352 0
 881              		@ sp needed
 882 0020 7047     		bx	lr
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 53


 883              	.L71:
 884 0022 C046     		.align	2
 885              	.L70:
 886 0024 40000240 		.word	1073872960
 887              		.cfi_endproc
 888              	.LFE12:
 889              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 890              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 891              		.align	2
 892              		.global	CapSense_1_SsSetClockDividers
 893              		.code	16
 894              		.thumb_func
 895              		.type	CapSense_1_SsSetClockDividers, %function
 896              	CapSense_1_SsSetClockDividers:
 897              	.LFB13:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 898              		.loc 1 1375 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              	.LVL73:
 903 0000 10B5     		push	{r4, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 4, -8
 906              		.cfi_offset 14, -4
 907 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 908              		.loc 1 1377 0
 909 0004 0800     		movs	r0, r1
 910              	.LVL74:
 911 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 912              	.LVL75:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 913              		.loc 1 1380 0
 914 000a 2000     		movs	r0, r4
 915 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 916              	.LVL76:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 917              		.loc 1 1381 0
 918              		@ sp needed
 919              	.LVL77:
 920 0010 10BD     		pop	{r4, pc}
 921              		.cfi_endproc
 922              	.LFE13:
 923              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 924 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 925              		.align	2
 926              		.global	CapSense_1_CalibrateWidget
 927              		.code	16
 928              		.thumb_func
 929              		.type	CapSense_1_CalibrateWidget, %function
 930              	CapSense_1_CalibrateWidget:
 931              	.LFB14:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 932              		.loc 1 1427 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 54


 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              	.LVL78:
 937 0000 10B5     		push	{r4, lr}
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 4, -8
 940              		.cfi_offset 14, -4
 941 0002 0300     		movs	r3, r0
 942              	.LVL79:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 943              		.loc 1 1432 0
 944 0004 0728     		cmp	r0, #7
 945 0006 01D8     		bhi	.L76
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 946              		.loc 1 1428 0
 947 0008 0020     		movs	r0, #0
 948              	.LVL80:
 949 000a 00E0     		b	.L74
 950              	.LVL81:
 951              	.L76:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 952              		.loc 1 1434 0
 953 000c 0120     		movs	r0, #1
 954              	.LVL82:
 955              	.L74:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 956              		.loc 1 1452 0
 957 000e 0028     		cmp	r0, #0
 958 0010 03D1     		bne	.L75
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 959              		.loc 1 1481 0
 960 0012 5521     		movs	r1, #85
 961 0014 1800     		movs	r0, r3
 962              	.LVL83:
 963 0016 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 964              	.LVL84:
 965              	.L75:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 966              		.loc 1 1503 0
 967              		@ sp needed
 968 001a 10BD     		pop	{r4, pc}
 969              		.cfi_endproc
 970              	.LFE14:
 971              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 972              		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 973              		.align	2
 974              		.global	CapSense_1_CalibrateAllWidgets
 975              		.code	16
 976              		.thumb_func
 977              		.type	CapSense_1_CalibrateAllWidgets, %function
 978              	CapSense_1_CalibrateAllWidgets:
 979              	.LFB15:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 980              		.loc 1 1540 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 55


 985              		.cfi_def_cfa_offset 16
 986              		.cfi_offset 4, -16
 987              		.cfi_offset 5, -12
 988              		.cfi_offset 6, -8
 989              		.cfi_offset 14, -4
 990              	.LVL85:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 991              		.loc 1 1544 0
 992 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 993              		.loc 1 1541 0
 994 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 995              		.loc 1 1544 0
 996 0006 04E0     		b	.L78
 997              	.LVL86:
 998              	.L79:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 999              		.loc 1 1546 0 discriminator 3
 1000 0008 2000     		movs	r0, r4
 1001 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 1002              	.LVL87:
 1003 000e 0543     		orrs	r5, r0
 1004              	.LVL88:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1005              		.loc 1 1544 0 discriminator 3
 1006 0010 0134     		adds	r4, r4, #1
 1007              	.LVL89:
 1008              	.L78:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1009              		.loc 1 1544 0 is_stmt 0 discriminator 1
 1010 0012 072C     		cmp	r4, #7
 1011 0014 F8D9     		bls	.L79
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 1012              		.loc 1 1550 0 is_stmt 1
 1013 0016 2800     		movs	r0, r5
 1014              		@ sp needed
 1015              	.LVL90:
 1016              	.LVL91:
 1017 0018 70BD     		pop	{r4, r5, r6, pc}
 1018              		.cfi_endproc
 1019              	.LFE15:
 1020              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 1021 001a C046     		.section	.text.CapSense_1_SsClearCSDSensors,"ax",%progbits
 1022              		.align	2
 1023              		.global	CapSense_1_SsClearCSDSensors
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CapSense_1_SsClearCSDSensors, %function
 1027              	CapSense_1_SsClearCSDSensors:
 1028              	.LFB21:
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 56


1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 57


2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 58


2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 59


2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 60


2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 61


2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 62


2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 63


2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 64


2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 65


2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 66


2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1029              		.loc 1 2567 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033 0000 70B5     		push	{r4, r5, r6, lr}
 1034              		.cfi_def_cfa_offset 16
 1035              		.cfi_offset 4, -16
 1036              		.cfi_offset 5, -12
 1037              		.cfi_offset 6, -8
 1038              		.cfi_offset 14, -4
 1039              	.LVL92:
2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 67


2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
 1040              		.loc 1 2583 0
 1041 0002 0025     		movs	r5, #0
 1042 0004 12E0     		b	.L81
 1043              	.LVL93:
 1044              	.L84:
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 1045              		.loc 1 2588 0
 1046 0006 6B01     		lsls	r3, r5, #5
 1047 0008 0A4A     		ldr	r2, .L85
 1048 000a 9E58     		ldr	r6, [r3, r2]
 1049              	.LVL94:
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
 1050              		.loc 1 2592 0
 1051 000c 0024     		movs	r4, #0
 1052 000e 06E0     		b	.L82
 1053              	.LVL95:
 1054              	.L83:
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 68


2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1055              		.loc 1 2620 0 discriminator 3
 1056 0010 E300     		lsls	r3, r4, #3
 1057 0012 1B1B     		subs	r3, r3, r4
 1058 0014 9800     		lsls	r0, r3, #2
 1059 0016 3018     		adds	r0, r6, r0
 1060 0018 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1061              	.LVL96:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1062              		.loc 1 2592 0 discriminator 3
 1063 001c 0134     		adds	r4, r4, #1
 1064              	.LVL97:
 1065              	.L82:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1066              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1067 001e 6B01     		lsls	r3, r5, #5
 1068 0020 044A     		ldr	r2, .L85
 1069 0022 D318     		adds	r3, r2, r3
 1070 0024 1B7E     		ldrb	r3, [r3, #24]
 1071 0026 9C42     		cmp	r4, r3
 1072 0028 F2D3     		bcc	.L83
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1073              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1074 002a 0135     		adds	r5, r5, #1
 1075              	.LVL98:
 1076              	.L81:
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1077              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1078 002c 072D     		cmp	r5, #7
 1079 002e EAD9     		bls	.L84
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1080              		.loc 1 2625 0 is_stmt 1
 1081              		@ sp needed
 1082              	.LVL99:
 1083 0030 70BD     		pop	{r4, r5, r6, pc}
 1084              	.L86:
 1085 0032 C046     		.align	2
 1086              	.L85:
 1087 0034 00000000 		.word	CapSense_1_dsFlash
 1088              		.cfi_endproc
 1089              	.LFE21:
 1090              		.size	CapSense_1_SsClearCSDSensors, .-CapSense_1_SsClearCSDSensors
 1091              		.section	.text.CapSense_1_SsCSDGetColSnsClkDivider,"ax",%progbits
 1092              		.align	2
 1093              		.global	CapSense_1_SsCSDGetColSnsClkDivider
 1094              		.code	16
 1095              		.thumb_func
 1096              		.type	CapSense_1_SsCSDGetColSnsClkDivider, %function
 1097              	CapSense_1_SsCSDGetColSnsClkDivider:
 1098              	.LFB22:
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 69


2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1099              		.loc 1 2649 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104              	.LVL100:
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1105              		.loc 1 2656 0
 1106 0000 4001     		lsls	r0, r0, #5
 1107              	.LVL101:
 1108 0002 024B     		ldr	r3, .L88
 1109 0004 1818     		adds	r0, r3, r0
 1110 0006 4368     		ldr	r3, [r0, #4]
 1111              	.LVL102:
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1112              		.loc 1 2659 0
 1113 0008 5889     		ldrh	r0, [r3, #10]
 1114              	.LVL103:
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 70


 1115              		.loc 1 2667 0
 1116              		@ sp needed
 1117 000a 7047     		bx	lr
 1118              	.L89:
 1119              		.align	2
 1120              	.L88:
 1121 000c 00000000 		.word	CapSense_1_dsFlash
 1122              		.cfi_endproc
 1123              	.LFE22:
 1124              		.size	CapSense_1_SsCSDGetColSnsClkDivider, .-CapSense_1_SsCSDGetColSnsClkDivider
 1125              		.section	.text.CapSense_1_SsCSDSetColSnsClkDivider,"ax",%progbits
 1126              		.align	2
 1127              		.global	CapSense_1_SsCSDSetColSnsClkDivider
 1128              		.code	16
 1129              		.thumb_func
 1130              		.type	CapSense_1_SsCSDSetColSnsClkDivider, %function
 1131              	CapSense_1_SsCSDSetColSnsClkDivider:
 1132              	.LFB23:
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1133              		.loc 1 2691 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              		@ link register save eliminated.
 1138              	.LVL104:
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1139              		.loc 1 2696 0
 1140 0000 4001     		lsls	r0, r0, #5
 1141              	.LVL105:
 1142 0002 024B     		ldr	r3, .L91
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 71


 1143 0004 1818     		adds	r0, r3, r0
 1144 0006 4368     		ldr	r3, [r0, #4]
 1145              	.LVL106:
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
 1146              		.loc 1 2699 0
 1147 0008 5981     		strh	r1, [r3, #10]
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1148              		.loc 1 2705 0
 1149              		@ sp needed
 1150 000a 7047     		bx	lr
 1151              	.L92:
 1152              		.align	2
 1153              	.L91:
 1154 000c 00000000 		.word	CapSense_1_dsFlash
 1155              		.cfi_endproc
 1156              	.LFE23:
 1157              		.size	CapSense_1_SsCSDSetColSnsClkDivider, .-CapSense_1_SsCSDSetColSnsClkDivider
 1158              		.section	.text.CapSense_1_SsCSDCalcPrsSize,"ax",%progbits
 1159              		.align	2
 1160              		.global	CapSense_1_SsCSDCalcPrsSize
 1161              		.code	16
 1162              		.thumb_func
 1163              		.type	CapSense_1_SsCSDCalcPrsSize, %function
 1164              	CapSense_1_SsCSDCalcPrsSize:
 1165              	.LFB24:
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 72


2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1166              		.loc 1 2775 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 0
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170              		@ link register save eliminated.
 1171              	.LVL107:
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 73


2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
 1172              		.loc 1 2784 0
 1173 0000 0203     		lsls	r2, r0, #12
 1174 0002 121A     		subs	r2, r2, r0
 1175 0004 0123     		movs	r3, #1
 1176 0006 8B40     		lsls	r3, r3, r1
 1177 0008 013B     		subs	r3, r3, #1
 1178 000a 9A42     		cmp	r2, r3
 1179 000c 05D9     		bls	.L95
2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
 1180              		.loc 1 2789 0
 1181 000e 0202     		lsls	r2, r0, #8
 1182 0010 101A     		subs	r0, r2, r0
 1183              	.LVL108:
 1184 0012 8342     		cmp	r3, r0
 1185 0014 03D3     		bcc	.L96
2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
 1186              		.loc 1 2792 0
 1187 0016 4020     		movs	r0, #64
 1188 0018 02E0     		b	.L94
 1189              	.LVL109:
 1190              	.L95:
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 1191              		.loc 1 2787 0
 1192 001a C020     		movs	r0, #192
 1193              	.LVL110:
 1194 001c 00E0     		b	.L94
 1195              	.L96:
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
 1196              		.loc 1 2797 0
 1197 001e 0020     		movs	r0, #0
 1198              	.L94:
 1199              	.LVL111:
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
 1200              		.loc 1 2800 0
 1201 0020 C0B2     		uxtb	r0, r0
 1202              	.LVL112:
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1203              		.loc 1 2801 0
 1204              		@ sp needed
 1205 0022 7047     		bx	lr
 1206              		.cfi_endproc
 1207              	.LFE24:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 74


 1208              		.size	CapSense_1_SsCSDCalcPrsSize, .-CapSense_1_SsCSDCalcPrsSize
 1209              		.section	.text.CapSense_1_SsSetWidgetSenseClkSrc,"ax",%progbits
 1210              		.align	2
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	CapSense_1_SsSetWidgetSenseClkSrc, %function
 1214              	CapSense_1_SsSetWidgetSenseClkSrc:
 1215              	.LFB20:
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
 1216              		.loc 1 2239 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              	.LVL113:
 1221 0000 10B5     		push	{r4, lr}
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 4, -8
 1224              		.cfi_offset 14, -4
 1225 0002 0C00     		movs	r4, r1
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1226              		.loc 1 2251 0
 1227 0004 FFF7FEFF 		bl	CapSense_1_SsCSDGetColSnsClkDivider
 1228              	.LVL114:
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
 1229              		.loc 1 2271 0
 1230 0008 4000     		lsls	r0, r0, #1
 1231              	.LVL115:
 1232 000a 2188     		ldrh	r1, [r4]
 1233 000c FFF7FEFF 		bl	CapSense_1_SsCSDCalcPrsSize
 1234              	.LVL116:
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1235              		.loc 1 2280 0
 1236 0010 2073     		strb	r0, [r4, #12]
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 1237              		.loc 1 2315 0
 1238              		@ sp needed
 1239              	.LVL117:
 1240 0012 10BD     		pop	{r4, pc}
 1241              		.cfi_endproc
 1242              	.LFE20:
 1243              		.size	CapSense_1_SsSetWidgetSenseClkSrc, .-CapSense_1_SsSetWidgetSenseClkSrc
 1244              		.global	__aeabi_uidiv
 1245              		.section	.text.CapSense_1_SsAutoTune,"ax",%progbits
 1246              		.align	2
 1247              		.global	CapSense_1_SsAutoTune
 1248              		.code	16
 1249              		.thumb_func
 1250              		.type	CapSense_1_SsAutoTune, %function
 1251              	CapSense_1_SsAutoTune:
 1252              	.LFB16:
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1253              		.loc 1 1576 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 64
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1258              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 75


 1259              		.cfi_offset 4, -20
 1260              		.cfi_offset 5, -16
 1261              		.cfi_offset 6, -12
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0002 91B0     		sub	sp, sp, #68
 1265              		.cfi_def_cfa_offset 88
 1266              	.LVL118:
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
 1267              		.loc 1 1590 0
 1268 0004 01AC     		add	r4, sp, #4
 1269 0006 FA23     		movs	r3, #250
 1270 0008 9B00     		lsls	r3, r3, #2
 1271 000a 2380     		strh	r3, [r4]
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
 1272              		.loc 1 1591 0
 1273 000c C833     		adds	r3, r3, #200
 1274 000e 6380     		strh	r3, [r4, #2]
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1275              		.loc 1 1592 0
 1276 0010 A380     		strh	r3, [r4, #4]
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 1277              		.loc 1 1606 0
 1278 0012 2223     		movs	r3, #34
 1279 0014 3C4A     		ldr	r2, .L109
 1280 0016 D15C     		ldrb	r1, [r2, r3]
 1281 0018 3C48     		ldr	r0, .L109+4
 1282 001a FFF7FEFF 		bl	__aeabi_uidiv
 1283              	.LVL119:
 1284 001e 4008     		lsrs	r0, r0, #1
 1285 0020 A081     		strh	r0, [r4, #12]
 1286              	.LVL120:
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1287              		.loc 1 1623 0
 1288 0022 0025     		movs	r5, #0
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 1289              		.loc 1 1577 0
 1290 0024 0026     		movs	r6, #0
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1291              		.loc 1 1623 0
 1292 0026 37E0     		b	.L99
 1293              	.LVL121:
 1294              	.L103:
1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1295              		.loc 1 1628 0
 1296 0028 6B01     		lsls	r3, r5, #5
 1297 002a 394A     		ldr	r2, .L109+8
 1298 002c D318     		adds	r3, r2, r3
 1299 002e 5C68     		ldr	r4, [r3, #4]
 1300              	.LVL122:
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1301              		.loc 1 1632 0
 1302 0030 0C23     		movs	r3, #12
 1303 0032 2380     		strh	r3, [r4]
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
 1304              		.loc 1 1635 0
 1305 0034 0023     		movs	r3, #0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 76


 1306 0036 2373     		strb	r3, [r4, #12]
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 1307              		.loc 1 1636 0
 1308 0038 01AF     		add	r7, sp, #4
 1309 003a B889     		ldrh	r0, [r7, #12]
 1310 003c 3549     		ldr	r1, .L109+12
 1311 003e FFF7FEFF 		bl	__aeabi_uidiv
 1312              	.LVL123:
 1313 0042 6081     		strh	r0, [r4, #10]
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1314              		.loc 1 1647 0
 1315 0044 5521     		movs	r1, #85
 1316 0046 2800     		movs	r0, r5
 1317 0048 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1318              	.LVL124:
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1319              		.loc 1 1696 0
 1320 004c 2300     		movs	r3, r4
 1321 004e 0A33     		adds	r3, r3, #10
 1322 0050 3B61     		str	r3, [r7, #16]
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1323              		.loc 1 1699 0
 1324 0052 314B     		ldr	r3, .L109+16
 1325 0054 1B78     		ldrb	r3, [r3]
 1326 0056 3B76     		strb	r3, [r7, #24]
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
 1327              		.loc 1 1702 0
 1328 0058 304B     		ldr	r3, .L109+20
 1329 005a 1888     		ldrh	r0, [r3]
 1330 005c FA23     		movs	r3, #250
 1331 005e 9B00     		lsls	r3, r3, #2
 1332 0060 5843     		muls	r0, r3
 1333 0062 2F49     		ldr	r1, .L109+24
 1334 0064 FFF7FEFF 		bl	__aeabi_uidiv
 1335              	.LVL125:
 1336 0068 F881     		strh	r0, [r7, #14]
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1337              		.loc 1 1706 0
 1338 006a 3800     		movs	r0, r7
 1339 006c FFF7FEFF 		bl	SmartSense_TunePrescalers
 1340              	.LVL126:
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1341              		.loc 1 1708 0
 1342 0070 2C4B     		ldr	r3, .L109+28
 1343 0072 9842     		cmp	r0, r3
 1344 0074 03D9     		bls	.L101
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1345              		.loc 1 1710 0
 1346 0076 0626     		movs	r6, #6
 1347              	.LVL127:
 1348 0078 01E0     		b	.L101
 1349              	.LVL128:
 1350              	.L102:
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1351              		.loc 1 1720 0
 1352 007a 5B00     		lsls	r3, r3, #1
 1353 007c 6381     		strh	r3, [r4, #10]
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 77


 1354              	.LVL129:
 1355              	.L101:
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1356              		.loc 1 1717 0
 1357 007e 01AB     		add	r3, sp, #4
 1358 0080 9989     		ldrh	r1, [r3, #12]
 1359 0082 6389     		ldrh	r3, [r4, #10]
 1360 0084 284A     		ldr	r2, .L109+32
 1361 0086 5A43     		muls	r2, r3
 1362 0088 9142     		cmp	r1, r2
 1363 008a F6D8     		bhi	.L102
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1364              		.loc 1 1717 0 is_stmt 0 discriminator 1
 1365 008c 002B     		cmp	r3, #0
 1366 008e F4D0     		beq	.L102
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1367              		.loc 1 1735 0 is_stmt 1
 1368 0090 AA00     		lsls	r2, r5, #2
 1369 0092 08AB     		add	r3, sp, #32
 1370 0094 D050     		str	r0, [r2, r3]
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1371              		.loc 1 1623 0
 1372 0096 0135     		adds	r5, r5, #1
 1373              	.LVL130:
 1374              	.L99:
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1375              		.loc 1 1623 0 is_stmt 0 discriminator 1
 1376 0098 072D     		cmp	r5, #7
 1377 009a C5D9     		bls	.L103
 1378 009c 0024     		movs	r4, #0
 1379 009e 1CE0     		b	.L104
 1380              	.LVL131:
 1381              	.L105:
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1382              		.loc 1 1769 0 is_stmt 1
 1383 00a0 6301     		lsls	r3, r4, #5
 1384 00a2 1B4A     		ldr	r2, .L109+8
 1385 00a4 D318     		adds	r3, r2, r3
 1386 00a6 5D68     		ldr	r5, [r3, #4]
 1387              	.LVL132:
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1388              		.loc 1 1773 0
 1389 00a8 5521     		movs	r1, #85
 1390 00aa 2000     		movs	r0, r4
 1391 00ac FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1392              	.LVL133:
 1393 00b0 0643     		orrs	r6, r0
 1394              	.LVL134:
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1395              		.loc 1 1776 0
 1396 00b2 2B00     		movs	r3, r5
 1397 00b4 0A33     		adds	r3, r3, #10
 1398 00b6 01A8     		add	r0, sp, #4
 1399 00b8 0361     		str	r3, [r0, #16]
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1400              		.loc 1 1779 0
 1401 00ba A200     		lsls	r2, r4, #2
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 78


 1402 00bc 08AB     		add	r3, sp, #32
 1403 00be D358     		ldr	r3, [r2, r3]
 1404 00c0 8360     		str	r3, [r0, #8]
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1405              		.loc 1 1782 0
 1406 00c2 154B     		ldr	r3, .L109+16
 1407 00c4 1B78     		ldrb	r3, [r3]
 1408 00c6 0376     		strb	r3, [r0, #24]
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1409              		.loc 1 1805 0
 1410 00c8 EB89     		ldrh	r3, [r5, #14]
 1411 00ca C380     		strh	r3, [r0, #6]
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1412              		.loc 1 1808 0
 1413 00cc 2B00     		movs	r3, r5
 1414 00ce 1033     		adds	r3, r3, #16
 1415 00d0 4361     		str	r3, [r0, #20]
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 1416              		.loc 1 1811 0
 1417 00d2 FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1418              	.LVL135:
 1419 00d6 2880     		strh	r0, [r5]
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1420              		.loc 1 1764 0
 1421 00d8 0134     		adds	r4, r4, #1
 1422              	.LVL136:
 1423              	.L104:
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1424              		.loc 1 1764 0 is_stmt 0 discriminator 1
 1425 00da 072C     		cmp	r4, #7
 1426 00dc E0D9     		bls	.L105
 1427 00de 0024     		movs	r4, #0
 1428              	.LVL137:
 1429 00e0 0CE0     		b	.L106
 1430              	.LVL138:
 1431              	.L107:
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1432              		.loc 1 1828 0 is_stmt 1
 1433 00e2 6301     		lsls	r3, r4, #5
 1434 00e4 0A4A     		ldr	r2, .L109+8
 1435 00e6 D318     		adds	r3, r2, r3
 1436 00e8 5968     		ldr	r1, [r3, #4]
 1437              	.LVL139:
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1438              		.loc 1 1831 0
 1439 00ea 2000     		movs	r0, r4
 1440 00ec FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1441              	.LVL140:
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1442              		.loc 1 1834 0
 1443 00f0 5521     		movs	r1, #85
 1444 00f2 2000     		movs	r0, r4
 1445 00f4 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1446              	.LVL141:
 1447 00f8 0643     		orrs	r6, r0
 1448              	.LVL142:
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 79


 1449              		.loc 1 1823 0
 1450 00fa 0134     		adds	r4, r4, #1
 1451              	.LVL143:
 1452              	.L106:
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1453              		.loc 1 1823 0 is_stmt 0 discriminator 1
 1454 00fc 072C     		cmp	r4, #7
 1455 00fe F0D9     		bls	.L107
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
 1456              		.loc 1 1843 0 is_stmt 1
 1457 0100 3000     		movs	r0, r6
 1458 0102 11B0     		add	sp, sp, #68
 1459              		@ sp needed
 1460              	.LVL144:
 1461              	.LVL145:
 1462 0104 F0BD     		pop	{r4, r5, r6, r7, pc}
 1463              	.L110:
 1464 0106 C046     		.align	2
 1465              	.L109:
 1466 0108 00000000 		.word	CapSense_1_dsRam
 1467 010c C05D0000 		.word	24000
 1468 0110 00000000 		.word	CapSense_1_dsFlash
 1469 0114 DC050000 		.word	1500
 1470 0118 00000000 		.word	CapSense_1_calibratedIdac
 1471 011c 00000000 		.word	CapSense_1_calibratedRawcount
 1472 0120 FF0F0000 		.word	4095
 1473 0124 870D0100 		.word	68999
 1474 0128 38310000 		.word	12600
 1475              		.cfi_endproc
 1476              	.LFE16:
 1477              		.size	CapSense_1_SsAutoTune, .-CapSense_1_SsAutoTune
 1478              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1479              		.align	2
 1480              		.global	CapSense_1_SsInitializeSourceSenseClk
 1481              		.code	16
 1482              		.thumb_func
 1483              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1484              	CapSense_1_SsInitializeSourceSenseClk:
 1485              	.LFB19:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1486              		.loc 1 2186 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 0, uses_anonymous_args = 0
 1490 0000 10B5     		push	{r4, lr}
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 4, -8
 1493              		.cfi_offset 14, -4
 1494              	.LVL146:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1495              		.loc 1 2190 0
 1496 0002 0024     		movs	r4, #0
 1497 0004 07E0     		b	.L112
 1498              	.LVL147:
 1499              	.L113:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1500              		.loc 1 2192 0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 80


 1501 0006 6301     		lsls	r3, r4, #5
 1502 0008 044A     		ldr	r2, .L114
 1503 000a D318     		adds	r3, r2, r3
 1504 000c 5968     		ldr	r1, [r3, #4]
 1505              	.LVL148:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1506              		.loc 1 2198 0
 1507 000e 2000     		movs	r0, r4
 1508 0010 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1509              	.LVL149:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1510              		.loc 1 2190 0
 1511 0014 0134     		adds	r4, r4, #1
 1512              	.LVL150:
 1513              	.L112:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1514              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1515 0016 072C     		cmp	r4, #7
 1516 0018 F5D9     		bls	.L113
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1517              		.loc 1 2213 0 is_stmt 1
 1518              		@ sp needed
 1519              	.LVL151:
 1520 001a 10BD     		pop	{r4, pc}
 1521              	.L115:
 1522              		.align	2
 1523              	.L114:
 1524 001c 00000000 		.word	CapSense_1_dsFlash
 1525              		.cfi_endproc
 1526              	.LFE19:
 1527              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 1528              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1529              		.align	2
 1530              		.global	CapSense_1_SsInitialize
 1531              		.code	16
 1532              		.thumb_func
 1533              		.type	CapSense_1_SsInitialize, %function
 1534              	CapSense_1_SsInitialize:
 1535              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1536              		.loc 1 517 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 1540 0000 10B5     		push	{r4, lr}
 1541              		.cfi_def_cfa_offset 8
 1542              		.cfi_offset 4, -8
 1543              		.cfi_offset 14, -4
 1544              	.LVL152:
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 1545              		.loc 1 551 0
 1546 0002 FFF7FEFF 		bl	CapSense_1_SsTrimIdacs
 1547              	.LVL153:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1548              		.loc 1 556 0
 1549 0006 FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1550              	.LVL154:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 81


 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1551              		.loc 1 561 0
 1552 000a FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1553              	.LVL155:
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 1554              		.loc 1 567 0
 1555 000e 0120     		movs	r0, #1
 1556 0010 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1557              	.LVL156:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1558              		.loc 1 578 0
 1559 0014 0020     		movs	r0, #0
 1560              		@ sp needed
 1561 0016 10BD     		pop	{r4, pc}
 1562              		.cfi_endproc
 1563              	.LFE4:
 1564              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1565              		.comm	CapSense_1_curSnsIOPtr,4,4
 1566              		.comm	CapSense_1_curRamSnsPtr,4,4
 1567              		.global	CapSense_1_requestScanAllWidget
 1568              		.global	CapSense_1_sensorIndex
 1569              		.global	CapSense_1_widgetIndex
 1570              		.global	CapSense_1_scanFreqIndex
 1571              		.global	CapSense_1_currentSenseMethod
 1572              		.section	.rodata
 1573              		.type	CapSense_1_scanFreqIndex, %object
 1574              		.size	CapSense_1_scanFreqIndex, 1
 1575              	CapSense_1_scanFreqIndex:
 1576 0000 00       		.space	1
 1577              		.bss
 1578              		.set	.LANCHOR0,. + 0
 1579              		.type	CapSense_1_currentSenseMethod, %object
 1580              		.size	CapSense_1_currentSenseMethod, 1
 1581              	CapSense_1_currentSenseMethod:
 1582 0000 00       		.space	1
 1583              		.type	CapSense_1_requestScanAllWidget, %object
 1584              		.size	CapSense_1_requestScanAllWidget, 1
 1585              	CapSense_1_requestScanAllWidget:
 1586 0001 00       		.space	1
 1587              		.type	CapSense_1_widgetIndex, %object
 1588              		.size	CapSense_1_widgetIndex, 1
 1589              	CapSense_1_widgetIndex:
 1590 0002 00       		.space	1
 1591              		.type	CapSense_1_sensorIndex, %object
 1592              		.size	CapSense_1_sensorIndex, 1
 1593              	CapSense_1_sensorIndex:
 1594 0003 00       		.space	1
 1595              		.text
 1596              	.Letext0:
 1597              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1598              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1599              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 1600              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1601              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 1602              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1603              		.file 8 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1604              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 82


 1605              	.Ldebug_info0:
 1606 0000 0D110000 		.4byte	0x110d
 1607 0004 0400     		.2byte	0x4
 1608 0006 00000000 		.4byte	.Ldebug_abbrev0
 1609 000a 04       		.byte	0x4
 1610 000b 01       		.uleb128 0x1
 1611 000c BB030000 		.4byte	.LASF198
 1612 0010 0C       		.byte	0xc
 1613 0011 8A070000 		.4byte	.LASF199
 1614 0015 D2040000 		.4byte	.LASF200
 1615 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1616 001d 00000000 		.4byte	0
 1617 0021 00000000 		.4byte	.Ldebug_line0
 1618 0025 02       		.uleb128 0x2
 1619 0026 01       		.byte	0x1
 1620 0027 06       		.byte	0x6
 1621 0028 8C0B0000 		.4byte	.LASF0
 1622 002c 02       		.uleb128 0x2
 1623 002d 01       		.byte	0x1
 1624 002e 08       		.byte	0x8
 1625 002f E90A0000 		.4byte	.LASF1
 1626 0033 02       		.uleb128 0x2
 1627 0034 02       		.byte	0x2
 1628 0035 05       		.byte	0x5
 1629 0036 A4080000 		.4byte	.LASF2
 1630 003a 02       		.uleb128 0x2
 1631 003b 02       		.byte	0x2
 1632 003c 07       		.byte	0x7
 1633 003d 9D0B0000 		.4byte	.LASF3
 1634 0041 02       		.uleb128 0x2
 1635 0042 04       		.byte	0x4
 1636 0043 05       		.byte	0x5
 1637 0044 D2080000 		.4byte	.LASF4
 1638 0048 02       		.uleb128 0x2
 1639 0049 04       		.byte	0x4
 1640 004a 07       		.byte	0x7
 1641 004b 5B0A0000 		.4byte	.LASF5
 1642 004f 02       		.uleb128 0x2
 1643 0050 08       		.byte	0x8
 1644 0051 05       		.byte	0x5
 1645 0052 48060000 		.4byte	.LASF6
 1646 0056 02       		.uleb128 0x2
 1647 0057 08       		.byte	0x8
 1648 0058 07       		.byte	0x7
 1649 0059 1F030000 		.4byte	.LASF7
 1650 005d 03       		.uleb128 0x3
 1651 005e 04       		.byte	0x4
 1652 005f 05       		.byte	0x5
 1653 0060 696E7400 		.ascii	"int\000"
 1654 0064 02       		.uleb128 0x2
 1655 0065 04       		.byte	0x4
 1656 0066 07       		.byte	0x7
 1657 0067 8B000000 		.4byte	.LASF8
 1658 006b 04       		.uleb128 0x4
 1659 006c 290C0000 		.4byte	.LASF9
 1660 0070 02       		.byte	0x2
 1661 0071 E401     		.2byte	0x1e4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 83


 1662 0073 2C000000 		.4byte	0x2c
 1663 0077 04       		.uleb128 0x4
 1664 0078 F8050000 		.4byte	.LASF10
 1665 007c 02       		.byte	0x2
 1666 007d E501     		.2byte	0x1e5
 1667 007f 3A000000 		.4byte	0x3a
 1668 0083 04       		.uleb128 0x4
 1669 0084 2D070000 		.4byte	.LASF11
 1670 0088 02       		.byte	0x2
 1671 0089 E601     		.2byte	0x1e6
 1672 008b 48000000 		.4byte	0x48
 1673 008f 02       		.uleb128 0x2
 1674 0090 04       		.byte	0x4
 1675 0091 04       		.byte	0x4
 1676 0092 DE020000 		.4byte	.LASF12
 1677 0096 02       		.uleb128 0x2
 1678 0097 08       		.byte	0x8
 1679 0098 04       		.byte	0x4
 1680 0099 2F0C0000 		.4byte	.LASF13
 1681 009d 02       		.uleb128 0x2
 1682 009e 01       		.byte	0x1
 1683 009f 08       		.byte	0x8
 1684 00a0 B8050000 		.4byte	.LASF14
 1685 00a4 04       		.uleb128 0x4
 1686 00a5 E00A0000 		.4byte	.LASF15
 1687 00a9 02       		.byte	0x2
 1688 00aa 8602     		.2byte	0x286
 1689 00ac 48000000 		.4byte	0x48
 1690 00b0 04       		.uleb128 0x4
 1691 00b1 59010000 		.4byte	.LASF16
 1692 00b5 02       		.byte	0x2
 1693 00b6 8E02     		.2byte	0x28e
 1694 00b8 BC000000 		.4byte	0xbc
 1695 00bc 05       		.uleb128 0x5
 1696 00bd 6B000000 		.4byte	0x6b
 1697 00c1 04       		.uleb128 0x4
 1698 00c2 14080000 		.4byte	.LASF17
 1699 00c6 02       		.byte	0x2
 1700 00c7 9002     		.2byte	0x290
 1701 00c9 CD000000 		.4byte	0xcd
 1702 00cd 05       		.uleb128 0x5
 1703 00ce 83000000 		.4byte	0x83
 1704 00d2 04       		.uleb128 0x4
 1705 00d3 ED060000 		.4byte	.LASF18
 1706 00d7 02       		.byte	0x2
 1707 00d8 A002     		.2byte	0x2a0
 1708 00da DE000000 		.4byte	0xde
 1709 00de 06       		.uleb128 0x6
 1710 00df 04       		.byte	0x4
 1711 00e0 E4000000 		.4byte	0xe4
 1712 00e4 07       		.uleb128 0x7
 1713 00e5 04       		.uleb128 0x4
 1714 00e6 56060000 		.4byte	.LASF19
 1715 00ea 03       		.byte	0x3
 1716 00eb 3901     		.2byte	0x139
 1717 00ed 77000000 		.4byte	0x77
 1718 00f1 04       		.uleb128 0x4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 84


 1719 00f2 67030000 		.4byte	.LASF20
 1720 00f6 03       		.byte	0x3
 1721 00f7 3D01     		.2byte	0x13d
 1722 00f9 6B000000 		.4byte	0x6b
 1723 00fd 08       		.uleb128 0x8
 1724 00fe 1C       		.byte	0x1c
 1725 00ff 04       		.byte	0x4
 1726 0100 2F       		.byte	0x2f
 1727 0101 7E010000 		.4byte	0x17e
 1728 0105 09       		.uleb128 0x9
 1729 0106 04080000 		.4byte	.LASF21
 1730 010a 04       		.byte	0x4
 1731 010b 34       		.byte	0x34
 1732 010c 77000000 		.4byte	0x77
 1733 0110 00       		.byte	0
 1734 0111 09       		.uleb128 0x9
 1735 0112 740A0000 		.4byte	.LASF22
 1736 0116 04       		.byte	0x4
 1737 0117 39       		.byte	0x39
 1738 0118 77000000 		.4byte	0x77
 1739 011c 02       		.byte	0x2
 1740 011d 09       		.uleb128 0x9
 1741 011e 99010000 		.4byte	.LASF23
 1742 0122 04       		.byte	0x4
 1743 0123 3E       		.byte	0x3e
 1744 0124 77000000 		.4byte	0x77
 1745 0128 04       		.byte	0x4
 1746 0129 09       		.uleb128 0x9
 1747 012a CD090000 		.4byte	.LASF24
 1748 012e 04       		.byte	0x4
 1749 012f 43       		.byte	0x43
 1750 0130 77000000 		.4byte	0x77
 1751 0134 06       		.byte	0x6
 1752 0135 09       		.uleb128 0x9
 1753 0136 0E0B0000 		.4byte	.LASF25
 1754 013a 04       		.byte	0x4
 1755 013b 48       		.byte	0x48
 1756 013c 83000000 		.4byte	0x83
 1757 0140 08       		.byte	0x8
 1758 0141 09       		.uleb128 0x9
 1759 0142 D8010000 		.4byte	.LASF26
 1760 0146 04       		.byte	0x4
 1761 0147 4D       		.byte	0x4d
 1762 0148 77000000 		.4byte	0x77
 1763 014c 0C       		.byte	0xc
 1764 014d 09       		.uleb128 0x9
 1765 014e 6A040000 		.4byte	.LASF27
 1766 0152 04       		.byte	0x4
 1767 0153 52       		.byte	0x52
 1768 0154 77000000 		.4byte	0x77
 1769 0158 0E       		.byte	0xe
 1770 0159 09       		.uleb128 0x9
 1771 015a B6070000 		.4byte	.LASF28
 1772 015e 04       		.byte	0x4
 1773 015f 57       		.byte	0x57
 1774 0160 7E010000 		.4byte	0x17e
 1775 0164 10       		.byte	0x10
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 85


 1776 0165 09       		.uleb128 0x9
 1777 0166 AC040000 		.4byte	.LASF29
 1778 016a 04       		.byte	0x4
 1779 016b 5C       		.byte	0x5c
 1780 016c 7E010000 		.4byte	0x17e
 1781 0170 14       		.byte	0x14
 1782 0171 09       		.uleb128 0x9
 1783 0172 85070000 		.4byte	.LASF30
 1784 0176 04       		.byte	0x4
 1785 0177 61       		.byte	0x61
 1786 0178 6B000000 		.4byte	0x6b
 1787 017c 18       		.byte	0x18
 1788 017d 00       		.byte	0
 1789 017e 06       		.uleb128 0x6
 1790 017f 04       		.byte	0x4
 1791 0180 77000000 		.4byte	0x77
 1792 0184 0A       		.uleb128 0xa
 1793 0185 B00B0000 		.4byte	.LASF31
 1794 0189 04       		.byte	0x4
 1795 018a 63       		.byte	0x63
 1796 018b FD000000 		.4byte	0xfd
 1797 018f 08       		.uleb128 0x8
 1798 0190 0C       		.byte	0xc
 1799 0191 04       		.byte	0x4
 1800 0192 6E       		.byte	0x6e
 1801 0193 EC010000 		.4byte	0x1ec
 1802 0197 09       		.uleb128 0x9
 1803 0198 5E0C0000 		.4byte	.LASF32
 1804 019c 04       		.byte	0x4
 1805 019d 73       		.byte	0x73
 1806 019e 77000000 		.4byte	0x77
 1807 01a2 00       		.byte	0
 1808 01a3 09       		.uleb128 0x9
 1809 01a4 650C0000 		.4byte	.LASF33
 1810 01a8 04       		.byte	0x4
 1811 01a9 77       		.byte	0x77
 1812 01aa 77000000 		.4byte	0x77
 1813 01ae 02       		.byte	0x2
 1814 01af 09       		.uleb128 0x9
 1815 01b0 6C0C0000 		.4byte	.LASF34
 1816 01b4 04       		.byte	0x4
 1817 01b5 7B       		.byte	0x7b
 1818 01b6 77000000 		.4byte	0x77
 1819 01ba 04       		.byte	0x4
 1820 01bb 09       		.uleb128 0x9
 1821 01bc 730C0000 		.4byte	.LASF35
 1822 01c0 04       		.byte	0x4
 1823 01c1 7F       		.byte	0x7f
 1824 01c2 77000000 		.4byte	0x77
 1825 01c6 06       		.byte	0x6
 1826 01c7 09       		.uleb128 0x9
 1827 01c8 7A0C0000 		.4byte	.LASF36
 1828 01cc 04       		.byte	0x4
 1829 01cd 83       		.byte	0x83
 1830 01ce 77000000 		.4byte	0x77
 1831 01d2 08       		.byte	0x8
 1832 01d3 09       		.uleb128 0x9
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 86


 1833 01d4 810C0000 		.4byte	.LASF37
 1834 01d8 04       		.byte	0x4
 1835 01d9 87       		.byte	0x87
 1836 01da 6B000000 		.4byte	0x6b
 1837 01de 0A       		.byte	0xa
 1838 01df 09       		.uleb128 0x9
 1839 01e0 880C0000 		.4byte	.LASF38
 1840 01e4 04       		.byte	0x4
 1841 01e5 8B       		.byte	0x8b
 1842 01e6 6B000000 		.4byte	0x6b
 1843 01ea 0B       		.byte	0xb
 1844 01eb 00       		.byte	0
 1845 01ec 0A       		.uleb128 0xa
 1846 01ed 67050000 		.4byte	.LASF39
 1847 01f1 04       		.byte	0x4
 1848 01f2 8C       		.byte	0x8c
 1849 01f3 8F010000 		.4byte	0x18f
 1850 01f7 0B       		.uleb128 0xb
 1851 01f8 01       		.byte	0x1
 1852 01f9 2C000000 		.4byte	0x2c
 1853 01fd 05       		.byte	0x5
 1854 01fe 70       		.byte	0x70
 1855 01ff 22020000 		.4byte	0x222
 1856 0203 0C       		.uleb128 0xc
 1857 0204 4F070000 		.4byte	.LASF40
 1858 0208 00       		.byte	0
 1859 0209 0C       		.uleb128 0xc
 1860 020a 350A0000 		.4byte	.LASF41
 1861 020e 01       		.byte	0x1
 1862 020f 0C       		.uleb128 0xc
 1863 0210 2B090000 		.4byte	.LASF42
 1864 0214 02       		.byte	0x2
 1865 0215 0C       		.uleb128 0xc
 1866 0216 B3040000 		.4byte	.LASF43
 1867 021a 03       		.byte	0x3
 1868 021b 0C       		.uleb128 0xc
 1869 021c E6070000 		.4byte	.LASF44
 1870 0220 04       		.byte	0x4
 1871 0221 00       		.byte	0
 1872 0222 0A       		.uleb128 0xa
 1873 0223 84030000 		.4byte	.LASF45
 1874 0227 05       		.byte	0x5
 1875 0228 76       		.byte	0x76
 1876 0229 F7010000 		.4byte	0x1f7
 1877 022d 08       		.uleb128 0x8
 1878 022e 12       		.byte	0x12
 1879 022f 05       		.byte	0x5
 1880 0230 8E       		.byte	0x8e
 1881 0231 C6020000 		.4byte	0x2c6
 1882 0235 09       		.uleb128 0x9
 1883 0236 FF050000 		.4byte	.LASF46
 1884 023a 05       		.byte	0x5
 1885 023b 93       		.byte	0x93
 1886 023c 77000000 		.4byte	0x77
 1887 0240 00       		.byte	0
 1888 0241 09       		.uleb128 0x9
 1889 0242 B00A0000 		.4byte	.LASF47
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 87


 1890 0246 05       		.byte	0x5
 1891 0247 98       		.byte	0x98
 1892 0248 E5000000 		.4byte	0xe5
 1893 024c 02       		.byte	0x2
 1894 024d 09       		.uleb128 0x9
 1895 024e B0050000 		.4byte	.LASF48
 1896 0252 05       		.byte	0x5
 1897 0253 9D       		.byte	0x9d
 1898 0254 6B000000 		.4byte	0x6b
 1899 0258 04       		.byte	0x4
 1900 0259 09       		.uleb128 0x9
 1901 025a D9060000 		.4byte	.LASF49
 1902 025e 05       		.byte	0x5
 1903 025f A2       		.byte	0xa2
 1904 0260 6B000000 		.4byte	0x6b
 1905 0264 05       		.byte	0x5
 1906 0265 09       		.uleb128 0x9
 1907 0266 34070000 		.4byte	.LASF50
 1908 026a 05       		.byte	0x5
 1909 026b A8       		.byte	0xa8
 1910 026c 6B000000 		.4byte	0x6b
 1911 0270 06       		.byte	0x6
 1912 0271 09       		.uleb128 0x9
 1913 0272 70060000 		.4byte	.LASF51
 1914 0276 05       		.byte	0x5
 1915 0277 AE       		.byte	0xae
 1916 0278 6B000000 		.4byte	0x6b
 1917 027c 07       		.byte	0x7
 1918 027d 09       		.uleb128 0x9
 1919 027e F7040000 		.4byte	.LASF52
 1920 0282 05       		.byte	0x5
 1921 0283 B5       		.byte	0xb5
 1922 0284 F1000000 		.4byte	0xf1
 1923 0288 08       		.byte	0x8
 1924 0289 09       		.uleb128 0x9
 1925 028a 790A0000 		.4byte	.LASF53
 1926 028e 05       		.byte	0x5
 1927 028f BC       		.byte	0xbc
 1928 0290 C6020000 		.4byte	0x2c6
 1929 0294 09       		.byte	0x9
 1930 0295 09       		.uleb128 0x9
 1931 0296 6E0B0000 		.4byte	.LASF54
 1932 029a 05       		.byte	0x5
 1933 029b C4       		.byte	0xc4
 1934 029c 77000000 		.4byte	0x77
 1935 02a0 0A       		.byte	0xa
 1936 02a1 09       		.uleb128 0x9
 1937 02a2 72080000 		.4byte	.LASF55
 1938 02a6 05       		.byte	0x5
 1939 02a7 C9       		.byte	0xc9
 1940 02a8 6B000000 		.4byte	0x6b
 1941 02ac 0C       		.byte	0xc
 1942 02ad 09       		.uleb128 0x9
 1943 02ae CD090000 		.4byte	.LASF24
 1944 02b2 05       		.byte	0x5
 1945 02b3 CF       		.byte	0xcf
 1946 02b4 77000000 		.4byte	0x77
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 88


 1947 02b8 0E       		.byte	0xe
 1948 02b9 09       		.uleb128 0x9
 1949 02ba AC040000 		.4byte	.LASF29
 1950 02be 05       		.byte	0x5
 1951 02bf D4       		.byte	0xd4
 1952 02c0 77000000 		.4byte	0x77
 1953 02c4 10       		.byte	0x10
 1954 02c5 00       		.byte	0
 1955 02c6 0D       		.uleb128 0xd
 1956 02c7 6B000000 		.4byte	0x6b
 1957 02cb D6020000 		.4byte	0x2d6
 1958 02cf 0E       		.uleb128 0xe
 1959 02d0 D6020000 		.4byte	0x2d6
 1960 02d4 00       		.byte	0
 1961 02d5 00       		.byte	0
 1962 02d6 02       		.uleb128 0x2
 1963 02d7 04       		.byte	0x4
 1964 02d8 07       		.byte	0x7
 1965 02d9 7F080000 		.4byte	.LASF56
 1966 02dd 0A       		.uleb128 0xa
 1967 02de 06070000 		.4byte	.LASF57
 1968 02e2 05       		.byte	0x5
 1969 02e3 D5       		.byte	0xd5
 1970 02e4 2D020000 		.4byte	0x22d
 1971 02e8 08       		.uleb128 0x8
 1972 02e9 12       		.byte	0x12
 1973 02ea 05       		.byte	0x5
 1974 02eb DA       		.byte	0xda
 1975 02ec 87030000 		.4byte	0x387
 1976 02f0 09       		.uleb128 0x9
 1977 02f1 FF050000 		.4byte	.LASF46
 1978 02f5 05       		.byte	0x5
 1979 02f6 DF       		.byte	0xdf
 1980 02f7 77000000 		.4byte	0x77
 1981 02fb 00       		.byte	0
 1982 02fc 09       		.uleb128 0x9
 1983 02fd B00A0000 		.4byte	.LASF47
 1984 0301 05       		.byte	0x5
 1985 0302 E4       		.byte	0xe4
 1986 0303 E5000000 		.4byte	0xe5
 1987 0307 02       		.byte	0x2
 1988 0308 09       		.uleb128 0x9
 1989 0309 B0050000 		.4byte	.LASF48
 1990 030d 05       		.byte	0x5
 1991 030e E9       		.byte	0xe9
 1992 030f 6B000000 		.4byte	0x6b
 1993 0313 04       		.byte	0x4
 1994 0314 09       		.uleb128 0x9
 1995 0315 D9060000 		.4byte	.LASF49
 1996 0319 05       		.byte	0x5
 1997 031a EE       		.byte	0xee
 1998 031b 6B000000 		.4byte	0x6b
 1999 031f 05       		.byte	0x5
 2000 0320 09       		.uleb128 0x9
 2001 0321 34070000 		.4byte	.LASF50
 2002 0325 05       		.byte	0x5
 2003 0326 F4       		.byte	0xf4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 89


 2004 0327 6B000000 		.4byte	0x6b
 2005 032b 06       		.byte	0x6
 2006 032c 09       		.uleb128 0x9
 2007 032d 70060000 		.4byte	.LASF51
 2008 0331 05       		.byte	0x5
 2009 0332 FA       		.byte	0xfa
 2010 0333 6B000000 		.4byte	0x6b
 2011 0337 07       		.byte	0x7
 2012 0338 0F       		.uleb128 0xf
 2013 0339 F7040000 		.4byte	.LASF52
 2014 033d 05       		.byte	0x5
 2015 033e 0101     		.2byte	0x101
 2016 0340 F1000000 		.4byte	0xf1
 2017 0344 08       		.byte	0x8
 2018 0345 0F       		.uleb128 0xf
 2019 0346 790A0000 		.4byte	.LASF53
 2020 034a 05       		.byte	0x5
 2021 034b 0801     		.2byte	0x108
 2022 034d C6020000 		.4byte	0x2c6
 2023 0351 09       		.byte	0x9
 2024 0352 0F       		.uleb128 0xf
 2025 0353 6E0B0000 		.4byte	.LASF54
 2026 0357 05       		.byte	0x5
 2027 0358 1001     		.2byte	0x110
 2028 035a 77000000 		.4byte	0x77
 2029 035e 0A       		.byte	0xa
 2030 035f 0F       		.uleb128 0xf
 2031 0360 72080000 		.4byte	.LASF55
 2032 0364 05       		.byte	0x5
 2033 0365 1501     		.2byte	0x115
 2034 0367 6B000000 		.4byte	0x6b
 2035 036b 0C       		.byte	0xc
 2036 036c 0F       		.uleb128 0xf
 2037 036d CD090000 		.4byte	.LASF24
 2038 0371 05       		.byte	0x5
 2039 0372 1B01     		.2byte	0x11b
 2040 0374 77000000 		.4byte	0x77
 2041 0378 0E       		.byte	0xe
 2042 0379 0F       		.uleb128 0xf
 2043 037a AC040000 		.4byte	.LASF29
 2044 037e 05       		.byte	0x5
 2045 037f 2001     		.2byte	0x120
 2046 0381 77000000 		.4byte	0x77
 2047 0385 10       		.byte	0x10
 2048 0386 00       		.byte	0
 2049 0387 04       		.uleb128 0x4
 2050 0388 D00C0000 		.4byte	.LASF58
 2051 038c 05       		.byte	0x5
 2052 038d 2101     		.2byte	0x121
 2053 038f E8020000 		.4byte	0x2e8
 2054 0393 10       		.uleb128 0x10
 2055 0394 90       		.byte	0x90
 2056 0395 05       		.byte	0x5
 2057 0396 2701     		.2byte	0x127
 2058 0398 05040000 		.4byte	0x405
 2059 039c 0F       		.uleb128 0xf
 2060 039d 49090000 		.4byte	.LASF59
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 90


 2061 03a1 05       		.byte	0x5
 2062 03a2 2C01     		.2byte	0x12c
 2063 03a4 87030000 		.4byte	0x387
 2064 03a8 00       		.byte	0
 2065 03a9 0F       		.uleb128 0xf
 2066 03aa 51090000 		.4byte	.LASF60
 2067 03ae 05       		.byte	0x5
 2068 03af 3101     		.2byte	0x131
 2069 03b1 87030000 		.4byte	0x387
 2070 03b5 12       		.byte	0x12
 2071 03b6 0F       		.uleb128 0xf
 2072 03b7 59090000 		.4byte	.LASF61
 2073 03bb 05       		.byte	0x5
 2074 03bc 3601     		.2byte	0x136
 2075 03be 87030000 		.4byte	0x387
 2076 03c2 24       		.byte	0x24
 2077 03c3 0F       		.uleb128 0xf
 2078 03c4 61090000 		.4byte	.LASF62
 2079 03c8 05       		.byte	0x5
 2080 03c9 3B01     		.2byte	0x13b
 2081 03cb 87030000 		.4byte	0x387
 2082 03cf 36       		.byte	0x36
 2083 03d0 0F       		.uleb128 0xf
 2084 03d1 71090000 		.4byte	.LASF63
 2085 03d5 05       		.byte	0x5
 2086 03d6 4001     		.2byte	0x140
 2087 03d8 87030000 		.4byte	0x387
 2088 03dc 48       		.byte	0x48
 2089 03dd 0F       		.uleb128 0xf
 2090 03de 79090000 		.4byte	.LASF64
 2091 03e2 05       		.byte	0x5
 2092 03e3 4501     		.2byte	0x145
 2093 03e5 87030000 		.4byte	0x387
 2094 03e9 5A       		.byte	0x5a
 2095 03ea 0F       		.uleb128 0xf
 2096 03eb 69090000 		.4byte	.LASF65
 2097 03ef 05       		.byte	0x5
 2098 03f0 4A01     		.2byte	0x14a
 2099 03f2 87030000 		.4byte	0x387
 2100 03f6 6C       		.byte	0x6c
 2101 03f7 0F       		.uleb128 0xf
 2102 03f8 81090000 		.4byte	.LASF66
 2103 03fc 05       		.byte	0x5
 2104 03fd 4F01     		.2byte	0x14f
 2105 03ff 87030000 		.4byte	0x387
 2106 0403 7E       		.byte	0x7e
 2107 0404 00       		.byte	0
 2108 0405 04       		.uleb128 0x4
 2109 0406 52020000 		.4byte	.LASF67
 2110 040a 05       		.byte	0x5
 2111 040b 5001     		.2byte	0x150
 2112 040d 93030000 		.4byte	0x393
 2113 0411 10       		.uleb128 0x10
 2114 0412 0A       		.byte	0xa
 2115 0413 05       		.byte	0x5
 2116 0414 5601     		.2byte	0x156
 2117 0416 69040000 		.4byte	0x469
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 91


 2118 041a 11       		.uleb128 0x11
 2119 041b 72617700 		.ascii	"raw\000"
 2120 041f 05       		.byte	0x5
 2121 0420 5B01     		.2byte	0x15b
 2122 0422 69040000 		.4byte	0x469
 2123 0426 00       		.byte	0
 2124 0427 0F       		.uleb128 0xf
 2125 0428 980B0000 		.4byte	.LASF68
 2126 042c 05       		.byte	0x5
 2127 042d 6001     		.2byte	0x160
 2128 042f 69040000 		.4byte	0x469
 2129 0433 02       		.byte	0x2
 2130 0434 0F       		.uleb128 0xf
 2131 0435 D80A0000 		.4byte	.LASF69
 2132 0439 05       		.byte	0x5
 2133 043a 6601     		.2byte	0x166
 2134 043c C6020000 		.4byte	0x2c6
 2135 0440 04       		.byte	0x4
 2136 0441 0F       		.uleb128 0xf
 2137 0442 17090000 		.4byte	.LASF70
 2138 0446 05       		.byte	0x5
 2139 0447 6B01     		.2byte	0x16b
 2140 0449 E5000000 		.4byte	0xe5
 2141 044d 06       		.byte	0x6
 2142 044e 0F       		.uleb128 0xf
 2143 044f 360C0000 		.4byte	.LASF71
 2144 0453 05       		.byte	0x5
 2145 0454 7001     		.2byte	0x170
 2146 0456 79040000 		.4byte	0x479
 2147 045a 08       		.byte	0x8
 2148 045b 0F       		.uleb128 0xf
 2149 045c 39060000 		.4byte	.LASF72
 2150 0460 05       		.byte	0x5
 2151 0461 7501     		.2byte	0x175
 2152 0463 C6020000 		.4byte	0x2c6
 2153 0467 09       		.byte	0x9
 2154 0468 00       		.byte	0
 2155 0469 0D       		.uleb128 0xd
 2156 046a 77000000 		.4byte	0x77
 2157 046e 79040000 		.4byte	0x479
 2158 0472 0E       		.uleb128 0xe
 2159 0473 D6020000 		.4byte	0x2d6
 2160 0477 00       		.byte	0
 2161 0478 00       		.byte	0
 2162 0479 0D       		.uleb128 0xd
 2163 047a F1000000 		.4byte	0xf1
 2164 047e 89040000 		.4byte	0x489
 2165 0482 0E       		.uleb128 0xe
 2166 0483 D6020000 		.4byte	0x2d6
 2167 0487 00       		.byte	0
 2168 0488 00       		.byte	0
 2169 0489 04       		.uleb128 0x4
 2170 048a 440C0000 		.4byte	.LASF73
 2171 048e 05       		.byte	0x5
 2172 048f 7601     		.2byte	0x176
 2173 0491 11040000 		.4byte	0x411
 2174 0495 10       		.uleb128 0x10
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 92


 2175 0496 50       		.byte	0x50
 2176 0497 05       		.byte	0x5
 2177 0498 7C01     		.2byte	0x17c
 2178 049a 07050000 		.4byte	0x507
 2179 049e 0F       		.uleb128 0xf
 2180 049f 49090000 		.4byte	.LASF59
 2181 04a3 05       		.byte	0x5
 2182 04a4 8101     		.2byte	0x181
 2183 04a6 07050000 		.4byte	0x507
 2184 04aa 00       		.byte	0
 2185 04ab 0F       		.uleb128 0xf
 2186 04ac 51090000 		.4byte	.LASF60
 2187 04b0 05       		.byte	0x5
 2188 04b1 8601     		.2byte	0x186
 2189 04b3 07050000 		.4byte	0x507
 2190 04b7 0A       		.byte	0xa
 2191 04b8 0F       		.uleb128 0xf
 2192 04b9 59090000 		.4byte	.LASF61
 2193 04bd 05       		.byte	0x5
 2194 04be 8B01     		.2byte	0x18b
 2195 04c0 07050000 		.4byte	0x507
 2196 04c4 14       		.byte	0x14
 2197 04c5 0F       		.uleb128 0xf
 2198 04c6 61090000 		.4byte	.LASF62
 2199 04ca 05       		.byte	0x5
 2200 04cb 9001     		.2byte	0x190
 2201 04cd 07050000 		.4byte	0x507
 2202 04d1 1E       		.byte	0x1e
 2203 04d2 0F       		.uleb128 0xf
 2204 04d3 71090000 		.4byte	.LASF63
 2205 04d7 05       		.byte	0x5
 2206 04d8 9501     		.2byte	0x195
 2207 04da 07050000 		.4byte	0x507
 2208 04de 28       		.byte	0x28
 2209 04df 0F       		.uleb128 0xf
 2210 04e0 79090000 		.4byte	.LASF64
 2211 04e4 05       		.byte	0x5
 2212 04e5 9A01     		.2byte	0x19a
 2213 04e7 07050000 		.4byte	0x507
 2214 04eb 32       		.byte	0x32
 2215 04ec 0F       		.uleb128 0xf
 2216 04ed 69090000 		.4byte	.LASF65
 2217 04f1 05       		.byte	0x5
 2218 04f2 9F01     		.2byte	0x19f
 2219 04f4 07050000 		.4byte	0x507
 2220 04f8 3C       		.byte	0x3c
 2221 04f9 0F       		.uleb128 0xf
 2222 04fa 81090000 		.4byte	.LASF66
 2223 04fe 05       		.byte	0x5
 2224 04ff A401     		.2byte	0x1a4
 2225 0501 07050000 		.4byte	0x507
 2226 0505 46       		.byte	0x46
 2227 0506 00       		.byte	0
 2228 0507 0D       		.uleb128 0xd
 2229 0508 89040000 		.4byte	0x489
 2230 050c 17050000 		.4byte	0x517
 2231 0510 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 93


 2232 0511 D6020000 		.4byte	0x2d6
 2233 0515 00       		.byte	0
 2234 0516 00       		.byte	0
 2235 0517 04       		.uleb128 0x4
 2236 0518 66070000 		.4byte	.LASF74
 2237 051c 05       		.byte	0x5
 2238 051d A501     		.2byte	0x1a5
 2239 051f 95040000 		.4byte	0x495
 2240 0523 12       		.uleb128 0x12
 2241 0524 0C01     		.2byte	0x10c
 2242 0526 05       		.byte	0x5
 2243 0527 AB01     		.2byte	0x1ab
 2244 0529 0F060000 		.4byte	0x60f
 2245 052d 0F       		.uleb128 0xf
 2246 052e 2D080000 		.4byte	.LASF75
 2247 0532 05       		.byte	0x5
 2248 0533 B201     		.2byte	0x1b2
 2249 0535 77000000 		.4byte	0x77
 2250 0539 00       		.byte	0
 2251 053a 0F       		.uleb128 0xf
 2252 053b BA0C0000 		.4byte	.LASF76
 2253 053f 05       		.byte	0x5
 2254 0540 B701     		.2byte	0x1b7
 2255 0542 77000000 		.4byte	0x77
 2256 0546 02       		.byte	0x2
 2257 0547 0F       		.uleb128 0xf
 2258 0548 DE000000 		.4byte	.LASF77
 2259 054c 05       		.byte	0x5
 2260 054d BC01     		.2byte	0x1bc
 2261 054f 77000000 		.4byte	0x77
 2262 0553 04       		.byte	0x4
 2263 0554 0F       		.uleb128 0xf
 2264 0555 1C090000 		.4byte	.LASF78
 2265 0559 05       		.byte	0x5
 2266 055a C201     		.2byte	0x1c2
 2267 055c 77000000 		.4byte	0x77
 2268 0560 06       		.byte	0x6
 2269 0561 0F       		.uleb128 0xf
 2270 0562 D2000000 		.4byte	.LASF79
 2271 0566 05       		.byte	0x5
 2272 0567 C701     		.2byte	0x1c7
 2273 0569 77000000 		.4byte	0x77
 2274 056d 08       		.byte	0x8
 2275 056e 0F       		.uleb128 0xf
 2276 056f 20060000 		.4byte	.LASF80
 2277 0573 05       		.byte	0x5
 2278 0574 CC01     		.2byte	0x1cc
 2279 0576 CD000000 		.4byte	0xcd
 2280 057a 0C       		.byte	0xc
 2281 057b 0F       		.uleb128 0xf
 2282 057c DB080000 		.4byte	.LASF81
 2283 0580 05       		.byte	0x5
 2284 0581 D201     		.2byte	0x1d2
 2285 0583 0F060000 		.4byte	0x60f
 2286 0587 10       		.byte	0x10
 2287 0588 0F       		.uleb128 0xf
 2288 0589 D7090000 		.4byte	.LASF82
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 94


 2289 058d 05       		.byte	0x5
 2290 058e D901     		.2byte	0x1d9
 2291 0590 0F060000 		.4byte	0x60f
 2292 0594 14       		.byte	0x14
 2293 0595 0F       		.uleb128 0xf
 2294 0596 59080000 		.4byte	.LASF83
 2295 059a 05       		.byte	0x5
 2296 059b E901     		.2byte	0x1e9
 2297 059d 1F060000 		.4byte	0x61f
 2298 05a1 18       		.byte	0x18
 2299 05a2 0F       		.uleb128 0xf
 2300 05a3 E2060000 		.4byte	.LASF84
 2301 05a7 05       		.byte	0x5
 2302 05a8 EF01     		.2byte	0x1ef
 2303 05aa 77000000 		.4byte	0x77
 2304 05ae 20       		.byte	0x20
 2305 05af 0F       		.uleb128 0xf
 2306 05b0 49040000 		.4byte	.LASF85
 2307 05b4 05       		.byte	0x5
 2308 05b5 F401     		.2byte	0x1f4
 2309 05b7 6B000000 		.4byte	0x6b
 2310 05bb 22       		.byte	0x22
 2311 05bc 0F       		.uleb128 0xf
 2312 05bd B3060000 		.4byte	.LASF86
 2313 05c1 05       		.byte	0x5
 2314 05c2 F901     		.2byte	0x1f9
 2315 05c4 05040000 		.4byte	0x405
 2316 05c8 24       		.byte	0x24
 2317 05c9 0F       		.uleb128 0xf
 2318 05ca 17030000 		.4byte	.LASF87
 2319 05ce 05       		.byte	0x5
 2320 05cf FE01     		.2byte	0x1fe
 2321 05d1 17050000 		.4byte	0x517
 2322 05d5 B4       		.byte	0xb4
 2323 05d6 13       		.uleb128 0x13
 2324 05d7 68000000 		.4byte	.LASF88
 2325 05db 05       		.byte	0x5
 2326 05dc 0302     		.2byte	0x203
 2327 05de 6B000000 		.4byte	0x6b
 2328 05e2 0401     		.2byte	0x104
 2329 05e4 13       		.uleb128 0x13
 2330 05e5 36030000 		.4byte	.LASF89
 2331 05e9 05       		.byte	0x5
 2332 05ea 0802     		.2byte	0x208
 2333 05ec 6B000000 		.4byte	0x6b
 2334 05f0 0501     		.2byte	0x105
 2335 05f2 13       		.uleb128 0x13
 2336 05f3 1A080000 		.4byte	.LASF90
 2337 05f7 05       		.byte	0x5
 2338 05f8 0D02     		.2byte	0x20d
 2339 05fa 77000000 		.4byte	0x77
 2340 05fe 0601     		.2byte	0x106
 2341 0600 13       		.uleb128 0x13
 2342 0601 C9060000 		.4byte	.LASF91
 2343 0605 05       		.byte	0x5
 2344 0606 1202     		.2byte	0x212
 2345 0608 69040000 		.4byte	0x469
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 95


 2346 060c 0801     		.2byte	0x108
 2347 060e 00       		.byte	0
 2348 060f 0D       		.uleb128 0xd
 2349 0610 83000000 		.4byte	0x83
 2350 0614 1F060000 		.4byte	0x61f
 2351 0618 0E       		.uleb128 0xe
 2352 0619 D6020000 		.4byte	0x2d6
 2353 061d 00       		.byte	0
 2354 061e 00       		.byte	0
 2355 061f 0D       		.uleb128 0xd
 2356 0620 6B000000 		.4byte	0x6b
 2357 0624 2F060000 		.4byte	0x62f
 2358 0628 0E       		.uleb128 0xe
 2359 0629 D6020000 		.4byte	0x2d6
 2360 062d 07       		.byte	0x7
 2361 062e 00       		.byte	0
 2362 062f 04       		.uleb128 0x4
 2363 0630 0A060000 		.4byte	.LASF92
 2364 0634 05       		.byte	0x5
 2365 0635 1302     		.2byte	0x213
 2366 0637 23050000 		.4byte	0x523
 2367 063b 10       		.uleb128 0x10
 2368 063c 1C       		.byte	0x1c
 2369 063d 05       		.byte	0x5
 2370 063e 1902     		.2byte	0x219
 2371 0640 BA060000 		.4byte	0x6ba
 2372 0644 0F       		.uleb128 0xf
 2373 0645 24070000 		.4byte	.LASF93
 2374 0649 05       		.byte	0x5
 2375 064a 1E02     		.2byte	0x21e
 2376 064c BA060000 		.4byte	0x6ba
 2377 0650 00       		.byte	0
 2378 0651 0F       		.uleb128 0xf
 2379 0652 42060000 		.4byte	.LASF94
 2380 0656 05       		.byte	0x5
 2381 0657 2302     		.2byte	0x223
 2382 0659 BA060000 		.4byte	0x6ba
 2383 065d 04       		.byte	0x4
 2384 065e 0F       		.uleb128 0xf
 2385 065f 8B040000 		.4byte	.LASF95
 2386 0663 05       		.byte	0x5
 2387 0664 2802     		.2byte	0x228
 2388 0666 BA060000 		.4byte	0x6ba
 2389 066a 08       		.byte	0x8
 2390 066b 0F       		.uleb128 0xf
 2391 066c 25090000 		.4byte	.LASF96
 2392 0670 05       		.byte	0x5
 2393 0671 2D02     		.2byte	0x22d
 2394 0673 BA060000 		.4byte	0x6ba
 2395 0677 0C       		.byte	0xc
 2396 0678 0F       		.uleb128 0xf
 2397 0679 3A0B0000 		.4byte	.LASF97
 2398 067d 05       		.byte	0x5
 2399 067e 3202     		.2byte	0x232
 2400 0680 83000000 		.4byte	0x83
 2401 0684 10       		.byte	0x10
 2402 0685 0F       		.uleb128 0xf
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 96


 2403 0686 08010000 		.4byte	.LASF98
 2404 068a 05       		.byte	0x5
 2405 068b 3702     		.2byte	0x237
 2406 068d 83000000 		.4byte	0x83
 2407 0691 14       		.byte	0x14
 2408 0692 0F       		.uleb128 0xf
 2409 0693 ED050000 		.4byte	.LASF99
 2410 0697 05       		.byte	0x5
 2411 0698 3C02     		.2byte	0x23c
 2412 069a 6B000000 		.4byte	0x6b
 2413 069e 18       		.byte	0x18
 2414 069f 0F       		.uleb128 0xf
 2415 06a0 530A0000 		.4byte	.LASF100
 2416 06a4 05       		.byte	0x5
 2417 06a5 4102     		.2byte	0x241
 2418 06a7 6B000000 		.4byte	0x6b
 2419 06ab 19       		.byte	0x19
 2420 06ac 0F       		.uleb128 0xf
 2421 06ad E4020000 		.4byte	.LASF101
 2422 06b1 05       		.byte	0x5
 2423 06b2 4602     		.2byte	0x246
 2424 06b4 6B000000 		.4byte	0x6b
 2425 06b8 1A       		.byte	0x1a
 2426 06b9 00       		.byte	0
 2427 06ba 06       		.uleb128 0x6
 2428 06bb 04       		.byte	0x4
 2429 06bc C1000000 		.4byte	0xc1
 2430 06c0 04       		.uleb128 0x4
 2431 06c1 E50B0000 		.4byte	.LASF102
 2432 06c5 05       		.byte	0x5
 2433 06c6 4702     		.2byte	0x247
 2434 06c8 3B060000 		.4byte	0x63b
 2435 06cc 10       		.uleb128 0x10
 2436 06cd 20       		.byte	0x20
 2437 06ce 05       		.byte	0x5
 2438 06cf 7A02     		.2byte	0x27a
 2439 06d1 58070000 		.4byte	0x758
 2440 06d5 0F       		.uleb128 0xf
 2441 06d6 BC060000 		.4byte	.LASF103
 2442 06da 05       		.byte	0x5
 2443 06db 8302     		.2byte	0x283
 2444 06dd 58070000 		.4byte	0x758
 2445 06e1 00       		.byte	0
 2446 06e2 0F       		.uleb128 0xf
 2447 06e3 1E0B0000 		.4byte	.LASF104
 2448 06e7 05       		.byte	0x5
 2449 06e8 8A02     		.2byte	0x28a
 2450 06ea 5F070000 		.4byte	0x75f
 2451 06ee 04       		.byte	0x4
 2452 06ef 0F       		.uleb128 0xf
 2453 06f0 36080000 		.4byte	.LASF105
 2454 06f4 05       		.byte	0x5
 2455 06f5 9002     		.2byte	0x290
 2456 06f7 61070000 		.4byte	0x761
 2457 06fb 08       		.byte	0x8
 2458 06fc 0F       		.uleb128 0xf
 2459 06fd 3F070000 		.4byte	.LASF106
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 97


 2460 0701 05       		.byte	0x5
 2461 0702 9602     		.2byte	0x296
 2462 0704 5F070000 		.4byte	0x75f
 2463 0708 0C       		.byte	0xc
 2464 0709 0F       		.uleb128 0xf
 2465 070a 810A0000 		.4byte	.LASF107
 2466 070e 05       		.byte	0x5
 2467 070f 9D02     		.2byte	0x29d
 2468 0711 67070000 		.4byte	0x767
 2469 0715 10       		.byte	0x10
 2470 0716 0F       		.uleb128 0xf
 2471 0717 010B0000 		.4byte	.LASF108
 2472 071b 05       		.byte	0x5
 2473 071c A202     		.2byte	0x2a2
 2474 071e 83000000 		.4byte	0x83
 2475 0722 14       		.byte	0x14
 2476 0723 0F       		.uleb128 0xf
 2477 0724 5B050000 		.4byte	.LASF109
 2478 0728 05       		.byte	0x5
 2479 0729 A902     		.2byte	0x2a9
 2480 072b 77000000 		.4byte	0x77
 2481 072f 18       		.byte	0x18
 2482 0730 0F       		.uleb128 0xf
 2483 0731 55030000 		.4byte	.LASF110
 2484 0735 05       		.byte	0x5
 2485 0736 B002     		.2byte	0x2b0
 2486 0738 6B000000 		.4byte	0x6b
 2487 073c 1A       		.byte	0x1a
 2488 073d 0F       		.uleb128 0xf
 2489 073e A7090000 		.4byte	.LASF111
 2490 0742 05       		.byte	0x5
 2491 0743 BA02     		.2byte	0x2ba
 2492 0745 6B000000 		.4byte	0x6b
 2493 0749 1B       		.byte	0x1b
 2494 074a 0F       		.uleb128 0xf
 2495 074b 46030000 		.4byte	.LASF112
 2496 074f 05       		.byte	0x5
 2497 0750 C202     		.2byte	0x2c2
 2498 0752 6D070000 		.4byte	0x76d
 2499 0756 1C       		.byte	0x1c
 2500 0757 00       		.byte	0
 2501 0758 06       		.uleb128 0x6
 2502 0759 04       		.byte	0x4
 2503 075a 5E070000 		.4byte	0x75e
 2504 075e 14       		.uleb128 0x14
 2505 075f 15       		.uleb128 0x15
 2506 0760 04       		.byte	0x4
 2507 0761 06       		.uleb128 0x6
 2508 0762 04       		.byte	0x4
 2509 0763 89040000 		.4byte	0x489
 2510 0767 06       		.uleb128 0x6
 2511 0768 04       		.byte	0x4
 2512 0769 6B000000 		.4byte	0x6b
 2513 076d 06       		.uleb128 0x6
 2514 076e 04       		.byte	0x4
 2515 076f EC010000 		.4byte	0x1ec
 2516 0773 04       		.uleb128 0x4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 98


 2517 0774 2A000000 		.4byte	.LASF113
 2518 0778 05       		.byte	0x5
 2519 0779 C302     		.2byte	0x2c3
 2520 077b CC060000 		.4byte	0x6cc
 2521 077f 12       		.uleb128 0x12
 2522 0780 0001     		.2byte	0x100
 2523 0782 05       		.byte	0x5
 2524 0783 C902     		.2byte	0x2c9
 2525 0785 97070000 		.4byte	0x797
 2526 0789 0F       		.uleb128 0xf
 2527 078a 300D0000 		.4byte	.LASF114
 2528 078e 05       		.byte	0x5
 2529 078f CE02     		.2byte	0x2ce
 2530 0791 97070000 		.4byte	0x797
 2531 0795 00       		.byte	0
 2532 0796 00       		.byte	0
 2533 0797 0D       		.uleb128 0xd
 2534 0798 73070000 		.4byte	0x773
 2535 079c A7070000 		.4byte	0x7a7
 2536 07a0 0E       		.uleb128 0xe
 2537 07a1 D6020000 		.4byte	0x2d6
 2538 07a5 07       		.byte	0x7
 2539 07a6 00       		.byte	0
 2540 07a7 04       		.uleb128 0x4
 2541 07a8 41080000 		.4byte	.LASF115
 2542 07ac 05       		.byte	0x5
 2543 07ad CF02     		.2byte	0x2cf
 2544 07af 7F070000 		.4byte	0x77f
 2545 07b3 02       		.uleb128 0x2
 2546 07b4 08       		.byte	0x8
 2547 07b5 04       		.byte	0x4
 2548 07b6 FA060000 		.4byte	.LASF116
 2549 07ba 16       		.uleb128 0x16
 2550 07bb C60B0000 		.4byte	.LASF117
 2551 07bf 01       		.byte	0x1
 2552 07c0 6F07     		.2byte	0x76f
 2553 07c2 00000000 		.4byte	.LFB17
 2554 07c6 2C000000 		.4byte	.LFE17-.LFB17
 2555 07ca 01       		.uleb128 0x1
 2556 07cb 9C       		.byte	0x9c
 2557 07cc E1070000 		.4byte	0x7e1
 2558 07d0 17       		.uleb128 0x17
 2559 07d1 F70A0000 		.4byte	.LASF120
 2560 07d5 01       		.byte	0x1
 2561 07d6 7107     		.2byte	0x771
 2562 07d8 83000000 		.4byte	0x83
 2563 07dc 00000000 		.4byte	.LLST0
 2564 07e0 00       		.byte	0
 2565 07e1 16       		.uleb128 0x16
 2566 07e2 74040000 		.4byte	.LASF118
 2567 07e6 01       		.byte	0x1
 2568 07e7 9507     		.2byte	0x795
 2569 07e9 00000000 		.4byte	.LFB18
 2570 07ed 08000000 		.4byte	.LFE18-.LFB18
 2571 07f1 01       		.uleb128 0x1
 2572 07f2 9C       		.byte	0x9c
 2573 07f3 01080000 		.4byte	0x801
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 99


 2574 07f7 18       		.uleb128 0x18
 2575 07f8 06000000 		.4byte	.LVL4
 2576 07fc BA070000 		.4byte	0x7ba
 2577 0800 00       		.byte	0
 2578 0801 16       		.uleb128 0x16
 2579 0802 0E000000 		.4byte	.LASF119
 2580 0806 01       		.byte	0x1
 2581 0807 FA02     		.2byte	0x2fa
 2582 0809 00000000 		.4byte	.LFB6
 2583 080d 1C000000 		.4byte	.LFE6-.LFB6
 2584 0811 01       		.uleb128 0x1
 2585 0812 9C       		.byte	0x9c
 2586 0813 31080000 		.4byte	0x831
 2587 0817 17       		.uleb128 0x17
 2588 0818 000C0000 		.4byte	.LASF121
 2589 081c 01       		.byte	0x1
 2590 081d FC02     		.2byte	0x2fc
 2591 081f 83000000 		.4byte	0x83
 2592 0823 1E000000 		.4byte	.LLST1
 2593 0827 18       		.uleb128 0x18
 2594 0828 10000000 		.4byte	.LVL7
 2595 082c 85100000 		.4byte	0x1085
 2596 0830 00       		.byte	0
 2597 0831 19       		.uleb128 0x19
 2598 0832 5E010000 		.4byte	.LASF201
 2599 0836 01       		.byte	0x1
 2600 0837 E9       		.byte	0xe9
 2601 0838 83000000 		.4byte	0x83
 2602 083c 00000000 		.4byte	.LFB0
 2603 0840 10000000 		.4byte	.LFE0-.LFB0
 2604 0844 01       		.uleb128 0x1
 2605 0845 9C       		.byte	0x9c
 2606 0846 1A       		.uleb128 0x1a
 2607 0847 00030000 		.4byte	.LASF123
 2608 084b 01       		.byte	0x1
 2609 084c 1D01     		.2byte	0x11d
 2610 084e A4000000 		.4byte	0xa4
 2611 0852 00000000 		.4byte	.LFB1
 2612 0856 40000000 		.4byte	.LFE1-.LFB1
 2613 085a 01       		.uleb128 0x1
 2614 085b 9C       		.byte	0x9c
 2615 085c 8A080000 		.4byte	0x88a
 2616 0860 1B       		.uleb128 0x1b
 2617 0861 F00C0000 		.4byte	.LASF128
 2618 0865 01       		.byte	0x1
 2619 0866 1D01     		.2byte	0x11d
 2620 0868 83000000 		.4byte	0x83
 2621 086c 3C000000 		.4byte	.LLST2
 2622 0870 17       		.uleb128 0x17
 2623 0871 C30C0000 		.4byte	.LASF122
 2624 0875 01       		.byte	0x1
 2625 0876 1F01     		.2byte	0x11f
 2626 0878 A4000000 		.4byte	0xa4
 2627 087c 5D000000 		.4byte	.LLST3
 2628 0880 18       		.uleb128 0x18
 2629 0881 38000000 		.4byte	.LVL10
 2630 0885 91100000 		.4byte	0x1091
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 100


 2631 0889 00       		.byte	0
 2632 088a 1A       		.uleb128 0x1a
 2633 088b 70010000 		.4byte	.LASF124
 2634 088f 01       		.byte	0x1
 2635 0890 7001     		.2byte	0x170
 2636 0892 A4000000 		.4byte	0xa4
 2637 0896 00000000 		.4byte	.LFB2
 2638 089a 2C000000 		.4byte	.LFE2-.LFB2
 2639 089e 01       		.uleb128 0x1
 2640 089f 9C       		.byte	0x9c
 2641 08a0 BE080000 		.4byte	0x8be
 2642 08a4 17       		.uleb128 0x17
 2643 08a5 45000000 		.4byte	.LASF125
 2644 08a9 01       		.byte	0x1
 2645 08aa 7201     		.2byte	0x172
 2646 08ac A4000000 		.4byte	0xa4
 2647 08b0 7B000000 		.4byte	.LLST4
 2648 08b4 18       		.uleb128 0x18
 2649 08b5 16000000 		.4byte	.LVL13
 2650 08b9 9D100000 		.4byte	0x109d
 2651 08bd 00       		.byte	0
 2652 08be 1A       		.uleb128 0x1a
 2653 08bf D3050000 		.4byte	.LASF126
 2654 08c3 01       		.byte	0x1
 2655 08c4 AE01     		.2byte	0x1ae
 2656 08c6 A4000000 		.4byte	0xa4
 2657 08ca 00000000 		.4byte	.LFB3
 2658 08ce 48000000 		.4byte	.LFE3-.LFB3
 2659 08d2 01       		.uleb128 0x1
 2660 08d3 9C       		.byte	0x9c
 2661 08d4 16090000 		.4byte	0x916
 2662 08d8 17       		.uleb128 0x17
 2663 08d9 45000000 		.4byte	.LASF125
 2664 08dd 01       		.byte	0x1
 2665 08de B001     		.2byte	0x1b0
 2666 08e0 A4000000 		.4byte	0xa4
 2667 08e4 9A000000 		.4byte	.LLST5
 2668 08e8 17       		.uleb128 0x17
 2669 08e9 C2070000 		.4byte	.LASF127
 2670 08ed 01       		.byte	0x1
 2671 08ee B201     		.2byte	0x1b2
 2672 08f0 83000000 		.4byte	0x83
 2673 08f4 E8000000 		.4byte	.LLST6
 2674 08f8 1C       		.uleb128 0x1c
 2675 08f9 18000000 		.4byte	.LVL18
 2676 08fd 46080000 		.4byte	0x846
 2677 0901 0C090000 		.4byte	0x90c
 2678 0905 1D       		.uleb128 0x1d
 2679 0906 01       		.uleb128 0x1
 2680 0907 50       		.byte	0x50
 2681 0908 02       		.uleb128 0x2
 2682 0909 74       		.byte	0x74
 2683 090a 00       		.sleb128 0
 2684 090b 00       		.byte	0
 2685 090c 18       		.uleb128 0x18
 2686 090d 32000000 		.4byte	.LVL19
 2687 0911 8A080000 		.4byte	0x88a
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 101


 2688 0915 00       		.byte	0
 2689 0916 1E       		.uleb128 0x1e
 2690 0917 02050000 		.4byte	.LASF135
 2691 091b 01       		.byte	0x1
 2692 091c 8902     		.2byte	0x289
 2693 091e 00000000 		.4byte	.LFB5
 2694 0922 9C000000 		.4byte	.LFE5-.LFB5
 2695 0926 01       		.uleb128 0x1
 2696 0927 9C       		.byte	0x9c
 2697 0928 E0090000 		.4byte	0x9e0
 2698 092c 1B       		.uleb128 0x1b
 2699 092d F00C0000 		.4byte	.LASF128
 2700 0931 01       		.byte	0x1
 2701 0932 8902     		.2byte	0x289
 2702 0934 83000000 		.4byte	0x83
 2703 0938 FB000000 		.4byte	.LLST7
 2704 093c 1B       		.uleb128 0x1b
 2705 093d 00000000 		.4byte	.LASF129
 2706 0941 01       		.byte	0x1
 2707 0942 8902     		.2byte	0x289
 2708 0944 83000000 		.4byte	0x83
 2709 0948 1C010000 		.4byte	.LLST8
 2710 094c 1B       		.uleb128 0x1b
 2711 094d 2A0B0000 		.4byte	.LASF130
 2712 0951 01       		.byte	0x1
 2713 0952 8902     		.2byte	0x289
 2714 0954 83000000 		.4byte	0x83
 2715 0958 3D010000 		.4byte	.LLST9
 2716 095c 1F       		.uleb128 0x1f
 2717 095d 79020000 		.4byte	.LASF131
 2718 0961 01       		.byte	0x1
 2719 0962 8B02     		.2byte	0x28b
 2720 0964 83000000 		.4byte	0x83
 2721 0968 01       		.byte	0x1
 2722 0969 17       		.uleb128 0x17
 2723 096a 300B0000 		.4byte	.LASF132
 2724 096e 01       		.byte	0x1
 2725 096f 8C02     		.2byte	0x28c
 2726 0971 83000000 		.4byte	0x83
 2727 0975 69010000 		.4byte	.LLST10
 2728 0979 17       		.uleb128 0x17
 2729 097a 4A010000 		.4byte	.LASF133
 2730 097e 01       		.byte	0x1
 2731 097f 8D02     		.2byte	0x28d
 2732 0981 6B000000 		.4byte	0x6b
 2733 0985 88010000 		.4byte	.LLST11
 2734 0989 17       		.uleb128 0x17
 2735 098a 180B0000 		.4byte	.LASF134
 2736 098e 01       		.byte	0x1
 2737 098f 8E02     		.2byte	0x28e
 2738 0991 E0090000 		.4byte	0x9e0
 2739 0995 B1010000 		.4byte	.LLST12
 2740 0999 18       		.uleb128 0x18
 2741 099a 1A000000 		.4byte	.LVL28
 2742 099e A9100000 		.4byte	0x10a9
 2743 09a2 18       		.uleb128 0x18
 2744 09a3 3A000000 		.4byte	.LVL29
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 102


 2745 09a7 B4100000 		.4byte	0x10b4
 2746 09ab 18       		.uleb128 0x18
 2747 09ac 4C000000 		.4byte	.LVL30
 2748 09b0 A9100000 		.4byte	0x10a9
 2749 09b4 18       		.uleb128 0x18
 2750 09b5 6C000000 		.4byte	.LVL31
 2751 09b9 B4100000 		.4byte	0x10b4
 2752 09bd 18       		.uleb128 0x18
 2753 09be 72000000 		.4byte	.LVL32
 2754 09c2 A9100000 		.4byte	0x10a9
 2755 09c6 18       		.uleb128 0x18
 2756 09c7 84000000 		.4byte	.LVL33
 2757 09cb B4100000 		.4byte	0x10b4
 2758 09cf 20       		.uleb128 0x20
 2759 09d0 8C000000 		.4byte	.LVL34
 2760 09d4 BF100000 		.4byte	0x10bf
 2761 09d8 1D       		.uleb128 0x1d
 2762 09d9 01       		.uleb128 0x1
 2763 09da 50       		.byte	0x50
 2764 09db 02       		.uleb128 0x2
 2765 09dc 74       		.byte	0x74
 2766 09dd 00       		.sleb128 0
 2767 09de 00       		.byte	0
 2768 09df 00       		.byte	0
 2769 09e0 06       		.uleb128 0x6
 2770 09e1 04       		.byte	0x4
 2771 09e2 E6090000 		.4byte	0x9e6
 2772 09e6 21       		.uleb128 0x21
 2773 09e7 C0060000 		.4byte	0x6c0
 2774 09eb 1E       		.uleb128 0x1e
 2775 09ec 19050000 		.4byte	.LASF136
 2776 09f0 01       		.byte	0x1
 2777 09f1 8503     		.2byte	0x385
 2778 09f3 00000000 		.4byte	.LFB7
 2779 09f7 3C000000 		.4byte	.LFE7-.LFB7
 2780 09fb 01       		.uleb128 0x1
 2781 09fc 9C       		.byte	0x9c
 2782 09fd 240A0000 		.4byte	0xa24
 2783 0a01 1B       		.uleb128 0x1b
 2784 0a02 E9010000 		.4byte	.LASF137
 2785 0a06 01       		.byte	0x1
 2786 0a07 8503     		.2byte	0x385
 2787 0a09 22020000 		.4byte	0x222
 2788 0a0d C4010000 		.4byte	.LLST13
 2789 0a11 18       		.uleb128 0x18
 2790 0a12 14000000 		.4byte	.LVL41
 2791 0a16 01080000 		.4byte	0x801
 2792 0a1a 18       		.uleb128 0x18
 2793 0a1b 1C000000 		.4byte	.LVL42
 2794 0a1f CB100000 		.4byte	0x10cb
 2795 0a23 00       		.byte	0
 2796 0a24 1E       		.uleb128 0x1e
 2797 0a25 98000000 		.4byte	.LASF138
 2798 0a29 01       		.byte	0x1
 2799 0a2a E803     		.2byte	0x3e8
 2800 0a2c 00000000 		.4byte	.LFB8
 2801 0a30 40000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 103


 2802 0a34 01       		.uleb128 0x1
 2803 0a35 9C       		.byte	0x9c
 2804 0a36 6B0A0000 		.4byte	0xa6b
 2805 0a3a 17       		.uleb128 0x17
 2806 0a3b 180B0000 		.4byte	.LASF134
 2807 0a3f 01       		.byte	0x1
 2808 0a40 EA03     		.2byte	0x3ea
 2809 0a42 E0090000 		.4byte	0x9e0
 2810 0a46 E5010000 		.4byte	.LLST14
 2811 0a4a 17       		.uleb128 0x17
 2812 0a4b D4020000 		.4byte	.LASF139
 2813 0a4f 01       		.byte	0x1
 2814 0a50 EB03     		.2byte	0x3eb
 2815 0a52 83000000 		.4byte	0x83
 2816 0a56 F8010000 		.4byte	.LLST15
 2817 0a5a 17       		.uleb128 0x17
 2818 0a5b 2F010000 		.4byte	.LASF140
 2819 0a5f 01       		.byte	0x1
 2820 0a60 EC03     		.2byte	0x3ec
 2821 0a62 83000000 		.4byte	0x83
 2822 0a66 17020000 		.4byte	.LLST16
 2823 0a6a 00       		.byte	0
 2824 0a6b 1E       		.uleb128 0x1e
 2825 0a6c F90C0000 		.4byte	.LASF141
 2826 0a70 01       		.byte	0x1
 2827 0a71 6204     		.2byte	0x462
 2828 0a73 00000000 		.4byte	.LFB9
 2829 0a77 78000000 		.4byte	.LFE9-.LFB9
 2830 0a7b 01       		.uleb128 0x1
 2831 0a7c 9C       		.byte	0x9c
 2832 0a7d A40A0000 		.4byte	0xaa4
 2833 0a81 17       		.uleb128 0x17
 2834 0a82 63080000 		.4byte	.LASF142
 2835 0a86 01       		.byte	0x1
 2836 0a87 6A04     		.2byte	0x46a
 2837 0a89 A4000000 		.4byte	0xa4
 2838 0a8d 40020000 		.4byte	.LLST17
 2839 0a91 18       		.uleb128 0x18
 2840 0a92 14000000 		.4byte	.LVL55
 2841 0a96 46080000 		.4byte	0x846
 2842 0a9a 18       		.uleb128 0x18
 2843 0a9b 2A000000 		.4byte	.LVL57
 2844 0a9f 8A080000 		.4byte	0x88a
 2845 0aa3 00       		.byte	0
 2846 0aa4 1E       		.uleb128 0x1e
 2847 0aa5 91040000 		.4byte	.LASF143
 2848 0aa9 01       		.byte	0x1
 2849 0aaa AF04     		.2byte	0x4af
 2850 0aac 00000000 		.4byte	.LFB10
 2851 0ab0 08000000 		.4byte	.LFE10-.LFB10
 2852 0ab4 01       		.uleb128 0x1
 2853 0ab5 9C       		.byte	0x9c
 2854 0ab6 DC0A0000 		.4byte	0xadc
 2855 0aba 1B       		.uleb128 0x1b
 2856 0abb 9B060000 		.4byte	.LASF144
 2857 0abf 01       		.byte	0x1
 2858 0ac0 AF04     		.2byte	0x4af
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 104


 2859 0ac2 D2000000 		.4byte	0xd2
 2860 0ac6 8B020000 		.4byte	.LLST18
 2861 0aca 20       		.uleb128 0x20
 2862 0acb 06000000 		.4byte	.LVL64
 2863 0acf D7100000 		.4byte	0x10d7
 2864 0ad3 1D       		.uleb128 0x1d
 2865 0ad4 01       		.uleb128 0x1
 2866 0ad5 50       		.byte	0x50
 2867 0ad6 03       		.uleb128 0x3
 2868 0ad7 F3       		.byte	0xf3
 2869 0ad8 01       		.uleb128 0x1
 2870 0ad9 50       		.byte	0x50
 2871 0ada 00       		.byte	0
 2872 0adb 00       		.byte	0
 2873 0adc 1E       		.uleb128 0x1e
 2874 0add 38050000 		.4byte	.LASF145
 2875 0ae1 01       		.byte	0x1
 2876 0ae2 C604     		.2byte	0x4c6
 2877 0ae4 00000000 		.4byte	.LFB11
 2878 0ae8 28000000 		.4byte	.LFE11-.LFB11
 2879 0aec 01       		.uleb128 0x1
 2880 0aed 9C       		.byte	0x9c
 2881 0aee 130B0000 		.4byte	0xb13
 2882 0af2 1B       		.uleb128 0x1b
 2883 0af3 27060000 		.4byte	.LASF146
 2884 0af7 01       		.byte	0x1
 2885 0af8 C604     		.2byte	0x4c6
 2886 0afa 83000000 		.4byte	0x83
 2887 0afe AC020000 		.4byte	.LLST19
 2888 0b02 17       		.uleb128 0x17
 2889 0b03 000C0000 		.4byte	.LASF121
 2890 0b07 01       		.byte	0x1
 2891 0b08 E204     		.2byte	0x4e2
 2892 0b0a 83000000 		.4byte	0x83
 2893 0b0e DA020000 		.4byte	.LLST20
 2894 0b12 00       		.byte	0
 2895 0b13 1E       		.uleb128 0x1e
 2896 0b14 7B060000 		.4byte	.LASF147
 2897 0b18 01       		.byte	0x1
 2898 0b19 0A05     		.2byte	0x50a
 2899 0b1b 00000000 		.4byte	.LFB12
 2900 0b1f 28000000 		.4byte	.LFE12-.LFB12
 2901 0b23 01       		.uleb128 0x1
 2902 0b24 9C       		.byte	0x9c
 2903 0b25 4A0B0000 		.4byte	0xb4a
 2904 0b29 1B       		.uleb128 0x1b
 2905 0b2a 6E0B0000 		.4byte	.LASF54
 2906 0b2e 01       		.byte	0x1
 2907 0b2f 0A05     		.2byte	0x50a
 2908 0b31 83000000 		.4byte	0x83
 2909 0b35 F8020000 		.4byte	.LLST21
 2910 0b39 17       		.uleb128 0x17
 2911 0b3a 000C0000 		.4byte	.LASF121
 2912 0b3e 01       		.byte	0x1
 2913 0b3f 3305     		.2byte	0x533
 2914 0b41 83000000 		.4byte	0x83
 2915 0b45 26030000 		.4byte	.LLST22
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 105


 2916 0b49 00       		.byte	0
 2917 0b4a 1E       		.uleb128 0x1e
 2918 0b4b E6080000 		.4byte	.LASF148
 2919 0b4f 01       		.byte	0x1
 2920 0b50 5E05     		.2byte	0x55e
 2921 0b52 00000000 		.4byte	.LFB13
 2922 0b56 12000000 		.4byte	.LFE13-.LFB13
 2923 0b5a 01       		.uleb128 0x1
 2924 0b5b 9C       		.byte	0x9c
 2925 0b5c A60B0000 		.4byte	0xba6
 2926 0b60 1B       		.uleb128 0x1b
 2927 0b61 6E0B0000 		.4byte	.LASF54
 2928 0b65 01       		.byte	0x1
 2929 0b66 5E05     		.2byte	0x55e
 2930 0b68 83000000 		.4byte	0x83
 2931 0b6c 44030000 		.4byte	.LLST23
 2932 0b70 1B       		.uleb128 0x1b
 2933 0b71 27060000 		.4byte	.LASF146
 2934 0b75 01       		.byte	0x1
 2935 0b76 5E05     		.2byte	0x55e
 2936 0b78 83000000 		.4byte	0x83
 2937 0b7c 70030000 		.4byte	.LLST24
 2938 0b80 1C       		.uleb128 0x1c
 2939 0b81 0A000000 		.4byte	.LVL75
 2940 0b85 DC0A0000 		.4byte	0xadc
 2941 0b89 950B0000 		.4byte	0xb95
 2942 0b8d 1D       		.uleb128 0x1d
 2943 0b8e 01       		.uleb128 0x1
 2944 0b8f 50       		.byte	0x50
 2945 0b90 03       		.uleb128 0x3
 2946 0b91 F3       		.byte	0xf3
 2947 0b92 01       		.uleb128 0x1
 2948 0b93 51       		.byte	0x51
 2949 0b94 00       		.byte	0
 2950 0b95 20       		.uleb128 0x20
 2951 0b96 10000000 		.4byte	.LVL76
 2952 0b9a 130B0000 		.4byte	0xb13
 2953 0b9e 1D       		.uleb128 0x1d
 2954 0b9f 01       		.uleb128 0x1
 2955 0ba0 50       		.byte	0x50
 2956 0ba1 02       		.uleb128 0x2
 2957 0ba2 74       		.byte	0x74
 2958 0ba3 00       		.sleb128 0
 2959 0ba4 00       		.byte	0
 2960 0ba5 00       		.byte	0
 2961 0ba6 1A       		.uleb128 0x1a
 2962 0ba7 A2010000 		.4byte	.LASF149
 2963 0bab 01       		.byte	0x1
 2964 0bac 9205     		.2byte	0x592
 2965 0bae A4000000 		.4byte	0xa4
 2966 0bb2 00000000 		.4byte	.LFB14
 2967 0bb6 1C000000 		.4byte	.LFE14-.LFB14
 2968 0bba 01       		.uleb128 0x1
 2969 0bbb 9C       		.byte	0x9c
 2970 0bbc F80B0000 		.4byte	0xbf8
 2971 0bc0 1B       		.uleb128 0x1b
 2972 0bc1 F00C0000 		.4byte	.LASF128
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 106


 2973 0bc5 01       		.byte	0x1
 2974 0bc6 9205     		.2byte	0x592
 2975 0bc8 83000000 		.4byte	0x83
 2976 0bcc 91030000 		.4byte	.LLST25
 2977 0bd0 17       		.uleb128 0x17
 2978 0bd1 A3060000 		.4byte	.LASF150
 2979 0bd5 01       		.byte	0x1
 2980 0bd6 9405     		.2byte	0x594
 2981 0bd8 A4000000 		.4byte	0xa4
 2982 0bdc D3030000 		.4byte	.LLST26
 2983 0be0 20       		.uleb128 0x20
 2984 0be1 1A000000 		.4byte	.LVL84
 2985 0be5 E2100000 		.4byte	0x10e2
 2986 0be9 1D       		.uleb128 0x1d
 2987 0bea 01       		.uleb128 0x1
 2988 0beb 50       		.byte	0x50
 2989 0bec 03       		.uleb128 0x3
 2990 0bed F3       		.byte	0xf3
 2991 0bee 01       		.uleb128 0x1
 2992 0bef 50       		.byte	0x50
 2993 0bf0 1D       		.uleb128 0x1d
 2994 0bf1 01       		.uleb128 0x1
 2995 0bf2 51       		.byte	0x51
 2996 0bf3 02       		.uleb128 0x2
 2997 0bf4 08       		.byte	0x8
 2998 0bf5 55       		.byte	0x55
 2999 0bf6 00       		.byte	0
 3000 0bf7 00       		.byte	0
 3001 0bf8 1A       		.uleb128 0x1a
 3002 0bf9 B90A0000 		.4byte	.LASF151
 3003 0bfd 01       		.byte	0x1
 3004 0bfe 0306     		.2byte	0x603
 3005 0c00 A4000000 		.4byte	0xa4
 3006 0c04 00000000 		.4byte	.LFB15
 3007 0c08 1A000000 		.4byte	.LFE15-.LFB15
 3008 0c0c 01       		.uleb128 0x1
 3009 0c0d 9C       		.byte	0x9c
 3010 0c0e 430C0000 		.4byte	0xc43
 3011 0c12 17       		.uleb128 0x17
 3012 0c13 A3060000 		.4byte	.LASF150
 3013 0c17 01       		.byte	0x1
 3014 0c18 0506     		.2byte	0x605
 3015 0c1a A4000000 		.4byte	0xa4
 3016 0c1e FD030000 		.4byte	.LLST27
 3017 0c22 17       		.uleb128 0x17
 3018 0c23 C2070000 		.4byte	.LASF127
 3019 0c27 01       		.byte	0x1
 3020 0c28 0606     		.2byte	0x606
 3021 0c2a 83000000 		.4byte	0x83
 3022 0c2e 27040000 		.4byte	.LLST28
 3023 0c32 20       		.uleb128 0x20
 3024 0c33 0E000000 		.4byte	.LVL87
 3025 0c37 A60B0000 		.4byte	0xba6
 3026 0c3b 1D       		.uleb128 0x1d
 3027 0c3c 01       		.uleb128 0x1
 3028 0c3d 50       		.byte	0x50
 3029 0c3e 02       		.uleb128 0x2
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 107


 3030 0c3f 74       		.byte	0x74
 3031 0c40 00       		.sleb128 0
 3032 0c41 00       		.byte	0
 3033 0c42 00       		.byte	0
 3034 0c43 1E       		.uleb128 0x1e
 3035 0c44 0C0C0000 		.4byte	.LASF152
 3036 0c48 01       		.byte	0x1
 3037 0c49 060A     		.2byte	0xa06
 3038 0c4b 00000000 		.4byte	.LFB21
 3039 0c4f 38000000 		.4byte	.LFE21-.LFB21
 3040 0c53 01       		.uleb128 0x1
 3041 0c54 9C       		.byte	0x9c
 3042 0c55 A40C0000 		.4byte	0xca4
 3043 0c59 17       		.uleb128 0x17
 3044 0c5a C2070000 		.4byte	.LASF127
 3045 0c5e 01       		.byte	0x1
 3046 0c5f 080A     		.2byte	0xa08
 3047 0c61 83000000 		.4byte	0x83
 3048 0c65 46040000 		.4byte	.LLST29
 3049 0c69 17       		.uleb128 0x17
 3050 0c6a CC070000 		.4byte	.LASF153
 3051 0c6e 01       		.byte	0x1
 3052 0c6f 090A     		.2byte	0xa09
 3053 0c71 83000000 		.4byte	0x83
 3054 0c75 65040000 		.4byte	.LLST30
 3055 0c79 17       		.uleb128 0x17
 3056 0c7a 620B0000 		.4byte	.LASF154
 3057 0c7e 01       		.byte	0x1
 3058 0c7f 150A     		.2byte	0xa15
 3059 0c81 E0090000 		.4byte	0x9e0
 3060 0c85 84040000 		.4byte	.LLST31
 3061 0c89 20       		.uleb128 0x20
 3062 0c8a 1C000000 		.4byte	.LVL96
 3063 0c8e EE100000 		.4byte	0x10ee
 3064 0c92 1D       		.uleb128 0x1d
 3065 0c93 01       		.uleb128 0x1
 3066 0c94 50       		.byte	0x50
 3067 0c95 0C       		.uleb128 0xc
 3068 0c96 74       		.byte	0x74
 3069 0c97 00       		.sleb128 0
 3070 0c98 33       		.byte	0x33
 3071 0c99 24       		.byte	0x24
 3072 0c9a 74       		.byte	0x74
 3073 0c9b 00       		.sleb128 0
 3074 0c9c 1C       		.byte	0x1c
 3075 0c9d 32       		.byte	0x32
 3076 0c9e 24       		.byte	0x24
 3077 0c9f 76       		.byte	0x76
 3078 0ca0 00       		.sleb128 0
 3079 0ca1 22       		.byte	0x22
 3080 0ca2 00       		.byte	0
 3081 0ca3 00       		.byte	0
 3082 0ca4 1A       		.uleb128 0x1a
 3083 0ca5 8C050000 		.4byte	.LASF155
 3084 0ca9 01       		.byte	0x1
 3085 0caa 580A     		.2byte	0xa58
 3086 0cac 83000000 		.4byte	0x83
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 108


 3087 0cb0 00000000 		.4byte	.LFB22
 3088 0cb4 10000000 		.4byte	.LFE22-.LFB22
 3089 0cb8 01       		.uleb128 0x1
 3090 0cb9 9C       		.byte	0x9c
 3091 0cba EB0C0000 		.4byte	0xceb
 3092 0cbe 1B       		.uleb128 0x1b
 3093 0cbf F00C0000 		.4byte	.LASF128
 3094 0cc3 01       		.byte	0x1
 3095 0cc4 580A     		.2byte	0xa58
 3096 0cc6 83000000 		.4byte	0x83
 3097 0cca 97040000 		.4byte	.LLST32
 3098 0cce 22       		.uleb128 0x22
 3099 0ccf 6D0A0000 		.4byte	.LASF156
 3100 0cd3 01       		.byte	0x1
 3101 0cd4 5A0A     		.2byte	0xa5a
 3102 0cd6 83000000 		.4byte	0x83
 3103 0cda 01       		.uleb128 0x1
 3104 0cdb 50       		.byte	0x50
 3105 0cdc 22       		.uleb128 0x22
 3106 0cdd 81020000 		.4byte	.LASF157
 3107 0ce1 01       		.byte	0x1
 3108 0ce2 5E0A     		.2byte	0xa5e
 3109 0ce4 EB0C0000 		.4byte	0xceb
 3110 0ce8 01       		.uleb128 0x1
 3111 0ce9 53       		.byte	0x53
 3112 0cea 00       		.byte	0
 3113 0ceb 06       		.uleb128 0x6
 3114 0cec 04       		.byte	0x4
 3115 0ced DD020000 		.4byte	0x2dd
 3116 0cf1 1E       		.uleb128 0x1e
 3117 0cf2 AE080000 		.4byte	.LASF158
 3118 0cf6 01       		.byte	0x1
 3119 0cf7 820A     		.2byte	0xa82
 3120 0cf9 00000000 		.4byte	.LFB23
 3121 0cfd 10000000 		.4byte	.LFE23-.LFB23
 3122 0d01 01       		.uleb128 0x1
 3123 0d02 9C       		.byte	0x9c
 3124 0d03 340D0000 		.4byte	0xd34
 3125 0d07 1B       		.uleb128 0x1b
 3126 0d08 F00C0000 		.4byte	.LASF128
 3127 0d0c 01       		.byte	0x1
 3128 0d0d 820A     		.2byte	0xa82
 3129 0d0f 83000000 		.4byte	0x83
 3130 0d13 B8040000 		.4byte	.LLST33
 3131 0d17 23       		.uleb128 0x23
 3132 0d18 2E060000 		.4byte	.LASF159
 3133 0d1c 01       		.byte	0x1
 3134 0d1d 820A     		.2byte	0xa82
 3135 0d1f 83000000 		.4byte	0x83
 3136 0d23 01       		.uleb128 0x1
 3137 0d24 51       		.byte	0x51
 3138 0d25 22       		.uleb128 0x22
 3139 0d26 81020000 		.4byte	.LASF157
 3140 0d2a 01       		.byte	0x1
 3141 0d2b 860A     		.2byte	0xa86
 3142 0d2d EB0C0000 		.4byte	0xceb
 3143 0d31 01       		.uleb128 0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 109


 3144 0d32 53       		.byte	0x53
 3145 0d33 00       		.byte	0
 3146 0d34 1A       		.uleb128 0x1a
 3147 0d35 98020000 		.4byte	.LASF160
 3148 0d39 01       		.byte	0x1
 3149 0d3a D60A     		.2byte	0xad6
 3150 0d3c 6B000000 		.4byte	0x6b
 3151 0d40 00000000 		.4byte	.LFB24
 3152 0d44 24000000 		.4byte	.LFE24-.LFB24
 3153 0d48 01       		.uleb128 0x1
 3154 0d49 9C       		.byte	0x9c
 3155 0d4a 8A0D0000 		.4byte	0xd8a
 3156 0d4e 1B       		.uleb128 0x1b
 3157 0d4f 9E0C0000 		.4byte	.LASF161
 3158 0d53 01       		.byte	0x1
 3159 0d54 D60A     		.2byte	0xad6
 3160 0d56 83000000 		.4byte	0x83
 3161 0d5a D9040000 		.4byte	.LLST34
 3162 0d5e 23       		.uleb128 0x23
 3163 0d5f FF050000 		.4byte	.LASF46
 3164 0d63 01       		.byte	0x1
 3165 0d64 D60A     		.2byte	0xad6
 3166 0d66 83000000 		.4byte	0x83
 3167 0d6a 01       		.uleb128 0x1
 3168 0d6b 51       		.byte	0x51
 3169 0d6c 17       		.uleb128 0x17
 3170 0d6d 2D0A0000 		.4byte	.LASF162
 3171 0d71 01       		.byte	0x1
 3172 0d72 D80A     		.2byte	0xad8
 3173 0d74 83000000 		.4byte	0x83
 3174 0d78 13050000 		.4byte	.LLST35
 3175 0d7c 1F       		.uleb128 0x1f
 3176 0d7d AC0C0000 		.4byte	.LASF163
 3177 0d81 01       		.byte	0x1
 3178 0d82 D90A     		.2byte	0xad9
 3179 0d84 83000000 		.4byte	0x83
 3180 0d88 01       		.byte	0x1
 3181 0d89 00       		.byte	0
 3182 0d8a 16       		.uleb128 0x16
 3183 0d8b E6000000 		.4byte	.LASF164
 3184 0d8f 01       		.byte	0x1
 3185 0d90 BE08     		.2byte	0x8be
 3186 0d92 00000000 		.4byte	.LFB20
 3187 0d96 14000000 		.4byte	.LFE20-.LFB20
 3188 0d9a 01       		.uleb128 0x1
 3189 0d9b 9C       		.byte	0x9c
 3190 0d9c 0A0E0000 		.4byte	0xe0a
 3191 0da0 1B       		.uleb128 0x1b
 3192 0da1 C2070000 		.4byte	.LASF127
 3193 0da5 01       		.byte	0x1
 3194 0da6 BE08     		.2byte	0x8be
 3195 0da8 83000000 		.4byte	0x83
 3196 0dac 26050000 		.4byte	.LLST36
 3197 0db0 1B       		.uleb128 0x1b
 3198 0db1 81020000 		.4byte	.LASF157
 3199 0db5 01       		.byte	0x1
 3200 0db6 BE08     		.2byte	0x8be
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 110


 3201 0db8 EB0C0000 		.4byte	0xceb
 3202 0dbc 47050000 		.4byte	.LLST37
 3203 0dc0 22       		.uleb128 0x22
 3204 0dc1 5E030000 		.4byte	.LASF165
 3205 0dc5 01       		.byte	0x1
 3206 0dc6 C008     		.2byte	0x8c0
 3207 0dc8 6B000000 		.4byte	0x6b
 3208 0dcc 01       		.uleb128 0x1
 3209 0dcd 50       		.byte	0x50
 3210 0dce 1F       		.uleb128 0x1f
 3211 0dcf EE010000 		.4byte	.LASF166
 3212 0dd3 01       		.byte	0x1
 3213 0dd4 C108     		.2byte	0x8c1
 3214 0dd6 6B000000 		.4byte	0x6b
 3215 0dda 00       		.byte	0
 3216 0ddb 17       		.uleb128 0x17
 3217 0ddc 9E0C0000 		.4byte	.LASF161
 3218 0de0 01       		.byte	0x1
 3219 0de1 C708     		.2byte	0x8c7
 3220 0de3 83000000 		.4byte	0x83
 3221 0de7 73050000 		.4byte	.LLST38
 3222 0deb 1C       		.uleb128 0x1c
 3223 0dec 08000000 		.4byte	.LVL114
 3224 0df0 A40C0000 		.4byte	0xca4
 3225 0df4 000E0000 		.4byte	0xe00
 3226 0df8 1D       		.uleb128 0x1d
 3227 0df9 01       		.uleb128 0x1
 3228 0dfa 50       		.byte	0x50
 3229 0dfb 03       		.uleb128 0x3
 3230 0dfc F3       		.byte	0xf3
 3231 0dfd 01       		.uleb128 0x1
 3232 0dfe 50       		.byte	0x50
 3233 0dff 00       		.byte	0
 3234 0e00 18       		.uleb128 0x18
 3235 0e01 10000000 		.4byte	.LVL116
 3236 0e05 340D0000 		.4byte	0xd34
 3237 0e09 00       		.byte	0
 3238 0e0a 24       		.uleb128 0x24
 3239 0e0b EA020000 		.4byte	.LASF167
 3240 0e0f 01       		.byte	0x1
 3241 0e10 2706     		.2byte	0x627
 3242 0e12 A4000000 		.4byte	0xa4
 3243 0e16 00000000 		.4byte	.LFB16
 3244 0e1a 2C010000 		.4byte	.LFE16-.LFB16
 3245 0e1e 01       		.uleb128 0x1
 3246 0e1f 9C       		.byte	0x9c
 3247 0e20 0A0F0000 		.4byte	0xf0a
 3248 0e24 17       		.uleb128 0x17
 3249 0e25 89020000 		.4byte	.LASF168
 3250 0e29 01       		.byte	0x1
 3251 0e2a 2906     		.2byte	0x629
 3252 0e2c A4000000 		.4byte	0xa4
 3253 0e30 86050000 		.4byte	.LLST39
 3254 0e34 17       		.uleb128 0x17
 3255 0e35 C2070000 		.4byte	.LASF127
 3256 0e39 01       		.byte	0x1
 3257 0e3a 2A06     		.2byte	0x62a
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 111


 3258 0e3c 83000000 		.4byte	0x83
 3259 0e40 BB050000 		.4byte	.LLST40
 3260 0e44 25       		.uleb128 0x25
 3261 0e45 637000   		.ascii	"cp\000"
 3262 0e48 01       		.byte	0x1
 3263 0e49 2C06     		.2byte	0x62c
 3264 0e4b 83000000 		.4byte	0x83
 3265 0e4f F0050000 		.4byte	.LLST41
 3266 0e53 22       		.uleb128 0x22
 3267 0e54 70020000 		.4byte	.LASF169
 3268 0e58 01       		.byte	0x1
 3269 0e59 3106     		.2byte	0x631
 3270 0e5b 0A0F0000 		.4byte	0xf0a
 3271 0e5f 02       		.uleb128 0x2
 3272 0e60 91       		.byte	0x91
 3273 0e61 48       		.sleb128 -56
 3274 0e62 17       		.uleb128 0x17
 3275 0e63 81020000 		.4byte	.LASF157
 3276 0e67 01       		.byte	0x1
 3277 0e68 3206     		.2byte	0x632
 3278 0e6a EB0C0000 		.4byte	0xceb
 3279 0e6e 0F060000 		.4byte	.LLST42
 3280 0e72 22       		.uleb128 0x22
 3281 0e73 8F0C0000 		.4byte	.LASF170
 3282 0e77 01       		.byte	0x1
 3283 0e78 3306     		.2byte	0x633
 3284 0e7a 84010000 		.4byte	0x184
 3285 0e7e 03       		.uleb128 0x3
 3286 0e7f 91       		.byte	0x91
 3287 0e80 AC7F     		.sleb128 -84
 3288 0e82 1C       		.uleb128 0x1c
 3289 0e83 4C000000 		.4byte	.LVL124
 3290 0e87 E2100000 		.4byte	0x10e2
 3291 0e8b 9C0E0000 		.4byte	0xe9c
 3292 0e8f 1D       		.uleb128 0x1d
 3293 0e90 01       		.uleb128 0x1
 3294 0e91 50       		.byte	0x50
 3295 0e92 02       		.uleb128 0x2
 3296 0e93 75       		.byte	0x75
 3297 0e94 00       		.sleb128 0
 3298 0e95 1D       		.uleb128 0x1d
 3299 0e96 01       		.uleb128 0x1
 3300 0e97 51       		.byte	0x51
 3301 0e98 02       		.uleb128 0x2
 3302 0e99 08       		.byte	0x8
 3303 0e9a 55       		.byte	0x55
 3304 0e9b 00       		.byte	0
 3305 0e9c 1C       		.uleb128 0x1c
 3306 0e9d 70000000 		.4byte	.LVL126
 3307 0ea1 FA100000 		.4byte	0x10fa
 3308 0ea5 B00E0000 		.4byte	0xeb0
 3309 0ea9 1D       		.uleb128 0x1d
 3310 0eaa 01       		.uleb128 0x1
 3311 0eab 50       		.byte	0x50
 3312 0eac 02       		.uleb128 0x2
 3313 0ead 77       		.byte	0x77
 3314 0eae 00       		.sleb128 0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 112


 3315 0eaf 00       		.byte	0
 3316 0eb0 1C       		.uleb128 0x1c
 3317 0eb1 B0000000 		.4byte	.LVL133
 3318 0eb5 E2100000 		.4byte	0x10e2
 3319 0eb9 CA0E0000 		.4byte	0xeca
 3320 0ebd 1D       		.uleb128 0x1d
 3321 0ebe 01       		.uleb128 0x1
 3322 0ebf 50       		.byte	0x50
 3323 0ec0 02       		.uleb128 0x2
 3324 0ec1 74       		.byte	0x74
 3325 0ec2 00       		.sleb128 0
 3326 0ec3 1D       		.uleb128 0x1d
 3327 0ec4 01       		.uleb128 0x1
 3328 0ec5 51       		.byte	0x51
 3329 0ec6 02       		.uleb128 0x2
 3330 0ec7 08       		.byte	0x8
 3331 0ec8 55       		.byte	0x55
 3332 0ec9 00       		.byte	0
 3333 0eca 1C       		.uleb128 0x1c
 3334 0ecb D6000000 		.4byte	.LVL135
 3335 0ecf 05110000 		.4byte	0x1105
 3336 0ed3 DF0E0000 		.4byte	0xedf
 3337 0ed7 1D       		.uleb128 0x1d
 3338 0ed8 01       		.uleb128 0x1
 3339 0ed9 50       		.byte	0x50
 3340 0eda 03       		.uleb128 0x3
 3341 0edb 91       		.byte	0x91
 3342 0edc AC7F     		.sleb128 -84
 3343 0ede 00       		.byte	0
 3344 0edf 1C       		.uleb128 0x1c
 3345 0ee0 F0000000 		.4byte	.LVL140
 3346 0ee4 8A0D0000 		.4byte	0xd8a
 3347 0ee8 F30E0000 		.4byte	0xef3
 3348 0eec 1D       		.uleb128 0x1d
 3349 0eed 01       		.uleb128 0x1
 3350 0eee 50       		.byte	0x50
 3351 0eef 02       		.uleb128 0x2
 3352 0ef0 74       		.byte	0x74
 3353 0ef1 00       		.sleb128 0
 3354 0ef2 00       		.byte	0
 3355 0ef3 20       		.uleb128 0x20
 3356 0ef4 F8000000 		.4byte	.LVL141
 3357 0ef8 E2100000 		.4byte	0x10e2
 3358 0efc 1D       		.uleb128 0x1d
 3359 0efd 01       		.uleb128 0x1
 3360 0efe 50       		.byte	0x50
 3361 0eff 02       		.uleb128 0x2
 3362 0f00 74       		.byte	0x74
 3363 0f01 00       		.sleb128 0
 3364 0f02 1D       		.uleb128 0x1d
 3365 0f03 01       		.uleb128 0x1
 3366 0f04 51       		.byte	0x51
 3367 0f05 02       		.uleb128 0x2
 3368 0f06 08       		.byte	0x8
 3369 0f07 55       		.byte	0x55
 3370 0f08 00       		.byte	0
 3371 0f09 00       		.byte	0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 113


 3372 0f0a 0D       		.uleb128 0xd
 3373 0f0b 83000000 		.4byte	0x83
 3374 0f0f 1A0F0000 		.4byte	0xf1a
 3375 0f13 0E       		.uleb128 0xe
 3376 0f14 D6020000 		.4byte	0x2d6
 3377 0f18 07       		.byte	0x7
 3378 0f19 00       		.byte	0
 3379 0f1a 1E       		.uleb128 0x1e
 3380 0f1b F8010000 		.4byte	.LASF171
 3381 0f1f 01       		.byte	0x1
 3382 0f20 8908     		.2byte	0x889
 3383 0f22 00000000 		.4byte	.LFB19
 3384 0f26 20000000 		.4byte	.LFE19-.LFB19
 3385 0f2a 01       		.uleb128 0x1
 3386 0f2b 9C       		.byte	0x9c
 3387 0f2c 610F0000 		.4byte	0xf61
 3388 0f30 17       		.uleb128 0x17
 3389 0f31 C2070000 		.4byte	.LASF127
 3390 0f35 01       		.byte	0x1
 3391 0f36 8B08     		.2byte	0x88b
 3392 0f38 83000000 		.4byte	0x83
 3393 0f3c 38060000 		.4byte	.LLST43
 3394 0f40 17       		.uleb128 0x17
 3395 0f41 81020000 		.4byte	.LASF157
 3396 0f45 01       		.byte	0x1
 3397 0f46 8C08     		.2byte	0x88c
 3398 0f48 EB0C0000 		.4byte	0xceb
 3399 0f4c 57060000 		.4byte	.LLST44
 3400 0f50 20       		.uleb128 0x20
 3401 0f51 14000000 		.4byte	.LVL149
 3402 0f55 8A0D0000 		.4byte	0xd8a
 3403 0f59 1D       		.uleb128 0x1d
 3404 0f5a 01       		.uleb128 0x1
 3405 0f5b 50       		.byte	0x50
 3406 0f5c 02       		.uleb128 0x2
 3407 0f5d 74       		.byte	0x74
 3408 0f5e 00       		.sleb128 0
 3409 0f5f 00       		.byte	0
 3410 0f60 00       		.byte	0
 3411 0f61 1A       		.uleb128 0x1a
 3412 0f62 BA000000 		.4byte	.LASF172
 3413 0f66 01       		.byte	0x1
 3414 0f67 0402     		.2byte	0x204
 3415 0f69 A4000000 		.4byte	0xa4
 3416 0f6d 00000000 		.4byte	.LFB4
 3417 0f71 18000000 		.4byte	.LFE4-.LFB4
 3418 0f75 01       		.uleb128 0x1
 3419 0f76 9C       		.byte	0x9c
 3420 0f77 B30F0000 		.4byte	0xfb3
 3421 0f7b 1F       		.uleb128 0x1f
 3422 0f7c 24010000 		.4byte	.LASF173
 3423 0f80 01       		.byte	0x1
 3424 0f81 0602     		.2byte	0x206
 3425 0f83 A4000000 		.4byte	0xa4
 3426 0f87 00       		.byte	0
 3427 0f88 18       		.uleb128 0x18
 3428 0f89 06000000 		.4byte	.LVL153
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 114


 3429 0f8d E1070000 		.4byte	0x7e1
 3430 0f91 18       		.uleb128 0x18
 3431 0f92 0A000000 		.4byte	.LVL154
 3432 0f96 1A0F0000 		.4byte	0xf1a
 3433 0f9a 18       		.uleb128 0x18
 3434 0f9b 0E000000 		.4byte	.LVL155
 3435 0f9f 240A0000 		.4byte	0xa24
 3436 0fa3 20       		.uleb128 0x20
 3437 0fa4 14000000 		.4byte	.LVL156
 3438 0fa8 EB090000 		.4byte	0x9eb
 3439 0fac 1D       		.uleb128 0x1d
 3440 0fad 01       		.uleb128 0x1
 3441 0fae 50       		.byte	0x50
 3442 0faf 01       		.uleb128 0x1
 3443 0fb0 31       		.byte	0x31
 3444 0fb1 00       		.byte	0
 3445 0fb2 00       		.byte	0
 3446 0fb3 26       		.uleb128 0x26
 3447 0fb4 D5070000 		.4byte	.LASF174
 3448 0fb8 05       		.byte	0x5
 3449 0fb9 7104     		.2byte	0x471
 3450 0fbb 2F060000 		.4byte	0x62f
 3451 0fbf 26       		.uleb128 0x26
 3452 0fc0 04090000 		.4byte	.LASF175
 3453 0fc4 05       		.byte	0x5
 3454 0fc5 7204     		.2byte	0x472
 3455 0fc7 CB0F0000 		.4byte	0xfcb
 3456 0fcb 21       		.uleb128 0x21
 3457 0fcc A7070000 		.4byte	0x7a7
 3458 0fd0 0D       		.uleb128 0xd
 3459 0fd1 E6090000 		.4byte	0x9e6
 3460 0fd5 E00F0000 		.4byte	0xfe0
 3461 0fd9 0E       		.uleb128 0xe
 3462 0fda D6020000 		.4byte	0x2d6
 3463 0fde 07       		.byte	0x7
 3464 0fdf 00       		.byte	0
 3465 0fe0 26       		.uleb128 0x26
 3466 0fe1 38010000 		.4byte	.LASF176
 3467 0fe5 05       		.byte	0x5
 3468 0fe6 7304     		.2byte	0x473
 3469 0fe8 EC0F0000 		.4byte	0xfec
 3470 0fec 21       		.uleb128 0x21
 3471 0fed D00F0000 		.4byte	0xfd0
 3472 0ff1 27       		.uleb128 0x27
 3473 0ff2 190D0000 		.4byte	.LASF177
 3474 0ff6 01       		.byte	0x1
 3475 0ff7 BB       		.byte	0xbb
 3476 0ff8 BC000000 		.4byte	0xbc
 3477 0ffc 05       		.uleb128 0x5
 3478 0ffd 03       		.byte	0x3
 3479 0ffe 00000000 		.4byte	CapSense_1_widgetIndex
 3480 1002 27       		.uleb128 0x27
 3481 1003 FC090000 		.4byte	.LASF178
 3482 1007 01       		.byte	0x1
 3483 1008 BC       		.byte	0xbc
 3484 1009 BC000000 		.4byte	0xbc
 3485 100d 05       		.uleb128 0x5
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 115


 3486 100e 03       		.byte	0x3
 3487 100f 00000000 		.4byte	CapSense_1_sensorIndex
 3488 1013 27       		.uleb128 0x27
 3489 1014 B4020000 		.4byte	.LASF179
 3490 1018 01       		.byte	0x1
 3491 1019 BD       		.byte	0xbd
 3492 101a 6B000000 		.4byte	0x6b
 3493 101e 05       		.uleb128 0x5
 3494 101f 03       		.byte	0x3
 3495 1020 00000000 		.4byte	CapSense_1_requestScanAllWidget
 3496 1024 27       		.uleb128 0x27
 3497 1025 50000000 		.4byte	.LASF180
 3498 1029 01       		.byte	0x1
 3499 102a C0       		.byte	0xc0
 3500 102b 61070000 		.4byte	0x761
 3501 102f 05       		.uleb128 0x5
 3502 1030 03       		.byte	0x3
 3503 1031 00000000 		.4byte	CapSense_1_curRamSnsPtr
 3504 1035 27       		.uleb128 0x27
 3505 1036 440B0000 		.4byte	.LASF181
 3506 103a 01       		.byte	0x1
 3507 103b AE       		.byte	0xae
 3508 103c 22020000 		.4byte	0x222
 3509 1040 05       		.uleb128 0x5
 3510 1041 03       		.byte	0x3
 3511 1042 00000000 		.4byte	CapSense_1_currentSenseMethod
 3512 1046 27       		.uleb128 0x27
 3513 1047 1E020000 		.4byte	.LASF182
 3514 104b 01       		.byte	0x1
 3515 104c B7       		.byte	0xb7
 3516 104d 57100000 		.4byte	0x1057
 3517 1051 05       		.uleb128 0x5
 3518 1052 03       		.byte	0x3
 3519 1053 00000000 		.4byte	CapSense_1_scanFreqIndex
 3520 1057 21       		.uleb128 0x21
 3521 1058 6B000000 		.4byte	0x6b
 3522 105c 27       		.uleb128 0x27
 3523 105d 0D010000 		.4byte	.LASF183
 3524 1061 01       		.byte	0x1
 3525 1062 CF       		.byte	0xcf
 3526 1063 E0090000 		.4byte	0x9e0
 3527 1067 05       		.uleb128 0x5
 3528 1068 03       		.byte	0x3
 3529 1069 00000000 		.4byte	CapSense_1_curSnsIOPtr
 3530 106d 26       		.uleb128 0x26
 3531 106e A1030000 		.4byte	.LASF184
 3532 1072 06       		.byte	0x6
 3533 1073 A501     		.2byte	0x1a5
 3534 1075 6B000000 		.4byte	0x6b
 3535 1079 26       		.uleb128 0x26
 3536 107a AF090000 		.4byte	.LASF185
 3537 107e 06       		.byte	0x6
 3538 107f A601     		.2byte	0x1a6
 3539 1081 77000000 		.4byte	0x77
 3540 1085 28       		.uleb128 0x28
 3541 1086 910A0000 		.4byte	.LASF186
 3542 108a 910A0000 		.4byte	.LASF186
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 116


 3543 108e 06       		.byte	0x6
 3544 108f D401     		.2byte	0x1d4
 3545 1091 28       		.uleb128 0x28
 3546 1092 E2090000 		.4byte	.LASF187
 3547 1096 E2090000 		.4byte	.LASF187
 3548 109a 06       		.byte	0x6
 3549 109b B701     		.2byte	0x1b7
 3550 109d 28       		.uleb128 0x28
 3551 109e 78000000 		.4byte	.LASF188
 3552 10a2 78000000 		.4byte	.LASF188
 3553 10a6 06       		.byte	0x6
 3554 10a7 B901     		.2byte	0x1b9
 3555 10a9 29       		.uleb128 0x29
 3556 10aa 750B0000 		.4byte	.LASF189
 3557 10ae 750B0000 		.4byte	.LASF189
 3558 10b2 07       		.byte	0x7
 3559 10b3 E5       		.byte	0xe5
 3560 10b4 29       		.uleb128 0x29
 3561 10b5 BD050000 		.4byte	.LASF190
 3562 10b9 BD050000 		.4byte	.LASF190
 3563 10bd 07       		.byte	0x7
 3564 10be E6       		.byte	0xe6
 3565 10bf 28       		.uleb128 0x28
 3566 10c0 80010000 		.4byte	.LASF191
 3567 10c4 80010000 		.4byte	.LASF191
 3568 10c8 06       		.byte	0x6
 3569 10c9 C001     		.2byte	0x1c0
 3570 10cb 28       		.uleb128 0x28
 3571 10cc 37020000 		.4byte	.LASF192
 3572 10d0 37020000 		.4byte	.LASF192
 3573 10d4 06       		.byte	0x6
 3574 10d5 D001     		.2byte	0x1d0
 3575 10d7 29       		.uleb128 0x29
 3576 10d8 53040000 		.4byte	.LASF193
 3577 10dc 53040000 		.4byte	.LASF193
 3578 10e0 08       		.byte	0x8
 3579 10e1 18       		.byte	0x18
 3580 10e2 28       		.uleb128 0x28
 3581 10e3 89090000 		.4byte	.LASF194
 3582 10e7 89090000 		.4byte	.LASF194
 3583 10eb 06       		.byte	0x6
 3584 10ec BD01     		.2byte	0x1bd
 3585 10ee 28       		.uleb128 0x28
 3586 10ef 88080000 		.4byte	.LASF195
 3587 10f3 88080000 		.4byte	.LASF195
 3588 10f7 06       		.byte	0x6
 3589 10f8 C101     		.2byte	0x1c1
 3590 10fa 29       		.uleb128 0x29
 3591 10fb 130A0000 		.4byte	.LASF196
 3592 10ff 130A0000 		.4byte	.LASF196
 3593 1103 04       		.byte	0x4
 3594 1104 B0       		.byte	0xb0
 3595 1105 29       		.uleb128 0x29
 3596 1106 BD010000 		.4byte	.LASF197
 3597 110a BD010000 		.4byte	.LASF197
 3598 110e 04       		.byte	0x4
 3599 110f B1       		.byte	0xb1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 117


 3600 1110 00       		.byte	0
 3601              		.section	.debug_abbrev,"",%progbits
 3602              	.Ldebug_abbrev0:
 3603 0000 01       		.uleb128 0x1
 3604 0001 11       		.uleb128 0x11
 3605 0002 01       		.byte	0x1
 3606 0003 25       		.uleb128 0x25
 3607 0004 0E       		.uleb128 0xe
 3608 0005 13       		.uleb128 0x13
 3609 0006 0B       		.uleb128 0xb
 3610 0007 03       		.uleb128 0x3
 3611 0008 0E       		.uleb128 0xe
 3612 0009 1B       		.uleb128 0x1b
 3613 000a 0E       		.uleb128 0xe
 3614 000b 55       		.uleb128 0x55
 3615 000c 17       		.uleb128 0x17
 3616 000d 11       		.uleb128 0x11
 3617 000e 01       		.uleb128 0x1
 3618 000f 10       		.uleb128 0x10
 3619 0010 17       		.uleb128 0x17
 3620 0011 00       		.byte	0
 3621 0012 00       		.byte	0
 3622 0013 02       		.uleb128 0x2
 3623 0014 24       		.uleb128 0x24
 3624 0015 00       		.byte	0
 3625 0016 0B       		.uleb128 0xb
 3626 0017 0B       		.uleb128 0xb
 3627 0018 3E       		.uleb128 0x3e
 3628 0019 0B       		.uleb128 0xb
 3629 001a 03       		.uleb128 0x3
 3630 001b 0E       		.uleb128 0xe
 3631 001c 00       		.byte	0
 3632 001d 00       		.byte	0
 3633 001e 03       		.uleb128 0x3
 3634 001f 24       		.uleb128 0x24
 3635 0020 00       		.byte	0
 3636 0021 0B       		.uleb128 0xb
 3637 0022 0B       		.uleb128 0xb
 3638 0023 3E       		.uleb128 0x3e
 3639 0024 0B       		.uleb128 0xb
 3640 0025 03       		.uleb128 0x3
 3641 0026 08       		.uleb128 0x8
 3642 0027 00       		.byte	0
 3643 0028 00       		.byte	0
 3644 0029 04       		.uleb128 0x4
 3645 002a 16       		.uleb128 0x16
 3646 002b 00       		.byte	0
 3647 002c 03       		.uleb128 0x3
 3648 002d 0E       		.uleb128 0xe
 3649 002e 3A       		.uleb128 0x3a
 3650 002f 0B       		.uleb128 0xb
 3651 0030 3B       		.uleb128 0x3b
 3652 0031 05       		.uleb128 0x5
 3653 0032 49       		.uleb128 0x49
 3654 0033 13       		.uleb128 0x13
 3655 0034 00       		.byte	0
 3656 0035 00       		.byte	0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 118


 3657 0036 05       		.uleb128 0x5
 3658 0037 35       		.uleb128 0x35
 3659 0038 00       		.byte	0
 3660 0039 49       		.uleb128 0x49
 3661 003a 13       		.uleb128 0x13
 3662 003b 00       		.byte	0
 3663 003c 00       		.byte	0
 3664 003d 06       		.uleb128 0x6
 3665 003e 0F       		.uleb128 0xf
 3666 003f 00       		.byte	0
 3667 0040 0B       		.uleb128 0xb
 3668 0041 0B       		.uleb128 0xb
 3669 0042 49       		.uleb128 0x49
 3670 0043 13       		.uleb128 0x13
 3671 0044 00       		.byte	0
 3672 0045 00       		.byte	0
 3673 0046 07       		.uleb128 0x7
 3674 0047 15       		.uleb128 0x15
 3675 0048 00       		.byte	0
 3676 0049 27       		.uleb128 0x27
 3677 004a 19       		.uleb128 0x19
 3678 004b 00       		.byte	0
 3679 004c 00       		.byte	0
 3680 004d 08       		.uleb128 0x8
 3681 004e 13       		.uleb128 0x13
 3682 004f 01       		.byte	0x1
 3683 0050 0B       		.uleb128 0xb
 3684 0051 0B       		.uleb128 0xb
 3685 0052 3A       		.uleb128 0x3a
 3686 0053 0B       		.uleb128 0xb
 3687 0054 3B       		.uleb128 0x3b
 3688 0055 0B       		.uleb128 0xb
 3689 0056 01       		.uleb128 0x1
 3690 0057 13       		.uleb128 0x13
 3691 0058 00       		.byte	0
 3692 0059 00       		.byte	0
 3693 005a 09       		.uleb128 0x9
 3694 005b 0D       		.uleb128 0xd
 3695 005c 00       		.byte	0
 3696 005d 03       		.uleb128 0x3
 3697 005e 0E       		.uleb128 0xe
 3698 005f 3A       		.uleb128 0x3a
 3699 0060 0B       		.uleb128 0xb
 3700 0061 3B       		.uleb128 0x3b
 3701 0062 0B       		.uleb128 0xb
 3702 0063 49       		.uleb128 0x49
 3703 0064 13       		.uleb128 0x13
 3704 0065 38       		.uleb128 0x38
 3705 0066 0B       		.uleb128 0xb
 3706 0067 00       		.byte	0
 3707 0068 00       		.byte	0
 3708 0069 0A       		.uleb128 0xa
 3709 006a 16       		.uleb128 0x16
 3710 006b 00       		.byte	0
 3711 006c 03       		.uleb128 0x3
 3712 006d 0E       		.uleb128 0xe
 3713 006e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 119


 3714 006f 0B       		.uleb128 0xb
 3715 0070 3B       		.uleb128 0x3b
 3716 0071 0B       		.uleb128 0xb
 3717 0072 49       		.uleb128 0x49
 3718 0073 13       		.uleb128 0x13
 3719 0074 00       		.byte	0
 3720 0075 00       		.byte	0
 3721 0076 0B       		.uleb128 0xb
 3722 0077 04       		.uleb128 0x4
 3723 0078 01       		.byte	0x1
 3724 0079 0B       		.uleb128 0xb
 3725 007a 0B       		.uleb128 0xb
 3726 007b 49       		.uleb128 0x49
 3727 007c 13       		.uleb128 0x13
 3728 007d 3A       		.uleb128 0x3a
 3729 007e 0B       		.uleb128 0xb
 3730 007f 3B       		.uleb128 0x3b
 3731 0080 0B       		.uleb128 0xb
 3732 0081 01       		.uleb128 0x1
 3733 0082 13       		.uleb128 0x13
 3734 0083 00       		.byte	0
 3735 0084 00       		.byte	0
 3736 0085 0C       		.uleb128 0xc
 3737 0086 28       		.uleb128 0x28
 3738 0087 00       		.byte	0
 3739 0088 03       		.uleb128 0x3
 3740 0089 0E       		.uleb128 0xe
 3741 008a 1C       		.uleb128 0x1c
 3742 008b 0B       		.uleb128 0xb
 3743 008c 00       		.byte	0
 3744 008d 00       		.byte	0
 3745 008e 0D       		.uleb128 0xd
 3746 008f 01       		.uleb128 0x1
 3747 0090 01       		.byte	0x1
 3748 0091 49       		.uleb128 0x49
 3749 0092 13       		.uleb128 0x13
 3750 0093 01       		.uleb128 0x1
 3751 0094 13       		.uleb128 0x13
 3752 0095 00       		.byte	0
 3753 0096 00       		.byte	0
 3754 0097 0E       		.uleb128 0xe
 3755 0098 21       		.uleb128 0x21
 3756 0099 00       		.byte	0
 3757 009a 49       		.uleb128 0x49
 3758 009b 13       		.uleb128 0x13
 3759 009c 2F       		.uleb128 0x2f
 3760 009d 0B       		.uleb128 0xb
 3761 009e 00       		.byte	0
 3762 009f 00       		.byte	0
 3763 00a0 0F       		.uleb128 0xf
 3764 00a1 0D       		.uleb128 0xd
 3765 00a2 00       		.byte	0
 3766 00a3 03       		.uleb128 0x3
 3767 00a4 0E       		.uleb128 0xe
 3768 00a5 3A       		.uleb128 0x3a
 3769 00a6 0B       		.uleb128 0xb
 3770 00a7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 120


 3771 00a8 05       		.uleb128 0x5
 3772 00a9 49       		.uleb128 0x49
 3773 00aa 13       		.uleb128 0x13
 3774 00ab 38       		.uleb128 0x38
 3775 00ac 0B       		.uleb128 0xb
 3776 00ad 00       		.byte	0
 3777 00ae 00       		.byte	0
 3778 00af 10       		.uleb128 0x10
 3779 00b0 13       		.uleb128 0x13
 3780 00b1 01       		.byte	0x1
 3781 00b2 0B       		.uleb128 0xb
 3782 00b3 0B       		.uleb128 0xb
 3783 00b4 3A       		.uleb128 0x3a
 3784 00b5 0B       		.uleb128 0xb
 3785 00b6 3B       		.uleb128 0x3b
 3786 00b7 05       		.uleb128 0x5
 3787 00b8 01       		.uleb128 0x1
 3788 00b9 13       		.uleb128 0x13
 3789 00ba 00       		.byte	0
 3790 00bb 00       		.byte	0
 3791 00bc 11       		.uleb128 0x11
 3792 00bd 0D       		.uleb128 0xd
 3793 00be 00       		.byte	0
 3794 00bf 03       		.uleb128 0x3
 3795 00c0 08       		.uleb128 0x8
 3796 00c1 3A       		.uleb128 0x3a
 3797 00c2 0B       		.uleb128 0xb
 3798 00c3 3B       		.uleb128 0x3b
 3799 00c4 05       		.uleb128 0x5
 3800 00c5 49       		.uleb128 0x49
 3801 00c6 13       		.uleb128 0x13
 3802 00c7 38       		.uleb128 0x38
 3803 00c8 0B       		.uleb128 0xb
 3804 00c9 00       		.byte	0
 3805 00ca 00       		.byte	0
 3806 00cb 12       		.uleb128 0x12
 3807 00cc 13       		.uleb128 0x13
 3808 00cd 01       		.byte	0x1
 3809 00ce 0B       		.uleb128 0xb
 3810 00cf 05       		.uleb128 0x5
 3811 00d0 3A       		.uleb128 0x3a
 3812 00d1 0B       		.uleb128 0xb
 3813 00d2 3B       		.uleb128 0x3b
 3814 00d3 05       		.uleb128 0x5
 3815 00d4 01       		.uleb128 0x1
 3816 00d5 13       		.uleb128 0x13
 3817 00d6 00       		.byte	0
 3818 00d7 00       		.byte	0
 3819 00d8 13       		.uleb128 0x13
 3820 00d9 0D       		.uleb128 0xd
 3821 00da 00       		.byte	0
 3822 00db 03       		.uleb128 0x3
 3823 00dc 0E       		.uleb128 0xe
 3824 00dd 3A       		.uleb128 0x3a
 3825 00de 0B       		.uleb128 0xb
 3826 00df 3B       		.uleb128 0x3b
 3827 00e0 05       		.uleb128 0x5
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 121


 3828 00e1 49       		.uleb128 0x49
 3829 00e2 13       		.uleb128 0x13
 3830 00e3 38       		.uleb128 0x38
 3831 00e4 05       		.uleb128 0x5
 3832 00e5 00       		.byte	0
 3833 00e6 00       		.byte	0
 3834 00e7 14       		.uleb128 0x14
 3835 00e8 26       		.uleb128 0x26
 3836 00e9 00       		.byte	0
 3837 00ea 00       		.byte	0
 3838 00eb 00       		.byte	0
 3839 00ec 15       		.uleb128 0x15
 3840 00ed 0F       		.uleb128 0xf
 3841 00ee 00       		.byte	0
 3842 00ef 0B       		.uleb128 0xb
 3843 00f0 0B       		.uleb128 0xb
 3844 00f1 00       		.byte	0
 3845 00f2 00       		.byte	0
 3846 00f3 16       		.uleb128 0x16
 3847 00f4 2E       		.uleb128 0x2e
 3848 00f5 01       		.byte	0x1
 3849 00f6 03       		.uleb128 0x3
 3850 00f7 0E       		.uleb128 0xe
 3851 00f8 3A       		.uleb128 0x3a
 3852 00f9 0B       		.uleb128 0xb
 3853 00fa 3B       		.uleb128 0x3b
 3854 00fb 05       		.uleb128 0x5
 3855 00fc 27       		.uleb128 0x27
 3856 00fd 19       		.uleb128 0x19
 3857 00fe 11       		.uleb128 0x11
 3858 00ff 01       		.uleb128 0x1
 3859 0100 12       		.uleb128 0x12
 3860 0101 06       		.uleb128 0x6
 3861 0102 40       		.uleb128 0x40
 3862 0103 18       		.uleb128 0x18
 3863 0104 9742     		.uleb128 0x2117
 3864 0106 19       		.uleb128 0x19
 3865 0107 01       		.uleb128 0x1
 3866 0108 13       		.uleb128 0x13
 3867 0109 00       		.byte	0
 3868 010a 00       		.byte	0
 3869 010b 17       		.uleb128 0x17
 3870 010c 34       		.uleb128 0x34
 3871 010d 00       		.byte	0
 3872 010e 03       		.uleb128 0x3
 3873 010f 0E       		.uleb128 0xe
 3874 0110 3A       		.uleb128 0x3a
 3875 0111 0B       		.uleb128 0xb
 3876 0112 3B       		.uleb128 0x3b
 3877 0113 05       		.uleb128 0x5
 3878 0114 49       		.uleb128 0x49
 3879 0115 13       		.uleb128 0x13
 3880 0116 02       		.uleb128 0x2
 3881 0117 17       		.uleb128 0x17
 3882 0118 00       		.byte	0
 3883 0119 00       		.byte	0
 3884 011a 18       		.uleb128 0x18
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 122


 3885 011b 898201   		.uleb128 0x4109
 3886 011e 00       		.byte	0
 3887 011f 11       		.uleb128 0x11
 3888 0120 01       		.uleb128 0x1
 3889 0121 31       		.uleb128 0x31
 3890 0122 13       		.uleb128 0x13
 3891 0123 00       		.byte	0
 3892 0124 00       		.byte	0
 3893 0125 19       		.uleb128 0x19
 3894 0126 2E       		.uleb128 0x2e
 3895 0127 00       		.byte	0
 3896 0128 3F       		.uleb128 0x3f
 3897 0129 19       		.uleb128 0x19
 3898 012a 03       		.uleb128 0x3
 3899 012b 0E       		.uleb128 0xe
 3900 012c 3A       		.uleb128 0x3a
 3901 012d 0B       		.uleb128 0xb
 3902 012e 3B       		.uleb128 0x3b
 3903 012f 0B       		.uleb128 0xb
 3904 0130 27       		.uleb128 0x27
 3905 0131 19       		.uleb128 0x19
 3906 0132 49       		.uleb128 0x49
 3907 0133 13       		.uleb128 0x13
 3908 0134 11       		.uleb128 0x11
 3909 0135 01       		.uleb128 0x1
 3910 0136 12       		.uleb128 0x12
 3911 0137 06       		.uleb128 0x6
 3912 0138 40       		.uleb128 0x40
 3913 0139 18       		.uleb128 0x18
 3914 013a 9742     		.uleb128 0x2117
 3915 013c 19       		.uleb128 0x19
 3916 013d 00       		.byte	0
 3917 013e 00       		.byte	0
 3918 013f 1A       		.uleb128 0x1a
 3919 0140 2E       		.uleb128 0x2e
 3920 0141 01       		.byte	0x1
 3921 0142 3F       		.uleb128 0x3f
 3922 0143 19       		.uleb128 0x19
 3923 0144 03       		.uleb128 0x3
 3924 0145 0E       		.uleb128 0xe
 3925 0146 3A       		.uleb128 0x3a
 3926 0147 0B       		.uleb128 0xb
 3927 0148 3B       		.uleb128 0x3b
 3928 0149 05       		.uleb128 0x5
 3929 014a 27       		.uleb128 0x27
 3930 014b 19       		.uleb128 0x19
 3931 014c 49       		.uleb128 0x49
 3932 014d 13       		.uleb128 0x13
 3933 014e 11       		.uleb128 0x11
 3934 014f 01       		.uleb128 0x1
 3935 0150 12       		.uleb128 0x12
 3936 0151 06       		.uleb128 0x6
 3937 0152 40       		.uleb128 0x40
 3938 0153 18       		.uleb128 0x18
 3939 0154 9742     		.uleb128 0x2117
 3940 0156 19       		.uleb128 0x19
 3941 0157 01       		.uleb128 0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 123


 3942 0158 13       		.uleb128 0x13
 3943 0159 00       		.byte	0
 3944 015a 00       		.byte	0
 3945 015b 1B       		.uleb128 0x1b
 3946 015c 05       		.uleb128 0x5
 3947 015d 00       		.byte	0
 3948 015e 03       		.uleb128 0x3
 3949 015f 0E       		.uleb128 0xe
 3950 0160 3A       		.uleb128 0x3a
 3951 0161 0B       		.uleb128 0xb
 3952 0162 3B       		.uleb128 0x3b
 3953 0163 05       		.uleb128 0x5
 3954 0164 49       		.uleb128 0x49
 3955 0165 13       		.uleb128 0x13
 3956 0166 02       		.uleb128 0x2
 3957 0167 17       		.uleb128 0x17
 3958 0168 00       		.byte	0
 3959 0169 00       		.byte	0
 3960 016a 1C       		.uleb128 0x1c
 3961 016b 898201   		.uleb128 0x4109
 3962 016e 01       		.byte	0x1
 3963 016f 11       		.uleb128 0x11
 3964 0170 01       		.uleb128 0x1
 3965 0171 31       		.uleb128 0x31
 3966 0172 13       		.uleb128 0x13
 3967 0173 01       		.uleb128 0x1
 3968 0174 13       		.uleb128 0x13
 3969 0175 00       		.byte	0
 3970 0176 00       		.byte	0
 3971 0177 1D       		.uleb128 0x1d
 3972 0178 8A8201   		.uleb128 0x410a
 3973 017b 00       		.byte	0
 3974 017c 02       		.uleb128 0x2
 3975 017d 18       		.uleb128 0x18
 3976 017e 9142     		.uleb128 0x2111
 3977 0180 18       		.uleb128 0x18
 3978 0181 00       		.byte	0
 3979 0182 00       		.byte	0
 3980 0183 1E       		.uleb128 0x1e
 3981 0184 2E       		.uleb128 0x2e
 3982 0185 01       		.byte	0x1
 3983 0186 3F       		.uleb128 0x3f
 3984 0187 19       		.uleb128 0x19
 3985 0188 03       		.uleb128 0x3
 3986 0189 0E       		.uleb128 0xe
 3987 018a 3A       		.uleb128 0x3a
 3988 018b 0B       		.uleb128 0xb
 3989 018c 3B       		.uleb128 0x3b
 3990 018d 05       		.uleb128 0x5
 3991 018e 27       		.uleb128 0x27
 3992 018f 19       		.uleb128 0x19
 3993 0190 11       		.uleb128 0x11
 3994 0191 01       		.uleb128 0x1
 3995 0192 12       		.uleb128 0x12
 3996 0193 06       		.uleb128 0x6
 3997 0194 40       		.uleb128 0x40
 3998 0195 18       		.uleb128 0x18
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 124


 3999 0196 9742     		.uleb128 0x2117
 4000 0198 19       		.uleb128 0x19
 4001 0199 01       		.uleb128 0x1
 4002 019a 13       		.uleb128 0x13
 4003 019b 00       		.byte	0
 4004 019c 00       		.byte	0
 4005 019d 1F       		.uleb128 0x1f
 4006 019e 34       		.uleb128 0x34
 4007 019f 00       		.byte	0
 4008 01a0 03       		.uleb128 0x3
 4009 01a1 0E       		.uleb128 0xe
 4010 01a2 3A       		.uleb128 0x3a
 4011 01a3 0B       		.uleb128 0xb
 4012 01a4 3B       		.uleb128 0x3b
 4013 01a5 05       		.uleb128 0x5
 4014 01a6 49       		.uleb128 0x49
 4015 01a7 13       		.uleb128 0x13
 4016 01a8 1C       		.uleb128 0x1c
 4017 01a9 0B       		.uleb128 0xb
 4018 01aa 00       		.byte	0
 4019 01ab 00       		.byte	0
 4020 01ac 20       		.uleb128 0x20
 4021 01ad 898201   		.uleb128 0x4109
 4022 01b0 01       		.byte	0x1
 4023 01b1 11       		.uleb128 0x11
 4024 01b2 01       		.uleb128 0x1
 4025 01b3 31       		.uleb128 0x31
 4026 01b4 13       		.uleb128 0x13
 4027 01b5 00       		.byte	0
 4028 01b6 00       		.byte	0
 4029 01b7 21       		.uleb128 0x21
 4030 01b8 26       		.uleb128 0x26
 4031 01b9 00       		.byte	0
 4032 01ba 49       		.uleb128 0x49
 4033 01bb 13       		.uleb128 0x13
 4034 01bc 00       		.byte	0
 4035 01bd 00       		.byte	0
 4036 01be 22       		.uleb128 0x22
 4037 01bf 34       		.uleb128 0x34
 4038 01c0 00       		.byte	0
 4039 01c1 03       		.uleb128 0x3
 4040 01c2 0E       		.uleb128 0xe
 4041 01c3 3A       		.uleb128 0x3a
 4042 01c4 0B       		.uleb128 0xb
 4043 01c5 3B       		.uleb128 0x3b
 4044 01c6 05       		.uleb128 0x5
 4045 01c7 49       		.uleb128 0x49
 4046 01c8 13       		.uleb128 0x13
 4047 01c9 02       		.uleb128 0x2
 4048 01ca 18       		.uleb128 0x18
 4049 01cb 00       		.byte	0
 4050 01cc 00       		.byte	0
 4051 01cd 23       		.uleb128 0x23
 4052 01ce 05       		.uleb128 0x5
 4053 01cf 00       		.byte	0
 4054 01d0 03       		.uleb128 0x3
 4055 01d1 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 125


 4056 01d2 3A       		.uleb128 0x3a
 4057 01d3 0B       		.uleb128 0xb
 4058 01d4 3B       		.uleb128 0x3b
 4059 01d5 05       		.uleb128 0x5
 4060 01d6 49       		.uleb128 0x49
 4061 01d7 13       		.uleb128 0x13
 4062 01d8 02       		.uleb128 0x2
 4063 01d9 18       		.uleb128 0x18
 4064 01da 00       		.byte	0
 4065 01db 00       		.byte	0
 4066 01dc 24       		.uleb128 0x24
 4067 01dd 2E       		.uleb128 0x2e
 4068 01de 01       		.byte	0x1
 4069 01df 3F       		.uleb128 0x3f
 4070 01e0 19       		.uleb128 0x19
 4071 01e1 03       		.uleb128 0x3
 4072 01e2 0E       		.uleb128 0xe
 4073 01e3 3A       		.uleb128 0x3a
 4074 01e4 0B       		.uleb128 0xb
 4075 01e5 3B       		.uleb128 0x3b
 4076 01e6 05       		.uleb128 0x5
 4077 01e7 27       		.uleb128 0x27
 4078 01e8 19       		.uleb128 0x19
 4079 01e9 49       		.uleb128 0x49
 4080 01ea 13       		.uleb128 0x13
 4081 01eb 11       		.uleb128 0x11
 4082 01ec 01       		.uleb128 0x1
 4083 01ed 12       		.uleb128 0x12
 4084 01ee 06       		.uleb128 0x6
 4085 01ef 40       		.uleb128 0x40
 4086 01f0 18       		.uleb128 0x18
 4087 01f1 9642     		.uleb128 0x2116
 4088 01f3 19       		.uleb128 0x19
 4089 01f4 01       		.uleb128 0x1
 4090 01f5 13       		.uleb128 0x13
 4091 01f6 00       		.byte	0
 4092 01f7 00       		.byte	0
 4093 01f8 25       		.uleb128 0x25
 4094 01f9 34       		.uleb128 0x34
 4095 01fa 00       		.byte	0
 4096 01fb 03       		.uleb128 0x3
 4097 01fc 08       		.uleb128 0x8
 4098 01fd 3A       		.uleb128 0x3a
 4099 01fe 0B       		.uleb128 0xb
 4100 01ff 3B       		.uleb128 0x3b
 4101 0200 05       		.uleb128 0x5
 4102 0201 49       		.uleb128 0x49
 4103 0202 13       		.uleb128 0x13
 4104 0203 02       		.uleb128 0x2
 4105 0204 17       		.uleb128 0x17
 4106 0205 00       		.byte	0
 4107 0206 00       		.byte	0
 4108 0207 26       		.uleb128 0x26
 4109 0208 34       		.uleb128 0x34
 4110 0209 00       		.byte	0
 4111 020a 03       		.uleb128 0x3
 4112 020b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 126


 4113 020c 3A       		.uleb128 0x3a
 4114 020d 0B       		.uleb128 0xb
 4115 020e 3B       		.uleb128 0x3b
 4116 020f 05       		.uleb128 0x5
 4117 0210 49       		.uleb128 0x49
 4118 0211 13       		.uleb128 0x13
 4119 0212 3F       		.uleb128 0x3f
 4120 0213 19       		.uleb128 0x19
 4121 0214 3C       		.uleb128 0x3c
 4122 0215 19       		.uleb128 0x19
 4123 0216 00       		.byte	0
 4124 0217 00       		.byte	0
 4125 0218 27       		.uleb128 0x27
 4126 0219 34       		.uleb128 0x34
 4127 021a 00       		.byte	0
 4128 021b 03       		.uleb128 0x3
 4129 021c 0E       		.uleb128 0xe
 4130 021d 3A       		.uleb128 0x3a
 4131 021e 0B       		.uleb128 0xb
 4132 021f 3B       		.uleb128 0x3b
 4133 0220 0B       		.uleb128 0xb
 4134 0221 49       		.uleb128 0x49
 4135 0222 13       		.uleb128 0x13
 4136 0223 3F       		.uleb128 0x3f
 4137 0224 19       		.uleb128 0x19
 4138 0225 02       		.uleb128 0x2
 4139 0226 18       		.uleb128 0x18
 4140 0227 00       		.byte	0
 4141 0228 00       		.byte	0
 4142 0229 28       		.uleb128 0x28
 4143 022a 2E       		.uleb128 0x2e
 4144 022b 00       		.byte	0
 4145 022c 3F       		.uleb128 0x3f
 4146 022d 19       		.uleb128 0x19
 4147 022e 3C       		.uleb128 0x3c
 4148 022f 19       		.uleb128 0x19
 4149 0230 6E       		.uleb128 0x6e
 4150 0231 0E       		.uleb128 0xe
 4151 0232 03       		.uleb128 0x3
 4152 0233 0E       		.uleb128 0xe
 4153 0234 3A       		.uleb128 0x3a
 4154 0235 0B       		.uleb128 0xb
 4155 0236 3B       		.uleb128 0x3b
 4156 0237 05       		.uleb128 0x5
 4157 0238 00       		.byte	0
 4158 0239 00       		.byte	0
 4159 023a 29       		.uleb128 0x29
 4160 023b 2E       		.uleb128 0x2e
 4161 023c 00       		.byte	0
 4162 023d 3F       		.uleb128 0x3f
 4163 023e 19       		.uleb128 0x19
 4164 023f 3C       		.uleb128 0x3c
 4165 0240 19       		.uleb128 0x19
 4166 0241 6E       		.uleb128 0x6e
 4167 0242 0E       		.uleb128 0xe
 4168 0243 03       		.uleb128 0x3
 4169 0244 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 127


 4170 0245 3A       		.uleb128 0x3a
 4171 0246 0B       		.uleb128 0xb
 4172 0247 3B       		.uleb128 0x3b
 4173 0248 0B       		.uleb128 0xb
 4174 0249 00       		.byte	0
 4175 024a 00       		.byte	0
 4176 024b 00       		.byte	0
 4177              		.section	.debug_loc,"",%progbits
 4178              	.Ldebug_loc0:
 4179              	.LLST0:
 4180 0000 0C000000 		.4byte	.LVL0
 4181 0004 16000000 		.4byte	.LVL1
 4182 0008 0100     		.2byte	0x1
 4183 000a 51       		.byte	0x51
 4184 000b 16000000 		.4byte	.LVL1
 4185 000f 2C000000 		.4byte	.LFE17
 4186 0013 0100     		.2byte	0x1
 4187 0015 53       		.byte	0x53
 4188 0016 00000000 		.4byte	0
 4189 001a 00000000 		.4byte	0
 4190              	.LLST1:
 4191 001e 06000000 		.4byte	.LVL5
 4192 0022 0A000000 		.4byte	.LVL6
 4193 0026 0100     		.2byte	0x1
 4194 0028 51       		.byte	0x51
 4195 0029 0A000000 		.4byte	.LVL6
 4196 002d 0F000000 		.4byte	.LVL7-1
 4197 0031 0100     		.2byte	0x1
 4198 0033 53       		.byte	0x53
 4199 0034 00000000 		.4byte	0
 4200 0038 00000000 		.4byte	0
 4201              	.LLST2:
 4202 003c 00000000 		.4byte	.LVL8
 4203 0040 37000000 		.4byte	.LVL10-1
 4204 0044 0100     		.2byte	0x1
 4205 0046 50       		.byte	0x50
 4206 0047 37000000 		.4byte	.LVL10-1
 4207 004b 40000000 		.4byte	.LFE1
 4208 004f 0400     		.2byte	0x4
 4209 0051 F3       		.byte	0xf3
 4210 0052 01       		.uleb128 0x1
 4211 0053 50       		.byte	0x50
 4212 0054 9F       		.byte	0x9f
 4213 0055 00000000 		.4byte	0
 4214 0059 00000000 		.4byte	0
 4215              	.LLST3:
 4216 005d 30000000 		.4byte	.LVL9
 4217 0061 3A000000 		.4byte	.LVL11
 4218 0065 0100     		.2byte	0x1
 4219 0067 54       		.byte	0x54
 4220 0068 3A000000 		.4byte	.LVL11
 4221 006c 40000000 		.4byte	.LFE1
 4222 0070 0100     		.2byte	0x1
 4223 0072 50       		.byte	0x50
 4224 0073 00000000 		.4byte	0
 4225 0077 00000000 		.4byte	0
 4226              	.LLST4:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 128


 4227 007b 02000000 		.4byte	.LVL12
 4228 007f 22000000 		.4byte	.LVL14
 4229 0083 0200     		.2byte	0x2
 4230 0085 30       		.byte	0x30
 4231 0086 9F       		.byte	0x9f
 4232 0087 22000000 		.4byte	.LVL14
 4233 008b 2C000000 		.4byte	.LFE2
 4234 008f 0100     		.2byte	0x1
 4235 0091 50       		.byte	0x50
 4236 0092 00000000 		.4byte	0
 4237 0096 00000000 		.4byte	0
 4238              	.LLST5:
 4239 009a 02000000 		.4byte	.LVL15
 4240 009e 12000000 		.4byte	.LVL16
 4241 00a2 0300     		.2byte	0x3
 4242 00a4 09       		.byte	0x9
 4243 00a5 FF       		.byte	0xff
 4244 00a6 9F       		.byte	0x9f
 4245 00a7 12000000 		.4byte	.LVL16
 4246 00ab 14000000 		.4byte	.LVL17
 4247 00af 0100     		.2byte	0x1
 4248 00b1 50       		.byte	0x50
 4249 00b2 18000000 		.4byte	.LVL18
 4250 00b6 31000000 		.4byte	.LVL19-1
 4251 00ba 0100     		.2byte	0x1
 4252 00bc 50       		.byte	0x50
 4253 00bd 32000000 		.4byte	.LVL19
 4254 00c1 3C000000 		.4byte	.LVL21
 4255 00c5 0100     		.2byte	0x1
 4256 00c7 50       		.byte	0x50
 4257 00c8 3C000000 		.4byte	.LVL21
 4258 00cc 3E000000 		.4byte	.LVL22
 4259 00d0 0300     		.2byte	0x3
 4260 00d2 09       		.byte	0x9
 4261 00d3 FF       		.byte	0xff
 4262 00d4 9F       		.byte	0x9f
 4263 00d5 3E000000 		.4byte	.LVL22
 4264 00d9 48000000 		.4byte	.LFE3
 4265 00dd 0100     		.2byte	0x1
 4266 00df 50       		.byte	0x50
 4267 00e0 00000000 		.4byte	0
 4268 00e4 00000000 		.4byte	0
 4269              	.LLST6:
 4270 00e8 12000000 		.4byte	.LVL16
 4271 00ec 3C000000 		.4byte	.LVL21
 4272 00f0 0100     		.2byte	0x1
 4273 00f2 54       		.byte	0x54
 4274 00f3 00000000 		.4byte	0
 4275 00f7 00000000 		.4byte	0
 4276              	.LLST7:
 4277 00fb 00000000 		.4byte	.LVL23
 4278 00ff 06000000 		.4byte	.LVL24
 4279 0103 0100     		.2byte	0x1
 4280 0105 50       		.byte	0x50
 4281 0106 06000000 		.4byte	.LVL24
 4282 010a 9C000000 		.4byte	.LFE5
 4283 010e 0400     		.2byte	0x4
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 129


 4284 0110 F3       		.byte	0xf3
 4285 0111 01       		.uleb128 0x1
 4286 0112 50       		.byte	0x50
 4287 0113 9F       		.byte	0x9f
 4288 0114 00000000 		.4byte	0
 4289 0118 00000000 		.4byte	0
 4290              	.LLST8:
 4291 011c 00000000 		.4byte	.LVL23
 4292 0120 0E000000 		.4byte	.LVL25
 4293 0124 0100     		.2byte	0x1
 4294 0126 51       		.byte	0x51
 4295 0127 0E000000 		.4byte	.LVL25
 4296 012b 9C000000 		.4byte	.LFE5
 4297 012f 0400     		.2byte	0x4
 4298 0131 F3       		.byte	0xf3
 4299 0132 01       		.uleb128 0x1
 4300 0133 51       		.byte	0x51
 4301 0134 9F       		.byte	0x9f
 4302 0135 00000000 		.4byte	0
 4303 0139 00000000 		.4byte	0
 4304              	.LLST9:
 4305 013d 00000000 		.4byte	.LVL23
 4306 0141 16000000 		.4byte	.LVL27
 4307 0145 0100     		.2byte	0x1
 4308 0147 52       		.byte	0x52
 4309 0148 16000000 		.4byte	.LVL27
 4310 014c 94000000 		.4byte	.LVL39
 4311 0150 0100     		.2byte	0x1
 4312 0152 56       		.byte	0x56
 4313 0153 94000000 		.4byte	.LVL39
 4314 0157 9C000000 		.4byte	.LFE5
 4315 015b 0400     		.2byte	0x4
 4316 015d F3       		.byte	0xf3
 4317 015e 01       		.uleb128 0x1
 4318 015f 52       		.byte	0x52
 4319 0160 9F       		.byte	0x9f
 4320 0161 00000000 		.4byte	0
 4321 0165 00000000 		.4byte	0
 4322              	.LLST10:
 4323 0169 12000000 		.4byte	.LVL26
 4324 016d 16000000 		.4byte	.LVL27
 4325 0171 0200     		.2byte	0x2
 4326 0173 30       		.byte	0x30
 4327 0174 9F       		.byte	0x9f
 4328 0175 16000000 		.4byte	.LVL27
 4329 0179 94000000 		.4byte	.LVL38
 4330 017d 0100     		.2byte	0x1
 4331 017f 55       		.byte	0x55
 4332 0180 00000000 		.4byte	0
 4333 0184 00000000 		.4byte	0
 4334              	.LLST11:
 4335 0188 1A000000 		.4byte	.LVL28
 4336 018c 39000000 		.4byte	.LVL29-1
 4337 0190 0100     		.2byte	0x1
 4338 0192 50       		.byte	0x50
 4339 0193 4C000000 		.4byte	.LVL30
 4340 0197 6B000000 		.4byte	.LVL31-1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 130


 4341 019b 0100     		.2byte	0x1
 4342 019d 50       		.byte	0x50
 4343 019e 72000000 		.4byte	.LVL32
 4344 01a2 83000000 		.4byte	.LVL33-1
 4345 01a6 0100     		.2byte	0x1
 4346 01a8 50       		.byte	0x50
 4347 01a9 00000000 		.4byte	0
 4348 01ad 00000000 		.4byte	0
 4349              	.LLST12:
 4350 01b1 12000000 		.4byte	.LVL26
 4351 01b5 94000000 		.4byte	.LVL37
 4352 01b9 0100     		.2byte	0x1
 4353 01bb 54       		.byte	0x54
 4354 01bc 00000000 		.4byte	0
 4355 01c0 00000000 		.4byte	0
 4356              	.LLST13:
 4357 01c4 00000000 		.4byte	.LVL40
 4358 01c8 13000000 		.4byte	.LVL41-1
 4359 01cc 0100     		.2byte	0x1
 4360 01ce 50       		.byte	0x50
 4361 01cf 13000000 		.4byte	.LVL41-1
 4362 01d3 3C000000 		.4byte	.LFE7
 4363 01d7 0400     		.2byte	0x4
 4364 01d9 F3       		.byte	0xf3
 4365 01da 01       		.uleb128 0x1
 4366 01db 50       		.byte	0x50
 4367 01dc 9F       		.byte	0x9f
 4368 01dd 00000000 		.4byte	0
 4369 01e1 00000000 		.4byte	0
 4370              	.LLST14:
 4371 01e5 08000000 		.4byte	.LVL44
 4372 01e9 40000000 		.4byte	.LFE8
 4373 01ed 0100     		.2byte	0x1
 4374 01ef 53       		.byte	0x53
 4375 01f0 00000000 		.4byte	0
 4376 01f4 00000000 		.4byte	0
 4377              	.LLST15:
 4378 01f8 02000000 		.4byte	.LVL43
 4379 01fc 08000000 		.4byte	.LVL44
 4380 0200 0200     		.2byte	0x2
 4381 0202 30       		.byte	0x30
 4382 0203 9F       		.byte	0x9f
 4383 0204 08000000 		.4byte	.LVL44
 4384 0208 40000000 		.4byte	.LFE8
 4385 020c 0100     		.2byte	0x1
 4386 020e 50       		.byte	0x50
 4387 020f 00000000 		.4byte	0
 4388 0213 00000000 		.4byte	0
 4389              	.LLST16:
 4390 0217 0C000000 		.4byte	.LVL45
 4391 021b 1E000000 		.4byte	.LVL48
 4392 021f 0100     		.2byte	0x1
 4393 0221 52       		.byte	0x52
 4394 0222 20000000 		.4byte	.LVL49
 4395 0226 26000000 		.4byte	.LVL50
 4396 022a 0100     		.2byte	0x1
 4397 022c 51       		.byte	0x51
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 131


 4398 022d 26000000 		.4byte	.LVL50
 4399 0231 36000000 		.4byte	.LVL54
 4400 0235 0100     		.2byte	0x1
 4401 0237 52       		.byte	0x52
 4402 0238 00000000 		.4byte	0
 4403 023c 00000000 		.4byte	0
 4404              	.LLST17:
 4405 0240 16000000 		.4byte	.LVL56
 4406 0244 29000000 		.4byte	.LVL57-1
 4407 0248 0100     		.2byte	0x1
 4408 024a 50       		.byte	0x50
 4409 024b 29000000 		.4byte	.LVL57-1
 4410 024f 2C000000 		.4byte	.LVL58
 4411 0253 0100     		.2byte	0x1
 4412 0255 54       		.byte	0x54
 4413 0256 2C000000 		.4byte	.LVL58
 4414 025a 54000000 		.4byte	.LVL59
 4415 025e 0100     		.2byte	0x1
 4416 0260 50       		.byte	0x50
 4417 0261 54000000 		.4byte	.LVL59
 4418 0265 58000000 		.4byte	.LVL60
 4419 0269 0200     		.2byte	0x2
 4420 026b 30       		.byte	0x30
 4421 026c 9F       		.byte	0x9f
 4422 026d 58000000 		.4byte	.LVL60
 4423 0271 6A000000 		.4byte	.LVL61
 4424 0275 0100     		.2byte	0x1
 4425 0277 50       		.byte	0x50
 4426 0278 6A000000 		.4byte	.LVL61
 4427 027c 6E000000 		.4byte	.LVL62
 4428 0280 0100     		.2byte	0x1
 4429 0282 54       		.byte	0x54
 4430 0283 00000000 		.4byte	0
 4431 0287 00000000 		.4byte	0
 4432              	.LLST18:
 4433 028b 00000000 		.4byte	.LVL63
 4434 028f 05000000 		.4byte	.LVL64-1
 4435 0293 0100     		.2byte	0x1
 4436 0295 50       		.byte	0x50
 4437 0296 05000000 		.4byte	.LVL64-1
 4438 029a 08000000 		.4byte	.LFE10
 4439 029e 0400     		.2byte	0x4
 4440 02a0 F3       		.byte	0xf3
 4441 02a1 01       		.uleb128 0x1
 4442 02a2 50       		.byte	0x50
 4443 02a3 9F       		.byte	0x9f
 4444 02a4 00000000 		.4byte	0
 4445 02a8 00000000 		.4byte	0
 4446              	.LLST19:
 4447 02ac 00000000 		.4byte	.LVL65
 4448 02b0 12000000 		.4byte	.LVL67
 4449 02b4 0100     		.2byte	0x1
 4450 02b6 50       		.byte	0x50
 4451 02b7 12000000 		.4byte	.LVL67
 4452 02bb 14000000 		.4byte	.LVL68
 4453 02bf 0300     		.2byte	0x3
 4454 02c1 70       		.byte	0x70
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 132


 4455 02c2 01       		.sleb128 1
 4456 02c3 9F       		.byte	0x9f
 4457 02c4 14000000 		.4byte	.LVL68
 4458 02c8 28000000 		.4byte	.LFE11
 4459 02cc 0400     		.2byte	0x4
 4460 02ce F3       		.byte	0xf3
 4461 02cf 01       		.uleb128 0x1
 4462 02d0 50       		.byte	0x50
 4463 02d1 9F       		.byte	0x9f
 4464 02d2 00000000 		.4byte	0
 4465 02d6 00000000 		.4byte	0
 4466              	.LLST20:
 4467 02da 10000000 		.4byte	.LVL66
 4468 02de 14000000 		.4byte	.LVL68
 4469 02e2 0100     		.2byte	0x1
 4470 02e4 52       		.byte	0x52
 4471 02e5 14000000 		.4byte	.LVL68
 4472 02e9 28000000 		.4byte	.LFE11
 4473 02ed 0100     		.2byte	0x1
 4474 02ef 50       		.byte	0x50
 4475 02f0 00000000 		.4byte	0
 4476 02f4 00000000 		.4byte	0
 4477              	.LLST21:
 4478 02f8 00000000 		.4byte	.LVL69
 4479 02fc 12000000 		.4byte	.LVL71
 4480 0300 0100     		.2byte	0x1
 4481 0302 50       		.byte	0x50
 4482 0303 12000000 		.4byte	.LVL71
 4483 0307 14000000 		.4byte	.LVL72
 4484 030b 0300     		.2byte	0x3
 4485 030d 70       		.byte	0x70
 4486 030e 01       		.sleb128 1
 4487 030f 9F       		.byte	0x9f
 4488 0310 14000000 		.4byte	.LVL72
 4489 0314 28000000 		.4byte	.LFE12
 4490 0318 0400     		.2byte	0x4
 4491 031a F3       		.byte	0xf3
 4492 031b 01       		.uleb128 0x1
 4493 031c 50       		.byte	0x50
 4494 031d 9F       		.byte	0x9f
 4495 031e 00000000 		.4byte	0
 4496 0322 00000000 		.4byte	0
 4497              	.LLST22:
 4498 0326 10000000 		.4byte	.LVL70
 4499 032a 14000000 		.4byte	.LVL72
 4500 032e 0100     		.2byte	0x1
 4501 0330 52       		.byte	0x52
 4502 0331 14000000 		.4byte	.LVL72
 4503 0335 28000000 		.4byte	.LFE12
 4504 0339 0100     		.2byte	0x1
 4505 033b 50       		.byte	0x50
 4506 033c 00000000 		.4byte	0
 4507 0340 00000000 		.4byte	0
 4508              	.LLST23:
 4509 0344 00000000 		.4byte	.LVL73
 4510 0348 06000000 		.4byte	.LVL74
 4511 034c 0100     		.2byte	0x1
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 133


 4512 034e 50       		.byte	0x50
 4513 034f 06000000 		.4byte	.LVL74
 4514 0353 10000000 		.4byte	.LVL77
 4515 0357 0100     		.2byte	0x1
 4516 0359 54       		.byte	0x54
 4517 035a 10000000 		.4byte	.LVL77
 4518 035e 12000000 		.4byte	.LFE13
 4519 0362 0400     		.2byte	0x4
 4520 0364 F3       		.byte	0xf3
 4521 0365 01       		.uleb128 0x1
 4522 0366 50       		.byte	0x50
 4523 0367 9F       		.byte	0x9f
 4524 0368 00000000 		.4byte	0
 4525 036c 00000000 		.4byte	0
 4526              	.LLST24:
 4527 0370 00000000 		.4byte	.LVL73
 4528 0374 09000000 		.4byte	.LVL75-1
 4529 0378 0100     		.2byte	0x1
 4530 037a 51       		.byte	0x51
 4531 037b 09000000 		.4byte	.LVL75-1
 4532 037f 12000000 		.4byte	.LFE13
 4533 0383 0400     		.2byte	0x4
 4534 0385 F3       		.byte	0xf3
 4535 0386 01       		.uleb128 0x1
 4536 0387 51       		.byte	0x51
 4537 0388 9F       		.byte	0x9f
 4538 0389 00000000 		.4byte	0
 4539 038d 00000000 		.4byte	0
 4540              	.LLST25:
 4541 0391 00000000 		.4byte	.LVL78
 4542 0395 0A000000 		.4byte	.LVL80
 4543 0399 0100     		.2byte	0x1
 4544 039b 50       		.byte	0x50
 4545 039c 0A000000 		.4byte	.LVL80
 4546 03a0 0C000000 		.4byte	.LVL81
 4547 03a4 0100     		.2byte	0x1
 4548 03a6 53       		.byte	0x53
 4549 03a7 0C000000 		.4byte	.LVL81
 4550 03ab 0E000000 		.4byte	.LVL82
 4551 03af 0100     		.2byte	0x1
 4552 03b1 50       		.byte	0x50
 4553 03b2 0E000000 		.4byte	.LVL82
 4554 03b6 19000000 		.4byte	.LVL84-1
 4555 03ba 0100     		.2byte	0x1
 4556 03bc 53       		.byte	0x53
 4557 03bd 19000000 		.4byte	.LVL84-1
 4558 03c1 1C000000 		.4byte	.LFE14
 4559 03c5 0400     		.2byte	0x4
 4560 03c7 F3       		.byte	0xf3
 4561 03c8 01       		.uleb128 0x1
 4562 03c9 50       		.byte	0x50
 4563 03ca 9F       		.byte	0x9f
 4564 03cb 00000000 		.4byte	0
 4565 03cf 00000000 		.4byte	0
 4566              	.LLST26:
 4567 03d3 04000000 		.4byte	.LVL79
 4568 03d7 0E000000 		.4byte	.LVL82
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 134


 4569 03db 0200     		.2byte	0x2
 4570 03dd 30       		.byte	0x30
 4571 03de 9F       		.byte	0x9f
 4572 03df 0E000000 		.4byte	.LVL82
 4573 03e3 16000000 		.4byte	.LVL83
 4574 03e7 0100     		.2byte	0x1
 4575 03e9 50       		.byte	0x50
 4576 03ea 1A000000 		.4byte	.LVL84
 4577 03ee 1C000000 		.4byte	.LFE14
 4578 03f2 0100     		.2byte	0x1
 4579 03f4 50       		.byte	0x50
 4580 03f5 00000000 		.4byte	0
 4581 03f9 00000000 		.4byte	0
 4582              	.LLST27:
 4583 03fd 02000000 		.4byte	.LVL85
 4584 0401 08000000 		.4byte	.LVL86
 4585 0405 0200     		.2byte	0x2
 4586 0407 30       		.byte	0x30
 4587 0408 9F       		.byte	0x9f
 4588 0409 08000000 		.4byte	.LVL86
 4589 040d 18000000 		.4byte	.LVL91
 4590 0411 0100     		.2byte	0x1
 4591 0413 55       		.byte	0x55
 4592 0414 18000000 		.4byte	.LVL91
 4593 0418 1A000000 		.4byte	.LFE15
 4594 041c 0100     		.2byte	0x1
 4595 041e 50       		.byte	0x50
 4596 041f 00000000 		.4byte	0
 4597 0423 00000000 		.4byte	0
 4598              	.LLST28:
 4599 0427 02000000 		.4byte	.LVL85
 4600 042b 08000000 		.4byte	.LVL86
 4601 042f 0200     		.2byte	0x2
 4602 0431 30       		.byte	0x30
 4603 0432 9F       		.byte	0x9f
 4604 0433 08000000 		.4byte	.LVL86
 4605 0437 18000000 		.4byte	.LVL90
 4606 043b 0100     		.2byte	0x1
 4607 043d 54       		.byte	0x54
 4608 043e 00000000 		.4byte	0
 4609 0442 00000000 		.4byte	0
 4610              	.LLST29:
 4611 0446 02000000 		.4byte	.LVL92
 4612 044a 06000000 		.4byte	.LVL93
 4613 044e 0200     		.2byte	0x2
 4614 0450 30       		.byte	0x30
 4615 0451 9F       		.byte	0x9f
 4616 0452 06000000 		.4byte	.LVL93
 4617 0456 30000000 		.4byte	.LVL99
 4618 045a 0100     		.2byte	0x1
 4619 045c 55       		.byte	0x55
 4620 045d 00000000 		.4byte	0
 4621 0461 00000000 		.4byte	0
 4622              	.LLST30:
 4623 0465 0C000000 		.4byte	.LVL94
 4624 0469 10000000 		.4byte	.LVL95
 4625 046d 0200     		.2byte	0x2
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 135


 4626 046f 30       		.byte	0x30
 4627 0470 9F       		.byte	0x9f
 4628 0471 10000000 		.4byte	.LVL95
 4629 0475 2C000000 		.4byte	.LVL98
 4630 0479 0100     		.2byte	0x1
 4631 047b 54       		.byte	0x54
 4632 047c 00000000 		.4byte	0
 4633 0480 00000000 		.4byte	0
 4634              	.LLST31:
 4635 0484 0C000000 		.4byte	.LVL94
 4636 0488 2C000000 		.4byte	.LVL98
 4637 048c 0100     		.2byte	0x1
 4638 048e 56       		.byte	0x56
 4639 048f 00000000 		.4byte	0
 4640 0493 00000000 		.4byte	0
 4641              	.LLST32:
 4642 0497 00000000 		.4byte	.LVL100
 4643 049b 02000000 		.4byte	.LVL101
 4644 049f 0100     		.2byte	0x1
 4645 04a1 50       		.byte	0x50
 4646 04a2 02000000 		.4byte	.LVL101
 4647 04a6 10000000 		.4byte	.LFE22
 4648 04aa 0400     		.2byte	0x4
 4649 04ac F3       		.byte	0xf3
 4650 04ad 01       		.uleb128 0x1
 4651 04ae 50       		.byte	0x50
 4652 04af 9F       		.byte	0x9f
 4653 04b0 00000000 		.4byte	0
 4654 04b4 00000000 		.4byte	0
 4655              	.LLST33:
 4656 04b8 00000000 		.4byte	.LVL104
 4657 04bc 02000000 		.4byte	.LVL105
 4658 04c0 0100     		.2byte	0x1
 4659 04c2 50       		.byte	0x50
 4660 04c3 02000000 		.4byte	.LVL105
 4661 04c7 10000000 		.4byte	.LFE23
 4662 04cb 0400     		.2byte	0x4
 4663 04cd F3       		.byte	0xf3
 4664 04ce 01       		.uleb128 0x1
 4665 04cf 50       		.byte	0x50
 4666 04d0 9F       		.byte	0x9f
 4667 04d1 00000000 		.4byte	0
 4668 04d5 00000000 		.4byte	0
 4669              	.LLST34:
 4670 04d9 00000000 		.4byte	.LVL107
 4671 04dd 12000000 		.4byte	.LVL108
 4672 04e1 0100     		.2byte	0x1
 4673 04e3 50       		.byte	0x50
 4674 04e4 12000000 		.4byte	.LVL108
 4675 04e8 1A000000 		.4byte	.LVL109
 4676 04ec 0400     		.2byte	0x4
 4677 04ee F3       		.byte	0xf3
 4678 04ef 01       		.uleb128 0x1
 4679 04f0 50       		.byte	0x50
 4680 04f1 9F       		.byte	0x9f
 4681 04f2 1A000000 		.4byte	.LVL109
 4682 04f6 1C000000 		.4byte	.LVL110
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 136


 4683 04fa 0100     		.2byte	0x1
 4684 04fc 50       		.byte	0x50
 4685 04fd 1C000000 		.4byte	.LVL110
 4686 0501 24000000 		.4byte	.LFE24
 4687 0505 0400     		.2byte	0x4
 4688 0507 F3       		.byte	0xf3
 4689 0508 01       		.uleb128 0x1
 4690 0509 50       		.byte	0x50
 4691 050a 9F       		.byte	0x9f
 4692 050b 00000000 		.4byte	0
 4693 050f 00000000 		.4byte	0
 4694              	.LLST35:
 4695 0513 20000000 		.4byte	.LVL111
 4696 0517 22000000 		.4byte	.LVL112
 4697 051b 0100     		.2byte	0x1
 4698 051d 50       		.byte	0x50
 4699 051e 00000000 		.4byte	0
 4700 0522 00000000 		.4byte	0
 4701              	.LLST36:
 4702 0526 00000000 		.4byte	.LVL113
 4703 052a 07000000 		.4byte	.LVL114-1
 4704 052e 0100     		.2byte	0x1
 4705 0530 50       		.byte	0x50
 4706 0531 07000000 		.4byte	.LVL114-1
 4707 0535 14000000 		.4byte	.LFE20
 4708 0539 0400     		.2byte	0x4
 4709 053b F3       		.byte	0xf3
 4710 053c 01       		.uleb128 0x1
 4711 053d 50       		.byte	0x50
 4712 053e 9F       		.byte	0x9f
 4713 053f 00000000 		.4byte	0
 4714 0543 00000000 		.4byte	0
 4715              	.LLST37:
 4716 0547 00000000 		.4byte	.LVL113
 4717 054b 07000000 		.4byte	.LVL114-1
 4718 054f 0100     		.2byte	0x1
 4719 0551 51       		.byte	0x51
 4720 0552 07000000 		.4byte	.LVL114-1
 4721 0556 12000000 		.4byte	.LVL117
 4722 055a 0100     		.2byte	0x1
 4723 055c 54       		.byte	0x54
 4724 055d 12000000 		.4byte	.LVL117
 4725 0561 14000000 		.4byte	.LFE20
 4726 0565 0400     		.2byte	0x4
 4727 0567 F3       		.byte	0xf3
 4728 0568 01       		.uleb128 0x1
 4729 0569 51       		.byte	0x51
 4730 056a 9F       		.byte	0x9f
 4731 056b 00000000 		.4byte	0
 4732 056f 00000000 		.4byte	0
 4733              	.LLST38:
 4734 0573 08000000 		.4byte	.LVL114
 4735 0577 0A000000 		.4byte	.LVL115
 4736 057b 0100     		.2byte	0x1
 4737 057d 50       		.byte	0x50
 4738 057e 00000000 		.4byte	0
 4739 0582 00000000 		.4byte	0
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 137


 4740              	.LLST39:
 4741 0586 04000000 		.4byte	.LVL118
 4742 058a 28000000 		.4byte	.LVL121
 4743 058e 0200     		.2byte	0x2
 4744 0590 30       		.byte	0x30
 4745 0591 9F       		.byte	0x9f
 4746 0592 28000000 		.4byte	.LVL121
 4747 0596 78000000 		.4byte	.LVL127
 4748 059a 0100     		.2byte	0x1
 4749 059c 56       		.byte	0x56
 4750 059d 7A000000 		.4byte	.LVL128
 4751 05a1 04010000 		.4byte	.LVL145
 4752 05a5 0100     		.2byte	0x1
 4753 05a7 56       		.byte	0x56
 4754 05a8 04010000 		.4byte	.LVL145
 4755 05ac 2C010000 		.4byte	.LFE16
 4756 05b0 0100     		.2byte	0x1
 4757 05b2 50       		.byte	0x50
 4758 05b3 00000000 		.4byte	0
 4759 05b7 00000000 		.4byte	0
 4760              	.LLST40:
 4761 05bb 22000000 		.4byte	.LVL120
 4762 05bf 28000000 		.4byte	.LVL121
 4763 05c3 0200     		.2byte	0x2
 4764 05c5 30       		.byte	0x30
 4765 05c6 9F       		.byte	0x9f
 4766 05c7 28000000 		.4byte	.LVL121
 4767 05cb A0000000 		.4byte	.LVL131
 4768 05cf 0100     		.2byte	0x1
 4769 05d1 55       		.byte	0x55
 4770 05d2 A0000000 		.4byte	.LVL131
 4771 05d6 E0000000 		.4byte	.LVL137
 4772 05da 0100     		.2byte	0x1
 4773 05dc 54       		.byte	0x54
 4774 05dd E2000000 		.4byte	.LVL138
 4775 05e1 04010000 		.4byte	.LVL144
 4776 05e5 0100     		.2byte	0x1
 4777 05e7 54       		.byte	0x54
 4778 05e8 00000000 		.4byte	0
 4779 05ec 00000000 		.4byte	0
 4780              	.LLST41:
 4781 05f0 04000000 		.4byte	.LVL118
 4782 05f4 28000000 		.4byte	.LVL121
 4783 05f8 0200     		.2byte	0x2
 4784 05fa 30       		.byte	0x30
 4785 05fb 9F       		.byte	0x9f
 4786 05fc 70000000 		.4byte	.LVL126
 4787 0600 98000000 		.4byte	.LVL130
 4788 0604 0100     		.2byte	0x1
 4789 0606 50       		.byte	0x50
 4790 0607 00000000 		.4byte	0
 4791 060b 00000000 		.4byte	0
 4792              	.LLST42:
 4793 060f 30000000 		.4byte	.LVL122
 4794 0613 98000000 		.4byte	.LVL130
 4795 0617 0100     		.2byte	0x1
 4796 0619 54       		.byte	0x54
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 138


 4797 061a A8000000 		.4byte	.LVL132
 4798 061e DA000000 		.4byte	.LVL136
 4799 0622 0100     		.2byte	0x1
 4800 0624 55       		.byte	0x55
 4801 0625 EA000000 		.4byte	.LVL139
 4802 0629 EF000000 		.4byte	.LVL140-1
 4803 062d 0100     		.2byte	0x1
 4804 062f 51       		.byte	0x51
 4805 0630 00000000 		.4byte	0
 4806 0634 00000000 		.4byte	0
 4807              	.LLST43:
 4808 0638 02000000 		.4byte	.LVL146
 4809 063c 06000000 		.4byte	.LVL147
 4810 0640 0200     		.2byte	0x2
 4811 0642 30       		.byte	0x30
 4812 0643 9F       		.byte	0x9f
 4813 0644 06000000 		.4byte	.LVL147
 4814 0648 1A000000 		.4byte	.LVL151
 4815 064c 0100     		.2byte	0x1
 4816 064e 54       		.byte	0x54
 4817 064f 00000000 		.4byte	0
 4818 0653 00000000 		.4byte	0
 4819              	.LLST44:
 4820 0657 0E000000 		.4byte	.LVL148
 4821 065b 13000000 		.4byte	.LVL149-1
 4822 065f 0100     		.2byte	0x1
 4823 0661 51       		.byte	0x51
 4824 0662 00000000 		.4byte	0
 4825 0666 00000000 		.4byte	0
 4826              		.section	.debug_aranges,"",%progbits
 4827 0000 DC000000 		.4byte	0xdc
 4828 0004 0200     		.2byte	0x2
 4829 0006 00000000 		.4byte	.Ldebug_info0
 4830 000a 04       		.byte	0x4
 4831 000b 00       		.byte	0
 4832 000c 0000     		.2byte	0
 4833 000e 0000     		.2byte	0
 4834 0010 00000000 		.4byte	.LFB17
 4835 0014 2C000000 		.4byte	.LFE17-.LFB17
 4836 0018 00000000 		.4byte	.LFB18
 4837 001c 08000000 		.4byte	.LFE18-.LFB18
 4838 0020 00000000 		.4byte	.LFB6
 4839 0024 1C000000 		.4byte	.LFE6-.LFB6
 4840 0028 00000000 		.4byte	.LFB0
 4841 002c 10000000 		.4byte	.LFE0-.LFB0
 4842 0030 00000000 		.4byte	.LFB1
 4843 0034 40000000 		.4byte	.LFE1-.LFB1
 4844 0038 00000000 		.4byte	.LFB2
 4845 003c 2C000000 		.4byte	.LFE2-.LFB2
 4846 0040 00000000 		.4byte	.LFB3
 4847 0044 48000000 		.4byte	.LFE3-.LFB3
 4848 0048 00000000 		.4byte	.LFB5
 4849 004c 9C000000 		.4byte	.LFE5-.LFB5
 4850 0050 00000000 		.4byte	.LFB7
 4851 0054 3C000000 		.4byte	.LFE7-.LFB7
 4852 0058 00000000 		.4byte	.LFB8
 4853 005c 40000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 139


 4854 0060 00000000 		.4byte	.LFB9
 4855 0064 78000000 		.4byte	.LFE9-.LFB9
 4856 0068 00000000 		.4byte	.LFB10
 4857 006c 08000000 		.4byte	.LFE10-.LFB10
 4858 0070 00000000 		.4byte	.LFB11
 4859 0074 28000000 		.4byte	.LFE11-.LFB11
 4860 0078 00000000 		.4byte	.LFB12
 4861 007c 28000000 		.4byte	.LFE12-.LFB12
 4862 0080 00000000 		.4byte	.LFB13
 4863 0084 12000000 		.4byte	.LFE13-.LFB13
 4864 0088 00000000 		.4byte	.LFB14
 4865 008c 1C000000 		.4byte	.LFE14-.LFB14
 4866 0090 00000000 		.4byte	.LFB15
 4867 0094 1A000000 		.4byte	.LFE15-.LFB15
 4868 0098 00000000 		.4byte	.LFB21
 4869 009c 38000000 		.4byte	.LFE21-.LFB21
 4870 00a0 00000000 		.4byte	.LFB22
 4871 00a4 10000000 		.4byte	.LFE22-.LFB22
 4872 00a8 00000000 		.4byte	.LFB23
 4873 00ac 10000000 		.4byte	.LFE23-.LFB23
 4874 00b0 00000000 		.4byte	.LFB24
 4875 00b4 24000000 		.4byte	.LFE24-.LFB24
 4876 00b8 00000000 		.4byte	.LFB20
 4877 00bc 14000000 		.4byte	.LFE20-.LFB20
 4878 00c0 00000000 		.4byte	.LFB16
 4879 00c4 2C010000 		.4byte	.LFE16-.LFB16
 4880 00c8 00000000 		.4byte	.LFB19
 4881 00cc 20000000 		.4byte	.LFE19-.LFB19
 4882 00d0 00000000 		.4byte	.LFB4
 4883 00d4 18000000 		.4byte	.LFE4-.LFB4
 4884 00d8 00000000 		.4byte	0
 4885 00dc 00000000 		.4byte	0
 4886              		.section	.debug_ranges,"",%progbits
 4887              	.Ldebug_ranges0:
 4888 0000 00000000 		.4byte	.LFB17
 4889 0004 2C000000 		.4byte	.LFE17
 4890 0008 00000000 		.4byte	.LFB18
 4891 000c 08000000 		.4byte	.LFE18
 4892 0010 00000000 		.4byte	.LFB6
 4893 0014 1C000000 		.4byte	.LFE6
 4894 0018 00000000 		.4byte	.LFB0
 4895 001c 10000000 		.4byte	.LFE0
 4896 0020 00000000 		.4byte	.LFB1
 4897 0024 40000000 		.4byte	.LFE1
 4898 0028 00000000 		.4byte	.LFB2
 4899 002c 2C000000 		.4byte	.LFE2
 4900 0030 00000000 		.4byte	.LFB3
 4901 0034 48000000 		.4byte	.LFE3
 4902 0038 00000000 		.4byte	.LFB5
 4903 003c 9C000000 		.4byte	.LFE5
 4904 0040 00000000 		.4byte	.LFB7
 4905 0044 3C000000 		.4byte	.LFE7
 4906 0048 00000000 		.4byte	.LFB8
 4907 004c 40000000 		.4byte	.LFE8
 4908 0050 00000000 		.4byte	.LFB9
 4909 0054 78000000 		.4byte	.LFE9
 4910 0058 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 140


 4911 005c 08000000 		.4byte	.LFE10
 4912 0060 00000000 		.4byte	.LFB11
 4913 0064 28000000 		.4byte	.LFE11
 4914 0068 00000000 		.4byte	.LFB12
 4915 006c 28000000 		.4byte	.LFE12
 4916 0070 00000000 		.4byte	.LFB13
 4917 0074 12000000 		.4byte	.LFE13
 4918 0078 00000000 		.4byte	.LFB14
 4919 007c 1C000000 		.4byte	.LFE14
 4920 0080 00000000 		.4byte	.LFB15
 4921 0084 1A000000 		.4byte	.LFE15
 4922 0088 00000000 		.4byte	.LFB21
 4923 008c 38000000 		.4byte	.LFE21
 4924 0090 00000000 		.4byte	.LFB22
 4925 0094 10000000 		.4byte	.LFE22
 4926 0098 00000000 		.4byte	.LFB23
 4927 009c 10000000 		.4byte	.LFE23
 4928 00a0 00000000 		.4byte	.LFB24
 4929 00a4 24000000 		.4byte	.LFE24
 4930 00a8 00000000 		.4byte	.LFB20
 4931 00ac 14000000 		.4byte	.LFE20
 4932 00b0 00000000 		.4byte	.LFB16
 4933 00b4 2C010000 		.4byte	.LFE16
 4934 00b8 00000000 		.4byte	.LFB19
 4935 00bc 20000000 		.4byte	.LFE19
 4936 00c0 00000000 		.4byte	.LFB4
 4937 00c4 18000000 		.4byte	.LFE4
 4938 00c8 00000000 		.4byte	0
 4939 00cc 00000000 		.4byte	0
 4940              		.section	.debug_line,"",%progbits
 4941              	.Ldebug_line0:
 4942 0000 6A040000 		.section	.debug_str,"MS",%progbits,1
 4942      0200E200 
 4942      00000201 
 4942      FB0E0D00 
 4942      01010101 
 4943              	.LASF129:
 4944 0000 73656E73 		.ascii	"sensorElement\000"
 4944      6F72456C 
 4944      656D656E 
 4944      7400
 4945              	.LASF119:
 4946 000e 43617053 		.ascii	"CapSense_1_SsCSDDisableMode\000"
 4946      656E7365 
 4946      5F315F53 
 4946      73435344 
 4946      44697361 
 4947              	.LASF113:
 4948 002a 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4948      656E7365 
 4948      5F315F46 
 4948      4C415348 
 4948      5F57445F 
 4949              	.LASF125:
 4950 0045 7363616E 		.ascii	"scanStatus\000"
 4950      53746174 
 4950      757300
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 141


 4951              	.LASF180:
 4952 0050 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4952      656E7365 
 4952      5F315F63 
 4952      75725261 
 4952      6D536E73 
 4953              	.LASF88:
 4954 0068 736E7254 		.ascii	"snrTestWidgetId\000"
 4954      65737457 
 4954      69646765 
 4954      74496400 
 4955              	.LASF188:
 4956 0078 43617053 		.ascii	"CapSense_1_CSDScan\000"
 4956      656E7365 
 4956      5F315F43 
 4956      53445363 
 4956      616E00
 4957              	.LASF8:
 4958 008b 756E7369 		.ascii	"unsigned int\000"
 4958      676E6564 
 4958      20696E74 
 4958      00
 4959              	.LASF138:
 4960 0098 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4960      656E7365 
 4960      5F315F53 
 4960      73536574 
 4960      494F7349 
 4961              	.LASF172:
 4962 00ba 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 4962      656E7365 
 4962      5F315F53 
 4962      73496E69 
 4962      7469616C 
 4963              	.LASF79:
 4964 00d2 7363616E 		.ascii	"scanCounter\000"
 4964      436F756E 
 4964      74657200 
 4965              	.LASF77:
 4966 00de 6877436C 		.ascii	"hwClock\000"
 4966      6F636B00 
 4967              	.LASF164:
 4968 00e6 43617053 		.ascii	"CapSense_1_SsSetWidgetSenseClkSrc\000"
 4968      656E7365 
 4968      5F315F53 
 4968      73536574 
 4968      57696467 
 4969              	.LASF98:
 4970 0108 6D61736B 		.ascii	"mask\000"
 4970      00
 4971              	.LASF183:
 4972 010d 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4972      656E7365 
 4972      5F315F63 
 4972      7572536E 
 4972      73494F50 
 4973              	.LASF173:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 142


 4974 0124 696E6974 		.ascii	"initStatus\000"
 4974      53746174 
 4974      757300
 4975              	.LASF140:
 4976 012f 72656756 		.ascii	"regValue\000"
 4976      616C7565 
 4976      00
 4977              	.LASF176:
 4978 0138 43617053 		.ascii	"CapSense_1_ioList\000"
 4978      656E7365 
 4978      5F315F69 
 4978      6F4C6973 
 4978      7400
 4979              	.LASF133:
 4980 014a 696E7465 		.ascii	"interruptState\000"
 4980      72727570 
 4980      74537461 
 4980      746500
 4981              	.LASF16:
 4982 0159 72656738 		.ascii	"reg8\000"
 4982      00
 4983              	.LASF201:
 4984 015e 43617053 		.ascii	"CapSense_1_IsBusy\000"
 4984      656E7365 
 4984      5F315F49 
 4984      73427573 
 4984      7900
 4985              	.LASF124:
 4986 0170 43617053 		.ascii	"CapSense_1_Scan\000"
 4986      656E7365 
 4986      5F315F53 
 4986      63616E00 
 4987              	.LASF191:
 4988 0180 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 4988      656E7365 
 4988      5F315F43 
 4988      5344436F 
 4988      6E6E6563 
 4989              	.LASF23:
 4990 0199 69446163 		.ascii	"iDacGain\000"
 4990      4761696E 
 4990      00
 4991              	.LASF149:
 4992 01a2 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 4992      656E7365 
 4992      5F315F43 
 4992      616C6962 
 4992      72617465 
 4993              	.LASF197:
 4994 01bd 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 4994      7453656E 
 4994      73655F54 
 4994      756E6553 
 4994      656E7369 
 4995              	.LASF26:
 4996 01d8 736E7343 		.ascii	"snsClkInputClock\000"
 4996      6C6B496E 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 143


 4996      70757443 
 4996      6C6F636B 
 4996      00
 4997              	.LASF137:
 4998 01e9 6D6F6465 		.ascii	"mode\000"
 4998      00
 4999              	.LASF166:
 5000 01ee 6C667372 		.ascii	"lfsrScale\000"
 5000      5363616C 
 5000      6500
 5001              	.LASF171:
 5002 01f8 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 5002      656E7365 
 5002      5F315F53 
 5002      73496E69 
 5002      7469616C 
 5003              	.LASF182:
 5004 021e 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 5004      656E7365 
 5004      5F315F73 
 5004      63616E46 
 5004      72657149 
 5005              	.LASF192:
 5006 0237 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 5006      656E7365 
 5006      5F315F53 
 5006      73435344 
 5006      496E6974 
 5007              	.LASF67:
 5008 0252 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 5008      656E7365 
 5008      5F315F52 
 5008      414D5F57 
 5008      445F4C49 
 5009              	.LASF169:
 5010 0270 63705769 		.ascii	"cpWidget\000"
 5010      64676574 
 5010      00
 5011              	.LASF131:
 5012 0279 656C7464 		.ascii	"eltdNum\000"
 5012      4E756D00 
 5013              	.LASF157:
 5014 0281 70747257 		.ascii	"ptrWdgt\000"
 5014      64677400 
 5015              	.LASF168:
 5016 0289 6175746F 		.ascii	"autoTuneStatus\000"
 5016      54756E65 
 5016      53746174 
 5016      757300
 5017              	.LASF160:
 5018 0298 43617053 		.ascii	"CapSense_1_SsCSDCalcPrsSize\000"
 5018      656E7365 
 5018      5F315F53 
 5018      73435344 
 5018      43616C63 
 5019              	.LASF179:
 5020 02b4 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 144


 5020      656E7365 
 5020      5F315F72 
 5020      65717565 
 5020      73745363 
 5021              	.LASF139:
 5022 02d4 6C6F6F70 		.ascii	"loopIndex\000"
 5022      496E6465 
 5022      7800
 5023              	.LASF12:
 5024 02de 666C6F61 		.ascii	"float\000"
 5024      7400
 5025              	.LASF101:
 5026 02e4 73686966 		.ascii	"shift\000"
 5026      7400
 5027              	.LASF167:
 5028 02ea 43617053 		.ascii	"CapSense_1_SsAutoTune\000"
 5028      656E7365 
 5028      5F315F53 
 5028      73417574 
 5028      6F54756E 
 5029              	.LASF123:
 5030 0300 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 5030      656E7365 
 5030      5F315F53 
 5030      65747570 
 5030      57696467 
 5031              	.LASF87:
 5032 0317 736E734C 		.ascii	"snsList\000"
 5032      69737400 
 5033              	.LASF7:
 5034 031f 6C6F6E67 		.ascii	"long long unsigned int\000"
 5034      206C6F6E 
 5034      6720756E 
 5034      7369676E 
 5034      65642069 
 5035              	.LASF89:
 5036 0336 736E7254 		.ascii	"snrTestSensorId\000"
 5036      65737453 
 5036      656E736F 
 5036      72496400 
 5037              	.LASF112:
 5038 0346 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 5038      4E6F6973 
 5038      65456E76 
 5038      6C7000
 5039              	.LASF110:
 5040 0355 77646774 		.ascii	"wdgtType\000"
 5040      54797065 
 5040      00
 5041              	.LASF165:
 5042 035e 6C667372 		.ascii	"lfsrSize\000"
 5042      53697A65 
 5042      00
 5043              	.LASF20:
 5044 0367 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 5044      656E7365 
 5044      5F315F4C 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 145


 5044      4F575F42 
 5044      534C4E5F 
 5045              	.LASF45:
 5046 0384 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 5046      656E7365 
 5046      5F315F53 
 5046      454E5345 
 5046      5F4D4554 
 5047              	.LASF184:
 5048 03a1 43617053 		.ascii	"CapSense_1_calibratedIdac\000"
 5048      656E7365 
 5048      5F315F63 
 5048      616C6962 
 5048      72617465 
 5049              	.LASF198:
 5050 03bb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5050      43313120 
 5050      352E342E 
 5050      31203230 
 5050      31363036 
 5051 03ee 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5051      20726576 
 5051      6973696F 
 5051      6E203233 
 5051      37373135 
 5052 0421 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5052      66756E63 
 5052      74696F6E 
 5052      2D736563 
 5052      74696F6E 
 5053              	.LASF85:
 5054 0449 6D6F6443 		.ascii	"modCsdClk\000"
 5054      7364436C 
 5054      6B00
 5055              	.LASF193:
 5056 0453 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 5056      656E7365 
 5056      5F315F49 
 5056      53525F53 
 5056      74617274 
 5057              	.LASF27:
 5058 046a 63616C54 		.ascii	"calTarget\000"
 5058      61726765 
 5058      7400
 5059              	.LASF118:
 5060 0474 43617053 		.ascii	"CapSense_1_SsTrimIdacs\000"
 5060      656E7365 
 5060      5F315F53 
 5060      73547269 
 5060      6D496461 
 5061              	.LASF95:
 5062 048b 64725074 		.ascii	"drPtr\000"
 5062      7200
 5063              	.LASF143:
 5064 0491 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 5064      656E7365 
 5064      5F315F53 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 146


 5064      73497372 
 5064      496E6974 
 5065              	.LASF29:
 5066 04ac 73696750 		.ascii	"sigPFC\000"
 5066      464300
 5067              	.LASF43:
 5068 04b3 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 5068      656E7365 
 5068      5F315F53 
 5068      454E5345 
 5068      5F4D4554 
 5069              	.LASF200:
 5070 04d2 443A5C53 		.ascii	"D:\\SMD Innovation\\4_1\\Design01.cydsn\000"
 5070      4D442049 
 5070      6E6E6F76 
 5070      6174696F 
 5070      6E5C345F 
 5071              	.LASF52:
 5072 04f7 6C6F7742 		.ascii	"lowBslnRst\000"
 5072      736C6E52 
 5072      737400
 5073              	.LASF135:
 5074 0502 43617053 		.ascii	"CapSense_1_SetPinState\000"
 5074      656E7365 
 5074      5F315F53 
 5074      65745069 
 5074      6E537461 
 5075              	.LASF136:
 5076 0519 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 5076      656E7365 
 5076      5F315F53 
 5076      73537769 
 5076      74636853 
 5077              	.LASF145:
 5078 0538 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 5078      656E7365 
 5078      5F315F53 
 5078      73536574 
 5078      4D6F6443 
 5079              	.LASF109:
 5080 055b 746F7461 		.ascii	"totalNumSns\000"
 5080      6C4E756D 
 5080      536E7300 
 5081              	.LASF39:
 5082 0567 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 5082      5453454E 
 5082      53455F43 
 5082      53445F4E 
 5082      4F495345 
 5083              	.LASF155:
 5084 058c 43617053 		.ascii	"CapSense_1_SsCSDGetColSnsClkDivider\000"
 5084      656E7365 
 5084      5F315F53 
 5084      73435344 
 5084      47657443 
 5085              	.LASF48:
 5086 05b0 6E6F6973 		.ascii	"noiseTh\000"
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 147


 5086      65546800 
 5087              	.LASF14:
 5088 05b8 63686172 		.ascii	"char\000"
 5088      00
 5089              	.LASF190:
 5090 05bd 43794578 		.ascii	"CyExitCriticalSection\000"
 5090      69744372 
 5090      69746963 
 5090      616C5365 
 5090      6374696F 
 5091              	.LASF126:
 5092 05d3 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 5092      656E7365 
 5092      5F315F53 
 5092      63616E41 
 5092      6C6C5769 
 5093              	.LASF99:
 5094 05ed 6873696F 		.ascii	"hsiomShift\000"
 5094      6D536869 
 5094      667400
 5095              	.LASF10:
 5096 05f8 75696E74 		.ascii	"uint16\000"
 5096      313600
 5097              	.LASF46:
 5098 05ff 7265736F 		.ascii	"resolution\000"
 5098      6C757469 
 5098      6F6E00
 5099              	.LASF92:
 5100 060a 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 5100      656E7365 
 5100      5F315F52 
 5100      414D5F53 
 5100      54525543 
 5101              	.LASF80:
 5102 0620 73746174 		.ascii	"status\000"
 5102      757300
 5103              	.LASF146:
 5104 0627 6D6F6443 		.ascii	"modClk\000"
 5104      6C6B00
 5105              	.LASF159:
 5106 062e 64697669 		.ascii	"dividerVal\000"
 5106      64657256 
 5106      616C00
 5107              	.LASF72:
 5108 0639 69646163 		.ascii	"idacComp\000"
 5108      436F6D70 
 5108      00
 5109              	.LASF94:
 5110 0642 70635074 		.ascii	"pcPtr\000"
 5110      7200
 5111              	.LASF6:
 5112 0648 6C6F6E67 		.ascii	"long long int\000"
 5112      206C6F6E 
 5112      6720696E 
 5112      7400
 5113              	.LASF19:
 5114 0656 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 148


 5114      656E7365 
 5114      5F315F54 
 5114      48524553 
 5114      484F4C44 
 5115              	.LASF51:
 5116 0670 6F6E4465 		.ascii	"onDebounce\000"
 5116      626F756E 
 5116      636500
 5117              	.LASF147:
 5118 067b 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 5118      656E7365 
 5118      5F315F53 
 5118      73536574 
 5118      536E7343 
 5119              	.LASF144:
 5120 069b 61646472 		.ascii	"address\000"
 5120      65737300 
 5121              	.LASF150:
 5122 06a3 63616C69 		.ascii	"calibrateStatus\000"
 5122      62726174 
 5122      65537461 
 5122      74757300 
 5123              	.LASF86:
 5124 06b3 77646774 		.ascii	"wdgtList\000"
 5124      4C697374 
 5124      00
 5125              	.LASF103:
 5126 06bc 70747232 		.ascii	"ptr2SnsFlash\000"
 5126      536E7346 
 5126      6C617368 
 5126      00
 5127              	.LASF91:
 5128 06c9 736E7254 		.ascii	"snrTestRawCount\000"
 5128      65737452 
 5128      6177436F 
 5128      756E7400 
 5129              	.LASF49:
 5130 06d9 6E4E6F69 		.ascii	"nNoiseTh\000"
 5130      73655468 
 5130      00
 5131              	.LASF84:
 5132 06e2 63736430 		.ascii	"csd0Config\000"
 5132      436F6E66 
 5132      696700
 5133              	.LASF18:
 5134 06ed 63796973 		.ascii	"cyisraddress\000"
 5134      72616464 
 5134      72657373 
 5134      00
 5135              	.LASF116:
 5136 06fa 6C6F6E67 		.ascii	"long double\000"
 5136      20646F75 
 5136      626C6500 
 5137              	.LASF57:
 5138 0706 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 5138      656E7365 
 5138      5F315F52 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 149


 5138      414D5F57 
 5138      445F4241 
 5139              	.LASF93:
 5140 0724 6873696F 		.ascii	"hsiomPtr\000"
 5140      6D507472 
 5140      00
 5141              	.LASF11:
 5142 072d 75696E74 		.ascii	"uint32\000"
 5142      333200
 5143              	.LASF50:
 5144 0734 68797374 		.ascii	"hysteresis\000"
 5144      65726573 
 5144      697300
 5145              	.LASF106:
 5146 073f 70747232 		.ascii	"ptr2FltrHistory\000"
 5146      466C7472 
 5146      48697374 
 5146      6F727900 
 5147              	.LASF40:
 5148 074f 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 5148      656E7365 
 5148      5F315F55 
 5148      4E444546 
 5148      494E4544 
 5149              	.LASF74:
 5150 0766 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 5150      656E7365 
 5150      5F315F52 
 5150      414D5F53 
 5150      4E535F4C 
 5151              	.LASF30:
 5152 0785 69446163 		.ascii	"iDac\000"
 5152      00
 5153              	.LASF199:
 5154 078a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 5154      72617465 
 5154      645F536F 
 5154      75726365 
 5154      5C50536F 
 5155              	.LASF28:
 5156 07b6 70747253 		.ascii	"ptrSenseClk\000"
 5156      656E7365 
 5156      436C6B00 
 5157              	.LASF127:
 5158 07c2 77646774 		.ascii	"wdgtIndex\000"
 5158      496E6465 
 5158      7800
 5159              	.LASF153:
 5160 07cc 736E7349 		.ascii	"snsIndex\000"
 5160      6E646578 
 5160      00
 5161              	.LASF174:
 5162 07d5 43617053 		.ascii	"CapSense_1_dsRam\000"
 5162      656E7365 
 5162      5F315F64 
 5162      7352616D 
 5162      00
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 150


 5163              	.LASF44:
 5164 07e6 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 5164      656E7365 
 5164      5F315F53 
 5164      454E5345 
 5164      5F4D4554 
 5165              	.LASF21:
 5166 0804 736E7343 		.ascii	"snsClkConstantR\000"
 5166      6C6B436F 
 5166      6E737461 
 5166      6E745200 
 5167              	.LASF17:
 5168 0814 72656733 		.ascii	"reg32\000"
 5168      3200
 5169              	.LASF90:
 5170 081a 736E7254 		.ascii	"snrTestScanCounter\000"
 5170      65737453 
 5170      63616E43 
 5170      6F756E74 
 5170      657200
 5171              	.LASF75:
 5172 082d 636F6E66 		.ascii	"configId\000"
 5172      69674964 
 5172      00
 5173              	.LASF105:
 5174 0836 70747232 		.ascii	"ptr2SnsRam\000"
 5174      536E7352 
 5174      616D00
 5175              	.LASF115:
 5176 0841 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 5176      656E7365 
 5176      5F315F46 
 5176      4C415348 
 5176      5F535452 
 5177              	.LASF83:
 5178 0859 736E7353 		.ascii	"snsStatus\000"
 5178      74617475 
 5178      7300
 5179              	.LASF142:
 5180 0863 706F7374 		.ascii	"postScanStatus\000"
 5180      5363616E 
 5180      53746174 
 5180      757300
 5181              	.LASF55:
 5182 0872 736E7343 		.ascii	"snsClkSource\000"
 5182      6C6B536F 
 5182      75726365 
 5182      00
 5183              	.LASF56:
 5184 087f 73697A65 		.ascii	"sizetype\000"
 5184      74797065 
 5184      00
 5185              	.LASF195:
 5186 0888 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 5186      656E7365 
 5186      5F315F43 
 5186      53444469 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 151


 5186      73636F6E 
 5187              	.LASF2:
 5188 08a4 73686F72 		.ascii	"short int\000"
 5188      7420696E 
 5188      7400
 5189              	.LASF158:
 5190 08ae 43617053 		.ascii	"CapSense_1_SsCSDSetColSnsClkDivider\000"
 5190      656E7365 
 5190      5F315F53 
 5190      73435344 
 5190      53657443 
 5191              	.LASF4:
 5192 08d2 6C6F6E67 		.ascii	"long int\000"
 5192      20696E74 
 5192      00
 5193              	.LASF81:
 5194 08db 77646774 		.ascii	"wdgtEnable\000"
 5194      456E6162 
 5194      6C6500
 5195              	.LASF148:
 5196 08e6 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 5196      656E7365 
 5196      5F315F53 
 5196      73536574 
 5196      436C6F63 
 5197              	.LASF175:
 5198 0904 43617053 		.ascii	"CapSense_1_dsFlash\000"
 5198      656E7365 
 5198      5F315F64 
 5198      73466C61 
 5198      736800
 5199              	.LASF70:
 5200 0917 64696666 		.ascii	"diff\000"
 5200      00
 5201              	.LASF78:
 5202 091c 74756E65 		.ascii	"tunerCmd\000"
 5202      72436D64 
 5202      00
 5203              	.LASF96:
 5204 0925 70735074 		.ascii	"psPtr\000"
 5204      7200
 5205              	.LASF42:
 5206 092b 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 5206      656E7365 
 5206      5F315F53 
 5206      454E5345 
 5206      5F4D4554 
 5207              	.LASF59:
 5208 0949 62757474 		.ascii	"button0\000"
 5208      6F6E3000 
 5209              	.LASF60:
 5210 0951 62757474 		.ascii	"button1\000"
 5210      6F6E3100 
 5211              	.LASF61:
 5212 0959 62757474 		.ascii	"button2\000"
 5212      6F6E3200 
 5213              	.LASF62:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 152


 5214 0961 62757474 		.ascii	"button3\000"
 5214      6F6E3300 
 5215              	.LASF65:
 5216 0969 62757474 		.ascii	"button4\000"
 5216      6F6E3400 
 5217              	.LASF63:
 5218 0971 62757474 		.ascii	"button5\000"
 5218      6F6E3500 
 5219              	.LASF64:
 5220 0979 62757474 		.ascii	"button6\000"
 5220      6F6E3600 
 5221              	.LASF66:
 5222 0981 62757474 		.ascii	"button7\000"
 5222      6F6E3700 
 5223              	.LASF194:
 5224 0989 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 5224      656E7365 
 5224      5F315F43 
 5224      53444361 
 5224      6C696272 
 5225              	.LASF111:
 5226 09a7 6E756D43 		.ascii	"numCols\000"
 5226      6F6C7300 
 5227              	.LASF185:
 5228 09af 43617053 		.ascii	"CapSense_1_calibratedRawcount\000"
 5228      656E7365 
 5228      5F315F63 
 5228      616C6962 
 5228      72617465 
 5229              	.LASF24:
 5230 09cd 66696E67 		.ascii	"fingerCap\000"
 5230      65724361 
 5230      7000
 5231              	.LASF82:
 5232 09d7 77646774 		.ascii	"wdgtStatus\000"
 5232      53746174 
 5232      757300
 5233              	.LASF187:
 5234 09e2 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 5234      656E7365 
 5234      5F315F43 
 5234      53445365 
 5234      74757057 
 5235              	.LASF178:
 5236 09fc 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 5236      656E7365 
 5236      5F315F73 
 5236      656E736F 
 5236      72496E64 
 5237              	.LASF196:
 5238 0a13 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 5238      7453656E 
 5238      73655F54 
 5238      756E6550 
 5238      72657363 
 5239              	.LASF162:
 5240 0a2d 70727353 		.ascii	"prsSize\000"
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 153


 5240      697A6500 
 5241              	.LASF41:
 5242 0a35 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 5242      656E7365 
 5242      5F315F53 
 5242      454E5345 
 5242      5F4D4554 
 5243              	.LASF100:
 5244 0a53 64725368 		.ascii	"drShift\000"
 5244      69667400 
 5245              	.LASF5:
 5246 0a5b 6C6F6E67 		.ascii	"long unsigned int\000"
 5246      20756E73 
 5246      69676E65 
 5246      6420696E 
 5246      7400
 5247              	.LASF156:
 5248 0a6d 72657456 		.ascii	"retVal\000"
 5248      616C00
 5249              	.LASF22:
 5250 0a74 76526566 		.ascii	"vRef\000"
 5250      00
 5251              	.LASF53:
 5252 0a79 69646163 		.ascii	"idacMod\000"
 5252      4D6F6400 
 5253              	.LASF107:
 5254 0a81 70747232 		.ascii	"ptr2DebounceArr\000"
 5254      4465626F 
 5254      756E6365 
 5254      41727200 
 5255              	.LASF186:
 5256 0a91 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 5256      656E7365 
 5256      5F315F53 
 5256      73435344 
 5256      456C6563 
 5257              	.LASF47:
 5258 0ab0 66696E67 		.ascii	"fingerTh\000"
 5258      65725468 
 5258      00
 5259              	.LASF151:
 5260 0ab9 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 5260      656E7365 
 5260      5F315F43 
 5260      616C6962 
 5260      72617465 
 5261              	.LASF69:
 5262 0ad8 62736C6E 		.ascii	"bslnExt\000"
 5262      45787400 
 5263              	.LASF15:
 5264 0ae0 63797374 		.ascii	"cystatus\000"
 5264      61747573 
 5264      00
 5265              	.LASF1:
 5266 0ae9 756E7369 		.ascii	"unsigned char\000"
 5266      676E6564 
 5266      20636861 
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 154


 5266      7200
 5267              	.LASF120:
 5268 0af7 7472696D 		.ascii	"trimValue\000"
 5268      56616C75 
 5268      6500
 5269              	.LASF108:
 5270 0b01 73746174 		.ascii	"staticConfig\000"
 5270      6963436F 
 5270      6E666967 
 5270      00
 5271              	.LASF25:
 5272 0b0e 73656E73 		.ascii	"sensorCap\000"
 5272      6F724361 
 5272      7000
 5273              	.LASF134:
 5274 0b18 696F5074 		.ascii	"ioPtr\000"
 5274      7200
 5275              	.LASF104:
 5276 0b1e 70747232 		.ascii	"ptr2WdgtRam\000"
 5276      57646774 
 5276      52616D00 
 5277              	.LASF130:
 5278 0b2a 73746174 		.ascii	"state\000"
 5278      6500
 5279              	.LASF132:
 5280 0b30 656C7464 		.ascii	"eltdIndex\000"
 5280      496E6465 
 5280      7800
 5281              	.LASF97:
 5282 0b3a 6873696F 		.ascii	"hsiomMask\000"
 5282      6D4D6173 
 5282      6B00
 5283              	.LASF181:
 5284 0b44 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 5284      656E7365 
 5284      5F315F63 
 5284      75727265 
 5284      6E745365 
 5285              	.LASF154:
 5286 0b62 63757253 		.ascii	"curSnsIOPtr\000"
 5286      6E73494F 
 5286      50747200 
 5287              	.LASF54:
 5288 0b6e 736E7343 		.ascii	"snsClk\000"
 5288      6C6B00
 5289              	.LASF189:
 5290 0b75 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5290      74657243 
 5290      72697469 
 5290      63616C53 
 5290      65637469 
 5291              	.LASF0:
 5292 0b8c 7369676E 		.ascii	"signed char\000"
 5292      65642063 
 5292      68617200 
 5293              	.LASF68:
 5294 0b98 62736C6E 		.ascii	"bsln\000"
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 155


 5294      00
 5295              	.LASF3:
 5296 0b9d 73686F72 		.ascii	"short unsigned int\000"
 5296      7420756E 
 5296      7369676E 
 5296      65642069 
 5296      6E7400
 5297              	.LASF31:
 5298 0bb0 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 5298      5F54554E 
 5298      455F434F 
 5298      4E464947 
 5298      5F545950 
 5299              	.LASF117:
 5300 0bc6 43617053 		.ascii	"CapSense_1_SsTrimIdacsSourcing\000"
 5300      656E7365 
 5300      5F315F53 
 5300      73547269 
 5300      6D496461 
 5301              	.LASF102:
 5302 0be5 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 5302      656E7365 
 5302      5F315F46 
 5302      4C415348 
 5302      5F494F5F 
 5303              	.LASF121:
 5304 0c00 6E657752 		.ascii	"newRegValue\000"
 5304      65675661 
 5304      6C756500 
 5305              	.LASF152:
 5306 0c0c 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 5306      656E7365 
 5306      5F315F53 
 5306      73436C65 
 5306      61724353 
 5307              	.LASF9:
 5308 0c29 75696E74 		.ascii	"uint8\000"
 5308      3800
 5309              	.LASF13:
 5310 0c2f 646F7562 		.ascii	"double\000"
 5310      6C6500
 5311              	.LASF71:
 5312 0c36 6E656742 		.ascii	"negBslnRstCnt\000"
 5312      736C6E52 
 5312      7374436E 
 5312      7400
 5313              	.LASF73:
 5314 0c44 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 5314      656E7365 
 5314      5F315F52 
 5314      414D5F53 
 5314      4E535F53 
 5315              	.LASF32:
 5316 0c5e 70617261 		.ascii	"param0\000"
 5316      6D3000
 5317              	.LASF33:
 5318 0c65 70617261 		.ascii	"param1\000"
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 156


 5318      6D3100
 5319              	.LASF34:
 5320 0c6c 70617261 		.ascii	"param2\000"
 5320      6D3200
 5321              	.LASF35:
 5322 0c73 70617261 		.ascii	"param3\000"
 5322      6D3300
 5323              	.LASF36:
 5324 0c7a 70617261 		.ascii	"param4\000"
 5324      6D3400
 5325              	.LASF37:
 5326 0c81 70617261 		.ascii	"param5\000"
 5326      6D3500
 5327              	.LASF38:
 5328 0c88 70617261 		.ascii	"param6\000"
 5328      6D3600
 5329              	.LASF170:
 5330 0c8f 6175746F 		.ascii	"autoTuneConfig\000"
 5330      54756E65 
 5330      436F6E66 
 5330      696700
 5331              	.LASF161:
 5332 0c9e 736E7343 		.ascii	"snsClkDivider\000"
 5332      6C6B4469 
 5332      76696465 
 5332      7200
 5333              	.LASF163:
 5334 0cac 6D6F6443 		.ascii	"modClkDivider\000"
 5334      6C6B4469 
 5334      76696465 
 5334      7200
 5335              	.LASF76:
 5336 0cba 64657669 		.ascii	"deviceId\000"
 5336      63654964 
 5336      00
 5337              	.LASF122:
 5338 0cc3 77696467 		.ascii	"widgetStatus\000"
 5338      65745374 
 5338      61747573 
 5338      00
 5339              	.LASF58:
 5340 0cd0 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 5340      656E7365 
 5340      5F315F52 
 5340      414D5F57 
 5340      445F4255 
 5341              	.LASF128:
 5342 0cf0 77696467 		.ascii	"widgetId\000"
 5342      65744964 
 5342      00
 5343              	.LASF141:
 5344 0cf9 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 5344      656E7365 
 5344      5F315F53 
 5344      73506F73 
 5344      74416C6C 
 5345              	.LASF177:
ARM GAS  C:\Users\Mayur\AppData\Local\Temp\cc4xjbe8.s 			page 157


 5346 0d19 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5346      656E7365 
 5346      5F315F77 
 5346      69646765 
 5346      74496E64 
 5347              	.LASF114:
 5348 0d30 77646774 		.ascii	"wdgtArray\000"
 5348      41727261 
 5348      7900
 5349              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
